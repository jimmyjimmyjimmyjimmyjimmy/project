{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Layout/customizer/Customizer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport { CustomizerProps, SidebarProps, ThemeProps, RTLProps, RoundBordersProps, BlocksShadowsProps } from '@/shared/prop-types/ReducerProps';\nimport ToggleTheme from './ToggleTheme';\nimport ToggleCollapsedMenu from './ToggleCollapsedMenu';\nimport ToggleRoundBorders from './ToggleRoundBorders';\nimport ToggleShadow from './ToggleShadow';\nimport ToggleTopMenu from './ToggleTopMenu';\nimport ToggleRTL from './ToggleRTL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = `${process.env.PUBLIC_URL}/img/settings.svg`;\n\nconst Customizer = ({\n  changeSidebarVisibility,\n  sidebar,\n  customizer,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows,\n  toggleTopNavigation,\n  changeToDark,\n  changeToLight,\n  changeToRTL,\n  changeToLTR,\n  changeRoundBordersOn,\n  changeRoundBordersOff,\n  changeBlocksShadowsOn,\n  changeBlocksShadowsOff\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const customizerClass = classNames({\n    customizer__wrap: true,\n    'customizer__wrap--open': isOpen\n  });\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"customizer__btn\",\n      type: \"button\",\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"customizer__btn-icon\",\n        src: settings,\n        alt: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: customizerClass,\n      hidden: !isOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customizer__title-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Theme Customizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"customizer__close-btn\",\n          type: \"button\",\n          onClick: handleOpen,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"customizer__caption\",\n        children: \"This customizer allows you to see the different variations of the EasyDev. Create your own visual style for every project you do!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleCollapsedMenu, {\n        changeSidebarVisibility: changeSidebarVisibility,\n        sidebar: sidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleTopMenu, {\n        toggleTopNavigation: toggleTopNavigation,\n        customizer: customizer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleTheme, {\n        changeToDark: changeToDark,\n        changeToLight: changeToLight,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleRoundBorders, {\n        changeRoundBordersOn: changeRoundBordersOn,\n        changeRoundBordersOff: changeRoundBordersOff,\n        roundBorders: roundBorders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleShadow, {\n        changeBlocksShadowsOn: changeBlocksShadowsOn,\n        changeBlocksShadowsOff: changeBlocksShadowsOff,\n        blocksShadows: blocksShadows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleRTL, {\n        changeToRTL: changeToRTL,\n        changeToLTR: changeToLTR,\n        rtl: rtl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Customizer, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Customizer;\nCustomizer.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n  toggleTopNavigation: PropTypes.func.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeToRTL: PropTypes.func.isRequired,\n  changeToLTR: PropTypes.func.isRequired,\n  changeRoundBordersOn: PropTypes.func.isRequired,\n  changeRoundBordersOff: PropTypes.func.isRequired,\n  changeBlocksShadowsOn: PropTypes.func.isRequired,\n  changeBlocksShadowsOff: PropTypes.func.isRequired\n};\nexport default Customizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customizer\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Layout/customizer/Customizer.jsx"],"names":["React","useState","PropTypes","classNames","CloseIcon","CustomizerProps","SidebarProps","ThemeProps","RTLProps","RoundBordersProps","BlocksShadowsProps","ToggleTheme","ToggleCollapsedMenu","ToggleRoundBorders","ToggleShadow","ToggleTopMenu","ToggleRTL","settings","process","env","PUBLIC_URL","Customizer","changeSidebarVisibility","sidebar","customizer","theme","rtl","roundBorders","blocksShadows","toggleTopNavigation","changeToDark","changeToLight","changeToRTL","changeToLTR","changeRoundBordersOn","changeRoundBordersOff","changeBlocksShadowsOn","changeBlocksShadowsOff","isOpen","setIsOpen","customizerClass","customizer__wrap","handleOpen","propTypes","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport {\n  CustomizerProps,\n  SidebarProps,\n  ThemeProps,\n  RTLProps,\n  RoundBordersProps,\n  BlocksShadowsProps,\n} from '@/shared/prop-types/ReducerProps';\nimport ToggleTheme from './ToggleTheme';\nimport ToggleCollapsedMenu from './ToggleCollapsedMenu';\nimport ToggleRoundBorders from './ToggleRoundBorders';\nimport ToggleShadow from './ToggleShadow';\nimport ToggleTopMenu from './ToggleTopMenu';\nimport ToggleRTL from './ToggleRTL';\n\nconst settings = `${process.env.PUBLIC_URL}/img/settings.svg`;\n\nconst Customizer = ({\n  changeSidebarVisibility,\n  sidebar,\n  customizer,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows,\n  toggleTopNavigation,\n  changeToDark,\n  changeToLight,\n  changeToRTL,\n  changeToLTR,\n  changeRoundBordersOn,\n  changeRoundBordersOff,\n  changeBlocksShadowsOn,\n  changeBlocksShadowsOff,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const customizerClass = classNames({\n    customizer__wrap: true,\n    'customizer__wrap--open': isOpen,\n  });\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"customizer\">\n      <button className=\"customizer__btn\" type=\"button\" onClick={handleOpen}>\n        <img className=\"customizer__btn-icon\" src={settings} alt=\"icon\" />\n      </button>\n      <div className={customizerClass} hidden={!isOpen}>\n        <div className=\"customizer__title-wrap\">\n          <h5>Theme Customizer</h5>\n          <button className=\"customizer__close-btn\" type=\"button\" onClick={handleOpen}>\n            <CloseIcon />\n          </button>\n        </div>\n        <p className=\"customizer__caption\">This customizer allows you to see the different variations of the EasyDev.\n          Create your own visual style for every project you do!\n        </p>\n        <ToggleCollapsedMenu changeSidebarVisibility={changeSidebarVisibility} sidebar={sidebar} />\n        <ToggleTopMenu toggleTopNavigation={toggleTopNavigation} customizer={customizer} />\n        <ToggleTheme changeToDark={changeToDark} changeToLight={changeToLight} theme={theme} />\n        <ToggleRoundBorders\n          changeRoundBordersOn={changeRoundBordersOn}\n          changeRoundBordersOff={changeRoundBordersOff}\n          roundBorders={roundBorders}\n        />\n        <ToggleShadow\n          changeBlocksShadowsOn={changeBlocksShadowsOn}\n          changeBlocksShadowsOff={changeBlocksShadowsOff}\n          blocksShadows={blocksShadows}\n        />\n        <ToggleRTL changeToRTL={changeToRTL} changeToLTR={changeToLTR} rtl={rtl} />\n      </div>\n    </div>\n  );\n};\n\nCustomizer.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n  toggleTopNavigation: PropTypes.func.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeToRTL: PropTypes.func.isRequired,\n  changeToLTR: PropTypes.func.isRequired,\n  changeRoundBordersOn: PropTypes.func.isRequired,\n  changeRoundBordersOff: PropTypes.func.isRequired,\n  changeBlocksShadowsOn: PropTypes.func.isRequired,\n  changeBlocksShadowsOff: PropTypes.func.isRequired,\n};\n\nexport default Customizer;\n"]},"metadata":{},"sourceType":"module"}