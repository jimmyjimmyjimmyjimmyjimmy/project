{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Todo/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport { fetchTodoListData, editTodoElement, deleteTodoElement, addTodoElement } from './redux/actions';\nimport ItemEditModal from './components/form/ItemEditModal';\nimport TodoListWrapper from './components/TodoList';\nimport TodoSidebar from './components/TodoSidebar';\nimport todoCard from './types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DividerLine = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(Col, {\n  md: 12,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app__divider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app__divider-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"todo-app__divider-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app__divider-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n\n_c = DividerLine;\nDividerLine.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nconst Todo = ({\n  theme,\n  rtl,\n  todoElements,\n  addTodoElementAction,\n  editTodoElementAction,\n  fetchTodoListDataAction,\n  deleteTodoElementAction,\n  isFetching\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const [incompleteTodoElements, setIncompleteTodoElements] = useState(null);\n  const [completedTodoElements, setCompletedTodoElements] = useState(null);\n  const [archivedTodoElements, setArchivedTodoElements] = useState(null);\n  const [currentEditItem, setCurrentEditItem] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [filterByPriority, setFilterByPriority] = useState('');\n  const [prevTodoElements, setPrevTodoElements] = useState(null);\n  useEffect(() => {\n    if (JSON.stringify(todoElements) !== JSON.stringify(prevTodoElements)) {\n      if (todoElements.length === 0 && prevTodoElements === null) {\n        // You can delete it if you need\n        fetchTodoListDataAction();\n      }\n\n      const filteredData = [...todoElements];\n      let activeTodoElements = filteredData.filter(item => !item.data.isArchived);\n\n      if (filterByPriority !== '') {\n        activeTodoElements = activeTodoElements.filter(item => item.data.priority === filterByPriority);\n      }\n\n      setIncompleteTodoElements(activeTodoElements.filter(item => !item.data.isCompleted));\n      setCompletedTodoElements(activeTodoElements.filter(item => item.data.isCompleted));\n      setArchivedTodoElements(filteredData.filter(item => item.data.isArchived));\n      setPrevTodoElements([...todoElements]);\n    }\n  }, [prevTodoElements, fetchTodoListDataAction, todoElements, filterByPriority]);\n\n  const changeShowEditModal = data => {\n    setShowEditModal(!showEditModal);\n    setCurrentEditItem(data);\n  };\n\n  const filteringByPriority = priority => {\n    let filteredByPriorityTodoElements = [];\n\n    if (priority === '') {\n      filteredByPriorityTodoElements = [...todoElements];\n    } else {\n      filteredByPriorityTodoElements = todoElements.filter(item => item.data.priority === priority);\n    }\n\n    setFilterByPriority(priority);\n    setIncompleteTodoElements(filteredByPriorityTodoElements.filter(item => !item.data.isCompleted));\n    setCompletedTodoElements(filteredByPriorityTodoElements.filter(item => item.data.isCompleted));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"page-title\",\n          children: t('todo_application.page_title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        xl: 10,\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DividerLine, {\n            title: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n            todoElements: incompleteTodoElements,\n            changeShowEditModal: changeShowEditModal,\n            editTodoElementAction: editTodoElementAction,\n            isFetching: isFetching\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DividerLine, {\n            title: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n            isCompleted: true,\n            todoElements: completedTodoElements,\n            changeShowEditModal: changeShowEditModal,\n            editTodoElementAction: editTodoElementAction,\n            isFetching: isFetching\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(DividerLine, {\n              title: \"Archived\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n              isArchived: true,\n              todoElements: archivedTodoElements,\n              editTodoElementAction: editTodoElementAction,\n              deleteTodoElementAction: deleteTodoElementAction,\n              isFetching: isFetching\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(TodoSidebar, {\n          changeShowEditModal: changeShowEditModal,\n          filterByPriority: filteringByPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemEditModal, {\n        theme: theme,\n        rtl: rtl,\n        showEditModal: showEditModal,\n        currentEditItem: currentEditItem && currentEditItem.data,\n        changeShowEditModal: changeShowEditModal,\n        todoElements: todoElements,\n        addTodoElementAction: addTodoElementAction,\n        editTodoElementAction: editTodoElementAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"lQIzoRMZBzJIqVWlDqVfCS8Kcm0=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Todo;\nTodo.propTypes = {\n  theme: ThemeProps.isRequired,\n  rtl: PropTypes.string.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired,\n  fetchTodoListDataAction: PropTypes.func.isRequired,\n  editTodoElementAction: PropTypes.func.isRequired,\n  addTodoElementAction: PropTypes.func.isRequired,\n  deleteTodoElementAction: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  const todoElements = state.todo && state.todo.data && state.todo.data.elements && state.todo.data.elements.length > 0 ? [...state.todo.data.elements] : [];\n  return {\n    todoElements,\n    isFetching: state.todo && state.todo.isFetching,\n    theme: state.theme,\n    rtl: state.rtl && state.rtl.direction\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchTodoListDataAction: fetchTodoListData,\n  editTodoElementAction: editTodoElement,\n  addTodoElementAction: addTodoElement,\n  deleteTodoElementAction: deleteTodoElement\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DividerLine\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Todo/index.jsx"],"names":["React","useState","useEffect","Fragment","PropTypes","connect","useTranslation","Col","Container","Row","ThemeProps","fetchTodoListData","editTodoElement","deleteTodoElement","addTodoElement","ItemEditModal","TodoListWrapper","TodoSidebar","todoCard","DividerLine","title","propTypes","string","isRequired","Todo","theme","rtl","todoElements","addTodoElementAction","editTodoElementAction","fetchTodoListDataAction","deleteTodoElementAction","isFetching","t","incompleteTodoElements","setIncompleteTodoElements","completedTodoElements","setCompletedTodoElements","archivedTodoElements","setArchivedTodoElements","currentEditItem","setCurrentEditItem","showEditModal","setShowEditModal","filterByPriority","setFilterByPriority","prevTodoElements","setPrevTodoElements","JSON","stringify","length","filteredData","activeTodoElements","filter","item","data","isArchived","priority","isCompleted","changeShowEditModal","filteringByPriority","filteredByPriorityTodoElements","arrayOf","func","bool","mapStateToProps","state","todo","elements","direction","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport {\n  fetchTodoListData,\n  editTodoElement,\n  deleteTodoElement, addTodoElement,\n} from './redux/actions';\nimport ItemEditModal from './components/form/ItemEditModal';\nimport TodoListWrapper from './components/TodoList';\nimport TodoSidebar from './components/TodoSidebar';\nimport todoCard from './types';\n\nconst DividerLine = ({ title }) => (\n  <Col md={12}>\n    <div className=\"todo-app__divider\">\n      <div className=\"todo-app__divider-line\" />\n      <p className=\"todo-app__divider-title\">{title}</p>\n      <div className=\"todo-app__divider-line\" />\n    </div>\n  </Col>\n);\n\nDividerLine.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nconst Todo = ({\n  theme, rtl,\n  todoElements,\n  addTodoElementAction, editTodoElementAction, fetchTodoListDataAction, deleteTodoElementAction,\n  isFetching,\n}) => {\n  const { t } = useTranslation('common');\n  const [incompleteTodoElements, setIncompleteTodoElements] = useState(null);\n  const [completedTodoElements, setCompletedTodoElements] = useState(null);\n  const [archivedTodoElements, setArchivedTodoElements] = useState(null);\n  const [currentEditItem, setCurrentEditItem] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [filterByPriority, setFilterByPriority] = useState('');\n  const [prevTodoElements, setPrevTodoElements] = useState(null);\n\n  useEffect(() => {\n    if (JSON.stringify(todoElements) !== JSON.stringify(prevTodoElements)) {\n      if (todoElements.length === 0 && prevTodoElements === null) { // You can delete it if you need\n        fetchTodoListDataAction();\n      }\n      const filteredData = [...todoElements];\n      let activeTodoElements = filteredData.filter(item => !item.data.isArchived);\n\n      if (filterByPriority !== '') {\n        activeTodoElements = activeTodoElements.filter(item => item.data.priority === filterByPriority);\n      }\n      setIncompleteTodoElements(activeTodoElements.filter(item => !item.data.isCompleted));\n      setCompletedTodoElements(activeTodoElements.filter(item => item.data.isCompleted));\n      setArchivedTodoElements(filteredData.filter(item => item.data.isArchived));\n      setPrevTodoElements([...todoElements]);\n    }\n  }, [prevTodoElements, fetchTodoListDataAction, todoElements, filterByPriority]);\n\n  const changeShowEditModal = (data) => {\n    setShowEditModal(!showEditModal);\n    setCurrentEditItem(data);\n  };\n\n  const filteringByPriority = (priority) => {\n    let filteredByPriorityTodoElements = [];\n    if (priority === '') {\n      filteredByPriorityTodoElements = [...todoElements];\n    } else {\n      filteredByPriorityTodoElements = todoElements.filter(item => item.data.priority === priority);\n    }\n    setFilterByPriority(priority);\n    setIncompleteTodoElements(filteredByPriorityTodoElements.filter(item => !item.data.isCompleted));\n    setCompletedTodoElements(filteredByPriorityTodoElements.filter(item => item.data.isCompleted));\n  };\n\n  return (\n    <Container className=\"todo-app\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">{t('todo_application.page_title')}</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={9} xl={10}>\n          <Fragment>\n            <DividerLine title=\"Active\" />\n            <TodoListWrapper\n              todoElements={incompleteTodoElements}\n              changeShowEditModal={changeShowEditModal}\n              editTodoElementAction={editTodoElementAction}\n              isFetching={isFetching}\n            />\n            <DividerLine title=\"Done\" />\n            <TodoListWrapper\n              isCompleted\n              todoElements={completedTodoElements}\n              changeShowEditModal={changeShowEditModal}\n              editTodoElementAction={editTodoElementAction}\n              isFetching={isFetching}\n            />\n            <div>\n              <DividerLine title=\"Archived\" />\n              <TodoListWrapper\n                isArchived\n                todoElements={archivedTodoElements}\n                editTodoElementAction={editTodoElementAction}\n                deleteTodoElementAction={deleteTodoElementAction}\n                isFetching={isFetching}\n              />\n            </div>\n          </Fragment>\n        </Col>\n        <Col md={3} xl={2}>\n          <TodoSidebar\n            changeShowEditModal={changeShowEditModal}\n            filterByPriority={filteringByPriority}\n          />\n        </Col>\n        <ItemEditModal\n          theme={theme}\n          rtl={rtl}\n          showEditModal={showEditModal}\n          currentEditItem={currentEditItem && currentEditItem.data}\n          changeShowEditModal={changeShowEditModal}\n          todoElements={todoElements}\n          addTodoElementAction={addTodoElementAction}\n          editTodoElementAction={editTodoElementAction}\n        />\n      </Row>\n    </Container>\n  );\n};\n\nTodo.propTypes = {\n  theme: ThemeProps.isRequired,\n  rtl: PropTypes.string.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired,\n  fetchTodoListDataAction: PropTypes.func.isRequired,\n  editTodoElementAction: PropTypes.func.isRequired,\n  addTodoElementAction: PropTypes.func.isRequired,\n  deleteTodoElementAction: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const todoElements = state.todo && state.todo.data && state.todo.data.elements\n    && state.todo.data.elements.length > 0 ? [...state.todo.data.elements] : [];\n  return ({\n    todoElements,\n    isFetching: state.todo && state.todo.isFetching,\n    theme: state.theme,\n    rtl: state.rtl && state.rtl.direction,\n  });\n};\n\nconst mapDispatchToProps = {\n  fetchTodoListDataAction: fetchTodoListData,\n  editTodoElementAction: editTodoElement,\n  addTodoElementAction: addTodoElement,\n  deleteTodoElementAction: deleteTodoElement,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\n"]},"metadata":{},"sourceType":"module"}