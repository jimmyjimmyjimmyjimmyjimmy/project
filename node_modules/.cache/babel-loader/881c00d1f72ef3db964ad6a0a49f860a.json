{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Charts/ReactVis/components/LineSeriesWithManyColors.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, FlexibleWidthXYPlot, YAxis } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomData = () => new Array(20).fill(0).map((row, i) => Object({\n  color: i,\n  key: i,\n  data: new Array(100).fill(0).map((col, j) => Object({\n    x: j,\n    y: (i / 10 + 1) * Math.sin(Math.PI * (i + j) / 50)\n  })),\n  opacity: 0.8\n}));\n\nconst data = getRandomData();\n\nconst LineSeriesWithManyColors = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: 12,\n    md: 12,\n    lg: 12,\n    xl: 4,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('charts.react_vis.line_series_with_many_colors')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react-vis\",\n          dir: \"ltr\",\n          children: /*#__PURE__*/_jsxDEV(FlexibleWidthXYPlot, {\n            height: 250,\n            colorType: \"linear\",\n            colorDomain: [0, 9],\n            colorRange: ['#70bbfd', '#c88ffa'],\n            children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), data.map(props => /*#__PURE__*/_jsxDEV(LineSeries, {\n              className: \"react-vis__svg-line\",\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 34\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineSeriesWithManyColors, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LineSeriesWithManyColors;\nexport default LineSeriesWithManyColors;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineSeriesWithManyColors\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Charts/ReactVis/components/LineSeriesWithManyColors.jsx"],"names":["React","useTranslation","Card","CardBody","Col","HorizontalGridLines","LineSeries","VerticalGridLines","XAxis","FlexibleWidthXYPlot","YAxis","getRandomData","Array","fill","map","row","i","Object","color","key","data","col","j","x","y","Math","sin","PI","opacity","LineSeriesWithManyColors","t","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SACEC,mBADF,EACuBC,UADvB,EACmCC,iBADnC,EACsDC,KADtD,EAC6DC,mBAD7D,EACkFC,KADlF,QAEO,WAFP;;;AAIA,MAAMC,aAAa,GAAG,MAAM,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,CAACC,GAAD,EAAMC,CAAN,KAAYC,MAAM,CAAC;AACvEC,EAAAA,KAAK,EAAEF,CADgE;AAEvEG,EAAAA,GAAG,EAAEH,CAFkE;AAGvEI,EAAAA,IAAI,EAAE,IAAIR,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,CAApB,EAAuBC,GAAvB,CAA2B,CAACO,GAAD,EAAMC,CAAN,KAAYL,MAAM,CAAC;AAClDM,IAAAA,CAAC,EAAED,CAD+C;AAElDE,IAAAA,CAAC,EAAE,CAAER,CAAC,GAAG,EAAL,GAAW,CAAZ,IAAiBS,IAAI,CAACC,GAAL,CAAUD,IAAI,CAACE,EAAL,IAAWX,CAAC,GAAGM,CAAf,CAAD,GAAsB,EAA/B;AAF8B,GAAD,CAA7C,CAHiE;AAOvEM,EAAAA,OAAO,EAAE;AAP8D,CAAD,CAA5C,CAA5B;;AAUA,MAAMR,IAAI,GAAGT,aAAa,EAA1B;;AAEA,MAAMkB,wBAAwB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAQ7B,cAAc,CAAC,QAAD,CAA5B;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBAA2B6B,CAAC,CAAC,+CAAD;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAC,KAA/B;AAAA,iCACE,QAAC,mBAAD;AACE,YAAA,MAAM,EAAE,GADV;AAEE,YAAA,SAAS,EAAC,QAFZ;AAGE,YAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHf;AAIE,YAAA,UAAU,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJd;AAAA,oCAME,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBATF,EAUGV,IAAI,CAACN,GAAL,CAASiB,KAAK,iBAAI,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,qBAAtB;AAAA,iBAAgDA;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAAlB,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5BD;;GAAMF,wB;UACU5B,c;;;KADV4B,wB;AA8BN,eAAeA,wBAAf","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  HorizontalGridLines, LineSeries, VerticalGridLines, XAxis, FlexibleWidthXYPlot, YAxis,\n} from 'react-vis';\n\nconst getRandomData = () => new Array(20).fill(0).map((row, i) => Object({\n  color: i,\n  key: i,\n  data: new Array(100).fill(0).map((col, j) => Object({\n    x: j,\n    y: ((i / 10) + 1) * Math.sin((Math.PI * (i + j)) / 50),\n  })),\n  opacity: 0.8,\n}));\n\nconst data = getRandomData();\n\nconst LineSeriesWithManyColors = () => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Col xs={12} md={12} lg={12} xl={4}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('charts.react_vis.line_series_with_many_colors')}</h5>\n          </div>\n          <div className=\"react-vis\" dir=\"ltr\">\n            <FlexibleWidthXYPlot\n              height={250}\n              colorType=\"linear\"\n              colorDomain={[0, 9]}\n              colorRange={['#70bbfd', '#c88ffa']}\n            >\n              <HorizontalGridLines />\n              <VerticalGridLines />\n              <XAxis />\n              <YAxis />\n              {data.map(props => <LineSeries className=\"react-vis__svg-line\" {...props} />)}\n            </FlexibleWidthXYPlot>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default LineSeriesWithManyColors;\n"]},"metadata":{},"sourceType":"module"}