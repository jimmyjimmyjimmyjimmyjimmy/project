{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Tables/EditableTable/components/EditableReactTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport ReactTableBase from '@/shared/components/table/ReactTableBase';\nimport ReactTableCustomizer from '@/shared/components/table/components/ReactTableCustomizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableReactTable = ({\n  reactTableData\n}) => {\n  _s();\n\n  const [rows, setData] = useState(reactTableData.tableRowsData);\n  const [withPagination, setWithPaginationTable] = useState(true);\n  const [isSortable, setIsSortable] = useState(false);\n  const [withSearchEngine, setWithSearchEngine] = useState(false);\n\n  const updateEditableData = (rowIndex, columnId, value) => {\n    setData(old => old.map((item, index) => {\n      if (index === rowIndex) {\n        return { ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const handleClickIsSortable = () => {\n    setIsSortable(!isSortable);\n  };\n\n  const handleClickWithPagination = () => {\n    setWithPaginationTable(!withPagination);\n  };\n\n  const handleClickWithSearchEngine = () => {\n    setWithSearchEngine(!withSearchEngine);\n  };\n\n  const tableConfig = {\n    isEditable: true,\n    isSortable,\n    isResizable: false,\n    withPagination,\n    withSearchEngine,\n    manualPageSize: [10, 20, 30, 40],\n    placeholder: 'Search by First name...'\n  };\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 12,\n    lg: 12,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react-table__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"bold-text\",\n              children: \"editable react-table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"subhead\",\n              children: [\"Use table with\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red-text\",\n                children: \"editable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactTableCustomizer, {\n            handleClickIsSortable: handleClickIsSortable,\n            handleClickWithPagination: handleClickWithPagination,\n            handleClickWithSearchEngine: handleClickWithSearchEngine,\n            isSortable: isSortable,\n            withPagination: withPagination,\n            withSearchEngine: withSearchEngine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactTableBase, {\n          columns: reactTableData.tableHeaderData,\n          data: rows,\n          updateEditableData: updateEditableData,\n          tableConfig: tableConfig\n        }, withSearchEngine ? 'searchable' : 'common', false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableReactTable, \"1CXtI7V9SbRTifP/cYGFJ+nPL6M=\");\n\n_c = EditableReactTable;\nEditableReactTable.propTypes = {\n  reactTableData: PropTypes.shape({\n    tableHeaderData: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string,\n      name: PropTypes.string\n    })),\n    tableRowsData: PropTypes.arrayOf(PropTypes.shape())\n  }).isRequired\n};\nexport default EditableReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableReactTable\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Tables/EditableTable/components/EditableReactTable.jsx"],"names":["React","useState","PropTypes","Card","CardBody","Col","ReactTableBase","ReactTableCustomizer","EditableReactTable","reactTableData","rows","setData","tableRowsData","withPagination","setWithPaginationTable","isSortable","setIsSortable","withSearchEngine","setWithSearchEngine","updateEditableData","rowIndex","columnId","value","old","map","item","index","handleClickIsSortable","handleClickWithPagination","handleClickWithSearchEngine","tableConfig","isEditable","isResizable","manualPageSize","placeholder","tableHeaderData","propTypes","shape","arrayOf","key","string","name","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardBody, Col,\n} from 'reactstrap';\nimport ReactTableBase from '@/shared/components/table/ReactTableBase';\nimport ReactTableCustomizer from '@/shared/components/table/components/ReactTableCustomizer';\n\nconst EditableReactTable = ({ reactTableData }) => {\n  const [rows, setData] = useState(reactTableData.tableRowsData);\n  const [withPagination, setWithPaginationTable] = useState(true);\n  const [isSortable, setIsSortable] = useState(false);\n  const [withSearchEngine, setWithSearchEngine] = useState(false);\n\n  const updateEditableData = (rowIndex, columnId, value) => {\n    setData(old => old.map((item, index) => {\n      if (index === rowIndex) {\n        return {\n          ...old[rowIndex],\n          [columnId]: value,\n        };\n      }\n      return item;\n    }));\n  };\n\n  const handleClickIsSortable = () => {\n    setIsSortable(!isSortable);\n  };\n\n  const handleClickWithPagination = () => {\n    setWithPaginationTable(!withPagination);\n  };\n\n  const handleClickWithSearchEngine = () => {\n    setWithSearchEngine(!withSearchEngine);\n  };\n\n  const tableConfig = {\n    isEditable: true,\n    isSortable,\n    isResizable: false,\n    withPagination,\n    withSearchEngine,\n    manualPageSize: [10, 20, 30, 40],\n    placeholder: 'Search by First name...',\n  };\n\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"react-table__wrapper\">\n            <div className=\"card__title\">\n              <h5 className=\"bold-text\">editable react-table</h5>\n              <h5 className=\"subhead\">Use table with&nbsp;\n                <span className=\"red-text\">editable</span>\n              </h5>\n            </div>\n            <ReactTableCustomizer\n              handleClickIsSortable={handleClickIsSortable}\n              handleClickWithPagination={handleClickWithPagination}\n              handleClickWithSearchEngine={handleClickWithSearchEngine}\n              isSortable={isSortable}\n              withPagination={withPagination}\n              withSearchEngine={withSearchEngine}\n            />\n          </div>\n          <ReactTableBase\n            key={withSearchEngine ? 'searchable' : 'common'}\n            columns={reactTableData.tableHeaderData}\n            data={rows}\n            updateEditableData={updateEditableData}\n            tableConfig={tableConfig}\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nEditableReactTable.propTypes = {\n  reactTableData: PropTypes.shape({\n    tableHeaderData: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string,\n      name: PropTypes.string,\n    })),\n    tableRowsData: PropTypes.arrayOf(PropTypes.shape()),\n  }).isRequired,\n};\n\nexport default EditableReactTable;\n"]},"metadata":{},"sourceType":"module"}