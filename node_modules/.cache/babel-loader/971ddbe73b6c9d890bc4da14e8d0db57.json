{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/UI/Tooltips/components/PopoverTop.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { ButtonToolbar, Card, CardBody, Col, Button, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopoverTop = ({\n  dir\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const [IsOpenedPopover, setIsOpenedPopover] = useState(false);\n\n  const handleOpenPopover = () => {\n    setIsOpenedPopover(!IsOpenedPopover);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    sm: 12,\n    md: 6,\n    lg: 6,\n    xl: 3,\n    className: \"card-tooltip\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('ui_elements.tooltips_popovers.popover_on_top')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subhead\",\n            children: [\"Use popover with placement \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red-text\",\n              children: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n          className: \"btn-toolbar--center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"PopoverTop\",\n            onClick: handleOpenPopover,\n            outline: true,\n            className: \"button-tooltip\",\n            children: \"Popover on Top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popover, {\n            placement: \"top\",\n            isOpen: IsOpenedPopover,\n            target: \"PopoverTop\",\n            toggle: handleOpenPopover,\n            dir: dir,\n            children: [/*#__PURE__*/_jsxDEV(PopoverHeader, {\n              children: \"Popover on Top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n              children: \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopoverTop, \"KF/3UNtM6KHPwAYC8bdTCTBxp/g=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PopoverTop;\nPopoverTop.propTypes = {\n  dir: PropTypes.string.isRequired\n};\nexport default PopoverTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverTop\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/UI/Tooltips/components/PopoverTop.jsx"],"names":["React","useState","PropTypes","useTranslation","ButtonToolbar","Card","CardBody","Col","Button","Popover","PopoverBody","PopoverHeader","PopoverTop","dir","t","IsOpenedPopover","setIsOpenedPopover","handleOpenPopover","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACEC,aADF,EACiBC,IADjB,EACuBC,QADvB,EACiCC,GADjC,EACsCC,MADtC,EAC8CC,OAD9C,EACuDC,WADvD,EACoEC,aADpE,QAEO,YAFP;;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,CAAC,QAAD,CAA5B;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMgB,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAkC,IAAA,SAAS,EAAC,cAA5C;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBAA2BD,CAAC,CAAC,8CAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA,mEAAmD;AAAM,cAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,qBAAzB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,YAAX;AAAwB,YAAA,OAAO,EAAEG,iBAAjC;AAAoD,YAAA,OAAO,MAA3D;AAA4D,YAAA,SAAS,EAAC,gBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,MAAM,EAAEF,eAFV;AAGE,YAAA,MAAM,EAAC,YAHT;AAIE,YAAA,MAAM,EAAEE,iBAJV;AAKE,YAAA,GAAG,EAAEJ,GALP;AAAA,oCAOE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArCD;;GAAMD,U;UACUT,c;;;KADVS,U;AAuCNA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,GAAG,EAAEX,SAAS,CAACiB,MAAV,CAAiBC;AADD,CAAvB;AAIA,eAAeR,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ButtonToolbar, Card, CardBody, Col, Button, Popover, PopoverBody, PopoverHeader,\n} from 'reactstrap';\n\nconst PopoverTop = ({ dir }) => {\n  const { t } = useTranslation('common');\n  const [IsOpenedPopover, setIsOpenedPopover] = useState(false);\n\n  const handleOpenPopover = () => {\n    setIsOpenedPopover(!IsOpenedPopover);\n  };\n\n  return (\n    <Col sm={12} md={6} lg={6} xl={3} className=\"card-tooltip\">\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('ui_elements.tooltips_popovers.popover_on_top')}</h5>\n            <h5 className=\"subhead\">Use popover with placement <span className=\"red-text\">top</span></h5>\n          </div>\n          <ButtonToolbar className=\"btn-toolbar--center\">\n            <Button id=\"PopoverTop\" onClick={handleOpenPopover} outline className=\"button-tooltip\">\n              Popover on Top\n            </Button>\n            <Popover\n              placement=\"top\"\n              isOpen={IsOpenedPopover}\n              target=\"PopoverTop\"\n              toggle={handleOpenPopover}\n              dir={dir}\n            >\n              <PopoverHeader>Popover on Top</PopoverHeader>\n              <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem\n                lacinia quam venenatis vestibulum.\n              </PopoverBody>\n            </Popover>\n          </ButtonToolbar>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nPopoverTop.propTypes = {\n  dir: PropTypes.string.isRequired,\n};\n\nexport default PopoverTop;\n"]},"metadata":{},"sourceType":"module"}