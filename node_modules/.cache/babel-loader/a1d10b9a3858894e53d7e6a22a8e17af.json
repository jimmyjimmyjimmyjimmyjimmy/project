{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/SalesStatisticBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataYearly = [{\n  name: 'Jan',\n  uv: 4000\n}, {\n  name: 'Feb',\n  uv: 3000\n}, {\n  name: 'Mar',\n  uv: 2000\n}, {\n  name: 'Apr',\n  uv: 2780\n}, {\n  name: 'May',\n  uv: 1890\n}, {\n  name: 'June',\n  uv: 2390\n}, {\n  name: 'July',\n  uv: 3490\n}, {\n  name: 'Aug',\n  uv: 2000\n}, {\n  name: 'Sep',\n  uv: 2780\n}, {\n  name: 'Oct',\n  uv: 1890\n}, {\n  name: 'Nov',\n  uv: 3578\n}, {\n  name: 'Dec',\n  uv: 2378\n}];\nconst dataMontly = [{\n  name: '01.02',\n  uv: 3654\n}, {\n  name: '02.02',\n  uv: 2578\n}, {\n  name: '03.02',\n  uv: 2000\n}, {\n  name: '04.02',\n  uv: 4383\n}, {\n  name: '05.02',\n  uv: 1890\n}, {\n  name: '06.02',\n  uv: 2390\n}, {\n  name: '07.02',\n  uv: 3490\n}, {\n  name: '08.02',\n  uv: 2000\n}, {\n  name: '09.02',\n  uv: 2780\n}, {\n  name: '10.02',\n  uv: 1890\n}, {\n  name: '11.02',\n  uv: 3578\n}, {\n  name: '12.02',\n  uv: 3644\n}, {\n  name: '13.02',\n  uv: 4000\n}, {\n  name: '14.02',\n  uv: 3000\n}, {\n  name: '15.02',\n  uv: 2000\n}, {\n  name: '16.02',\n  uv: 2780\n}, {\n  name: '17.02',\n  uv: 1890\n}, {\n  name: '18.02',\n  uv: 2390\n}, {\n  name: '19.02',\n  uv: 3490\n}, {\n  name: '20.02',\n  uv: 2000\n}, {\n  name: '21.02',\n  uv: 2780\n}, {\n  name: '22.02',\n  uv: 1890\n}, {\n  name: '23.02',\n  uv: 3578\n}, {\n  name: '24.02',\n  uv: 2390\n}, {\n  name: '25.02',\n  uv: 3578\n}, {\n  name: '26.02',\n  uv: 1890\n}, {\n  name: '27.02',\n  uv: 4000\n}, {\n  name: '28.02',\n  uv: 2378\n}];\n\nconst SalesStatisticBar = ({\n  themeName\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const [isYearly, setYearly] = useState(true);\n\n  const handleChange = () => {\n    setYearly(!isYearly);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    xl: 3,\n    lg: 7,\n    md: 12,\n    title: t('dashboard_commerce.sales_statistic'),\n    subhead: \"See how effective your business is\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      dir: \"ltr\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        height: 260,\n        children: isYearly ? /*#__PURE__*/_jsxDEV(BarChart, {\n          data: dataYearly,\n          margin: {\n            top: 20,\n            left: -15\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            tickLine: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickLine: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...getTooltipStyles(themeName, 'defaultItems')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"uv\",\n            name: \"Sales\",\n            fill: \"#ff4861\",\n            barSize: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n          data: dataMontly,\n          margin: {\n            top: 20,\n            left: -15\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            tickLine: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickLine: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...getTooltipStyles(themeName, 'defaultItems')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            vertical: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"uv\",\n            name: \"Sales\",\n            fill: \"#4ce1b6\",\n            barSize: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"sales\",\n      className: \"toggle-btn dashboard__sales-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: \"sales\",\n        id: \"sales\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dashboard__sales-toggle-left\",\n        children: \"Yearly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-btn__input-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dashboard__sales-toggle-right\",\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SalesStatisticBar, \"Dvdkb8SmKqDhcfgoqO4MQ9vpNwo=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SalesStatisticBar;\nSalesStatisticBar.propTypes = {\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(SalesStatisticBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesStatisticBar\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/SalesStatisticBar.jsx"],"names":["React","useState","PropTypes","connect","useTranslation","BarChart","Bar","ResponsiveContainer","Tooltip","XAxis","YAxis","CartesianGrid","Panel","getTooltipStyles","dataYearly","name","uv","dataMontly","SalesStatisticBar","themeName","t","isYearly","setYearly","handleChange","top","left","propTypes","string","isRequired","state","theme","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid,\n} from 'recharts';\n\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\n\nconst dataYearly = [\n  { name: 'Jan', uv: 4000 },\n  { name: 'Feb', uv: 3000 },\n  { name: 'Mar', uv: 2000 },\n  { name: 'Apr', uv: 2780 },\n  { name: 'May', uv: 1890 },\n  { name: 'June', uv: 2390 },\n  { name: 'July', uv: 3490 },\n  { name: 'Aug', uv: 2000 },\n  { name: 'Sep', uv: 2780 },\n  { name: 'Oct', uv: 1890 },\n  { name: 'Nov', uv: 3578 },\n  { name: 'Dec', uv: 2378 },\n];\n\nconst dataMontly = [\n  { name: '01.02', uv: 3654 },\n  { name: '02.02', uv: 2578 },\n  { name: '03.02', uv: 2000 },\n  { name: '04.02', uv: 4383 },\n  { name: '05.02', uv: 1890 },\n  { name: '06.02', uv: 2390 },\n  { name: '07.02', uv: 3490 },\n  { name: '08.02', uv: 2000 },\n  { name: '09.02', uv: 2780 },\n  { name: '10.02', uv: 1890 },\n  { name: '11.02', uv: 3578 },\n  { name: '12.02', uv: 3644 },\n  { name: '13.02', uv: 4000 },\n  { name: '14.02', uv: 3000 },\n  { name: '15.02', uv: 2000 },\n  { name: '16.02', uv: 2780 },\n  { name: '17.02', uv: 1890 },\n  { name: '18.02', uv: 2390 },\n  { name: '19.02', uv: 3490 },\n  { name: '20.02', uv: 2000 },\n  { name: '21.02', uv: 2780 },\n  { name: '22.02', uv: 1890 },\n  { name: '23.02', uv: 3578 },\n  { name: '24.02', uv: 2390 },\n  { name: '25.02', uv: 3578 },\n  { name: '26.02', uv: 1890 },\n  { name: '27.02', uv: 4000 },\n  { name: '28.02', uv: 2378 },\n];\n\nconst SalesStatisticBar = ({ themeName }) => {\n  const { t } = useTranslation('common');\n  const [isYearly, setYearly] = useState(true);\n\n  const handleChange = () => {\n    setYearly(!isYearly);\n  };\n\n  return (\n    <Panel\n      xl={3}\n      lg={7}\n      md={12}\n      title={t('dashboard_commerce.sales_statistic')}\n      subhead=\"See how effective your business is\"\n    >\n      <div dir=\"ltr\">\n        <ResponsiveContainer height={260}>\n          {isYearly\n            ? (\n              <BarChart data={dataYearly} margin={{ top: 20, left: -15 }}>\n                <XAxis dataKey=\"name\" tickLine={false} />\n                <YAxis tickLine={false} />\n                <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n                <CartesianGrid vertical={false} />\n                <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#ff4861\" barSize={10} />\n              </BarChart>\n            ) : (\n              <BarChart data={dataMontly} margin={{ top: 20, left: -15 }}>\n                <XAxis dataKey=\"name\" tickLine={false} />\n                <YAxis tickLine={false} />\n                <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n                <CartesianGrid vertical={false} />\n                <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#4ce1b6\" barSize={4} />\n              </BarChart>\n            )}\n        </ResponsiveContainer>\n      </div>\n      <hr />\n      <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\n        <input className=\"toggle-btn__input\" type=\"checkbox\" name=\"sales\" id=\"sales\" onChange={handleChange} />\n        <span className=\"dashboard__sales-toggle-left\">Yearly</span>\n        <span className=\"toggle-btn__input-label\" />\n        <span className=\"dashboard__sales-toggle-right\">Monthly</span>\n      </label>\n    </Panel>\n  );\n};\n\nSalesStatisticBar.propTypes = {\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(SalesStatisticBar);\n"]},"metadata":{},"sourceType":"module"}