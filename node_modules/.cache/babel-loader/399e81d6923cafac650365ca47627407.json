{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Charts/ReactVis/components/Plots.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { FlexibleWidthXYPlot, HorizontalGridLines, LineSeries, VerticalRectSeries, XAxis, YAxis } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomSeriesData = total => {\n  const lastY = Math.random() * 40;\n  const firstY = lastY;\n  return new Array(Math.max(total, 3)).fill(0).map((row, i) => Object({\n    left: i,\n    top: Math.random() * firstY - firstY / 2 + lastY\n  }));\n};\n\nconst totalValues = 30;\nconst series = [{\n  title: 'Apples',\n  disabled: false,\n  data: getRandomSeriesData(totalValues)\n}, {\n  title: 'Bananas',\n  disabled: false,\n  data: getRandomSeriesData(totalValues)\n}];\n\nconst Plots = ({\n  dir\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 12,\n    lg: 12,\n    xl: 12,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('charts.react_vis.plots')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react-vis\",\n          dir: \"ltr\",\n          children: /*#__PURE__*/_jsxDEV(FlexibleWidthXYPlot, {\n            animation: true,\n            getX: d => d.left,\n            getY: d => d.top,\n            xDomain: [0, series[0].data.length - 1],\n            height: 300,\n            children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              className: \"cool-custom-name\",\n              tickSizeInner: 0,\n              tickSizeOuter: 8,\n              orientation: dir === 'rtl' ? 'right' : 'left'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              className: \"even-cooler-custom-name\",\n              tickSizeInner: 0,\n              tickSizeOuter: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VerticalRectSeries, {\n              data: series[0].data.map(({\n                left,\n                top\n              }) => ({\n                x0: left,\n                left: left + 1,\n                top\n              })),\n              stroke: \"white\",\n              ...(series[0].disabled ? {\n                opacity: 0.2\n              } : null),\n              color: \"#70bbfd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n              className: \"react-vis__svg-line\",\n              data: series[1].data,\n              curve: \"curveMonotoneX\",\n              ...(series[1].disabled ? {\n                opacity: 0.2\n              } : null),\n              color: \"#f6da6e\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Plots, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Plots;\nPlots.propTypes = {\n  dir: PropTypes.string.isRequired\n};\nexport default Plots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plots\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Charts/ReactVis/components/Plots.jsx"],"names":["React","PropTypes","useTranslation","Card","CardBody","Col","FlexibleWidthXYPlot","HorizontalGridLines","LineSeries","VerticalRectSeries","XAxis","YAxis","getRandomSeriesData","total","lastY","Math","random","firstY","Array","max","fill","map","row","i","Object","left","top","totalValues","series","title","disabled","data","Plots","dir","t","d","length","x0","opacity","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalGridLines,\n  LineSeries,\n  VerticalRectSeries,\n  XAxis,\n  YAxis,\n} from 'react-vis';\n\nconst getRandomSeriesData = (total) => {\n  const lastY = Math.random() * 40;\n  const firstY = lastY;\n  return new Array(Math.max(total, 3)).fill(0).map((row, i) => Object({\n    left: i,\n    top: ((Math.random() * firstY) - (firstY / 2)) + lastY,\n  }));\n};\n\nconst totalValues = 30;\nconst series = [\n  {\n    title: 'Apples',\n    disabled: false,\n    data: getRandomSeriesData(totalValues),\n  },\n  {\n    title: 'Bananas',\n    disabled: false,\n    data: getRandomSeriesData(totalValues),\n  },\n];\n\nconst Plots = ({ dir }) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Col md={12} lg={12} xl={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('charts.react_vis.plots')}</h5>\n          </div>\n          <div className=\"react-vis\" dir=\"ltr\">\n            <FlexibleWidthXYPlot\n              animation\n              getX={d => d.left}\n              getY={d => d.top}\n              xDomain={[0, series[0].data.length - 1]}\n              height={300}\n            >\n              <HorizontalGridLines />\n              <YAxis\n                className=\"cool-custom-name\"\n                tickSizeInner={0}\n                tickSizeOuter={8}\n                orientation={dir === 'rtl' ? 'right' : 'left'}\n              />\n              <XAxis\n                className=\"even-cooler-custom-name\"\n                tickSizeInner={0}\n                tickSizeOuter={8}\n              />\n              <VerticalRectSeries\n                data={series[0].data.map(({ left, top }) => ({ x0: left, left: left + 1, top }))}\n                stroke=\"white\"\n                {...(series[0].disabled ? { opacity: 0.2 } : null)}\n                color=\"#70bbfd\"\n              />\n              <LineSeries\n                className=\"react-vis__svg-line\"\n                data={series[1].data}\n                curve=\"curveMonotoneX\"\n                {...(series[1].disabled ? { opacity: 0.2 } : null)}\n                color=\"#f6da6e\"\n              />\n            </FlexibleWidthXYPlot>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nPlots.propTypes = {\n  dir: PropTypes.string.isRequired,\n};\n\nexport default Plots;\n"]},"metadata":{},"sourceType":"module"}