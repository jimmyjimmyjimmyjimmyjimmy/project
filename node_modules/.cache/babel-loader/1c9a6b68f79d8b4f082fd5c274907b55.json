{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/DiscoverParks/components/ParkSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParkOption = ({\n  innerProps,\n  isDisabled,\n  data\n}) => !isDisabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"react-select__option\",\n  ...innerProps,\n  children: data.label\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this) : null;\n\n_c = ParkOption;\nParkOption.propTypes = {\n  isDisabled: PropTypes.bool,\n  innerProps: PropTypes.shape().isRequired,\n  data: PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string\n  }).isRequired\n};\nParkOption.defaultProps = {\n  isDisabled: false\n};\n\nconst ParkSelect = ({\n  options,\n  placeholder\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n\n  const handleChange = selectedOption => {\n    setValue(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: value,\n    onChange: handleChange,\n    options: options,\n    clearable: false,\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    placeholder: placeholder,\n    components: {\n      Option: ParkOption\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ParkSelect, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = ParkSelect;\nParkSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string\n  })),\n  placeholder: PropTypes.string\n};\nParkSelect.defaultProps = {\n  options: null,\n  placeholder: 'เลือกดูรายการสวน...'\n};\nexport default ParkSelect;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ParkOption\");\n$RefreshReg$(_c2, \"ParkSelect\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/DiscoverParks/components/ParkSelect.jsx"],"names":["React","useState","PropTypes","Select","ParkOption","innerProps","isDisabled","data","label","propTypes","bool","shape","isRequired","value","string","color","defaultProps","ParkSelect","options","placeholder","setValue","handleChange","selectedOption","Option","arrayOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,UADkB;AACNC,EAAAA,UADM;AACMC,EAAAA;AADN,CAAD,KAEZ,CAACD,UAAD,gBACL;AACE,EAAA,SAAS,EAAC,sBADZ;AAAA,KAEMD,UAFN;AAAA,YAIGE,IAAI,CAACC;AAJR;AAAA;AAAA;AAAA;AAAA,QADK,GAOH,IATJ;;KAAMJ,U;AAWNA,UAAU,CAACK,SAAX,GAAuB;AACrBH,EAAAA,UAAU,EAAEJ,SAAS,CAACQ,IADD;AAErBL,EAAAA,UAAU,EAAEH,SAAS,CAACS,KAAV,GAAkBC,UAFT;AAGrBL,EAAAA,IAAI,EAAEL,SAAS,CAACS,KAAV,CAAgB;AACpBE,IAAAA,KAAK,EAAEX,SAAS,CAACY,MADG;AAEpBN,IAAAA,KAAK,EAAEN,SAAS,CAACY,MAFG;AAGpBC,IAAAA,KAAK,EAAEb,SAAS,CAACY;AAHG,GAAhB,EAIHF;AAPkB,CAAvB;AAUAR,UAAU,CAACY,YAAX,GAA0B;AACxBV,EAAAA,UAAU,EAAE;AADY,CAA1B;;AAIA,MAAMW,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA8B;AAAA;;AAC/C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMoB,YAAY,GAAIC,cAAD,IAAoB;AACvCF,IAAAA,QAAQ,CAACE,cAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,KAAK,EAAET,KADT;AAEE,IAAA,QAAQ,EAAEQ,YAFZ;AAGE,IAAA,OAAO,EAAEH,OAHX;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,eAAe,EAAC,cANlB;AAOE,IAAA,WAAW,EAAEC,WAPf;AAQE,IAAA,UAAU,EAAE;AAAEI,MAAAA,MAAM,EAAEnB;AAAV;AARd;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMa,U;;MAAAA,U;AAqBNA,UAAU,CAACR,SAAX,GAAuB;AACrBS,EAAAA,OAAO,EAAEhB,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACS,KAAV,CAAgB;AACzCE,IAAAA,KAAK,EAAEX,SAAS,CAACY,MADwB;AAEzCN,IAAAA,KAAK,EAAEN,SAAS,CAACY,MAFwB;AAGzCC,IAAAA,KAAK,EAAEb,SAAS,CAACY;AAHwB,GAAhB,CAAlB,CADY;AAMrBK,EAAAA,WAAW,EAAEjB,SAAS,CAACY;AANF,CAAvB;AASAG,UAAU,CAACD,YAAX,GAA0B;AACxBE,EAAAA,OAAO,EAAE,IADe;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAA1B;AAKA,eAAeF,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nconst ParkOption = ({\n  innerProps, isDisabled, data,\n}) => (!isDisabled ? (\n  <div\n    className=\"react-select__option\"\n    {...innerProps}\n  >\n    {data.label}\n  </div>\n) : null);\n\nParkOption.propTypes = {\n  isDisabled: PropTypes.bool,\n  innerProps: PropTypes.shape().isRequired,\n  data: PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string,\n  }).isRequired,\n};\n\nParkOption.defaultProps = {\n  isDisabled: false,\n};\n\nconst ParkSelect = ({ options, placeholder }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (selectedOption) => {\n    setValue(selectedOption);\n  };\n\n  return (\n    <Select\n      value={value}\n      onChange={handleChange}\n      options={options}\n      clearable={false}\n      className=\"react-select\"\n      classNamePrefix=\"react-select\"\n      placeholder={placeholder}\n      components={{ Option: ParkOption }}\n    />\n  );\n};\n\nParkSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    color: PropTypes.string,\n  })),\n  placeholder: PropTypes.string,\n};\n\nParkSelect.defaultProps = {\n  options: null,\n  placeholder: 'เลือกดูรายการสวน...',\n};\n\nexport default ParkSelect;\n"]},"metadata":{},"sourceType":"module"}