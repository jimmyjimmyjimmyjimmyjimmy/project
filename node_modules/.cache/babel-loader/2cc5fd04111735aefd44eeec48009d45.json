{"ast":null,"code":"import createAuth0Client from '@auth0/auth0-spa-js';\nimport config from '../../../config/auth0';\nimport store from '../../../containers/App/store';\nimport { auth } from '../../../redux/actions/authActions';\nlet auth0 = null;\n\nconst configureClient = async () => {\n  auth0 = await createAuth0Client({\n    domain: config.domain,\n    client_id: config.clientId\n  });\n};\n\nconst updateState = async () => {\n  const isAuthenticated = await auth0.isAuthenticated();\n\n  if (isAuthenticated) {\n    // In real project you will get the data below from backend api\n    const user = await auth0.getUser();\n    store.dispatch(auth({\n      name: user.name,\n      avatar: user.picture\n    }));\n  }\n};\n\nconst initAuth0 = async () => {\n  await configureClient();\n  updateState();\n  const isAuthenticated = await auth0.isAuthenticated();\n\n  if (isAuthenticated) {\n    return;\n  }\n\n  const query = window.location.search;\n\n  if (query.includes('code=') && query.includes('state=')) {\n    await auth0.handleRedirectCallback();\n    updateState();\n    window.history.replaceState({}, document.title, '/');\n  }\n};\n\nexport const login = async () => {\n  await auth0.loginWithRedirect({\n    redirect_uri: config.redirectUri\n  });\n};\nexport const logout = async () => {\n  const isAuthenticated = await auth0.isAuthenticated();\n\n  if (isAuthenticated) {\n    auth0.logout({\n      returnTo: config.returnTo\n    });\n  }\n};\nexport default initAuth0;","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/auth/withAuth0.jsx"],"names":["createAuth0Client","config","store","auth","auth0","configureClient","domain","client_id","clientId","updateState","isAuthenticated","user","getUser","dispatch","name","avatar","picture","initAuth0","query","window","location","search","includes","handleRedirectCallback","history","replaceState","document","title","login","loginWithRedirect","redirect_uri","redirectUri","logout","returnTo"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,IAAT,QAAqB,oCAArB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,eAAe,GAAG,YAAY;AAClCD,EAAAA,KAAK,GAAG,MAAMJ,iBAAiB,CAAC;AAC9BM,IAAAA,MAAM,EAAEL,MAAM,CAACK,MADe;AAE9BC,IAAAA,SAAS,EAAEN,MAAM,CAACO;AAFY,GAAD,CAA/B;AAID,CALD;;AAOA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAMC,eAAe,GAAG,MAAMN,KAAK,CAACM,eAAN,EAA9B;;AACA,MAAIA,eAAJ,EAAqB;AACnB;AACA,UAAMC,IAAI,GAAG,MAAMP,KAAK,CAACQ,OAAN,EAAnB;AACAV,IAAAA,KAAK,CAACW,QAAN,CAAeV,IAAI,CAAC;AAClBW,MAAAA,IAAI,EAAEH,IAAI,CAACG,IADO;AAElBC,MAAAA,MAAM,EAAEJ,IAAI,CAACK;AAFK,KAAD,CAAnB;AAID;AACF,CAVD;;AAYA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAMZ,eAAe,EAArB;AACAI,EAAAA,WAAW;AACX,QAAMC,eAAe,GAAG,MAAMN,KAAK,CAACM,eAAN,EAA9B;;AACA,MAAIA,eAAJ,EAAqB;AACnB;AACD;;AAED,QAAMQ,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAA9B;;AAEA,MAAIH,KAAK,CAACI,QAAN,CAAe,OAAf,KAA2BJ,KAAK,CAACI,QAAN,CAAe,QAAf,CAA/B,EAAyD;AACvD,UAAMlB,KAAK,CAACmB,sBAAN,EAAN;AACAd,IAAAA,WAAW;AACXU,IAAAA,MAAM,CAACK,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgCC,QAAQ,CAACC,KAAzC,EAAgD,GAAhD;AACD;AACF,CAfD;;AAiBA,OAAO,MAAMC,KAAK,GAAG,YAAY;AAC/B,QAAMxB,KAAK,CAACyB,iBAAN,CAAwB;AAC5BC,IAAAA,YAAY,EAAE7B,MAAM,CAAC8B;AADO,GAAxB,CAAN;AAGD,CAJM;AAMP,OAAO,MAAMC,MAAM,GAAG,YAAY;AAChC,QAAMtB,eAAe,GAAG,MAAMN,KAAK,CAACM,eAAN,EAA9B;;AACA,MAAIA,eAAJ,EAAqB;AACnBN,IAAAA,KAAK,CAAC4B,MAAN,CAAa;AACXC,MAAAA,QAAQ,EAAEhC,MAAM,CAACgC;AADN,KAAb;AAGD;AACF,CAPM;AASP,eAAehB,SAAf","sourcesContent":["import createAuth0Client from '@auth0/auth0-spa-js';\nimport config from '../../../config/auth0';\nimport store from '../../../containers/App/store';\nimport { auth } from '../../../redux/actions/authActions';\n\nlet auth0 = null;\n\nconst configureClient = async () => {\n  auth0 = await createAuth0Client({\n    domain: config.domain,\n    client_id: config.clientId,\n  });\n};\n\nconst updateState = async () => {\n  const isAuthenticated = await auth0.isAuthenticated();\n  if (isAuthenticated) {\n    // In real project you will get the data below from backend api\n    const user = await auth0.getUser();\n    store.dispatch(auth({\n      name: user.name,\n      avatar: user.picture,\n    }));\n  }\n};\n\nconst initAuth0 = async () => {\n  await configureClient();\n  updateState();\n  const isAuthenticated = await auth0.isAuthenticated();\n  if (isAuthenticated) {\n    return;\n  }\n\n  const query = window.location.search;\n\n  if (query.includes('code=') && query.includes('state=')) {\n    await auth0.handleRedirectCallback();\n    updateState();\n    window.history.replaceState({}, document.title, '/');\n  }\n};\n\nexport const login = async () => {\n  await auth0.loginWithRedirect({\n    redirect_uri: config.redirectUri,\n  });\n};\n\nexport const logout = async () => {\n  const isAuthenticated = await auth0.isAuthenticated();\n  if (isAuthenticated) {\n    auth0.logout({\n      returnTo: config.returnTo,\n    });\n  }\n};\n\nexport default initAuth0;\n"]},"metadata":{},"sourceType":"module"}