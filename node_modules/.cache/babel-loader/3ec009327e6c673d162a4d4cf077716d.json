{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, ButtonToolbar, Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectField } from '@/shared/components/form/Select';\nimport { emailPatter, urlPattern } from '@/shared/helpers';\nimport showResults from '@/utils/showResults';\nimport PasswordField from '@/shared/components/form/Password';\nimport { FormField } from './FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  isHorizontal,\n  isAboveError\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => showResults(data);\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 12,\n    lg: 12,\n    xl: 6,\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: `form ${isHorizontal && 'form--horizontal'}`,\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form__form-group-label\",\n            children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E2A\\u0E27\\u0E19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group-field\",\n            children: /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"username\",\n              control: control,\n              component: \"input\",\n              errors: errors,\n              rules: {\n                required: 'This is required field'\n              },\n              defaultValue: \"\",\n              isAboveError: isAboveError,\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form__form-group-label\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group-field\",\n            children: /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"email\",\n              control: control,\n              component: \"input\",\n              errors: errors,\n              rules: {\n                required: 'This is required field',\n                pattern: {\n                  value: emailPatter,\n                  message: 'Entered value does not match email format'\n                }\n              },\n              defaultValue: \"\",\n              isAboveError: isAboveError,\n              placeholder: \"example@gmail.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form__form-group-label\",\n            children: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group-field\",\n            children: /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"url\",\n              control: control,\n              component: \"input\",\n              errors: errors,\n              rules: {\n                required: 'This is required field',\n                pattern: {\n                  value: urlPattern,\n                  message: 'invalid url'\n                }\n              },\n              placeholder: \"https://themeforest.com\",\n              defaultValue: \"\",\n              isAboveError: isAboveError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form__form-group-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group-field\",\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"password\",\n              control: control,\n              render: ({\n                field,\n                fieldState\n              }) => {\n                var _fieldState$error;\n\n                return /*#__PURE__*/_jsxDEV(PasswordField, {\n                  input: field,\n                  meta: {\n                    touched: !!fieldState.error,\n                    error: (_fieldState$error = fieldState.error) === null || _fieldState$error === void 0 ? void 0 : _fieldState$error.message\n                  },\n                  placeholder: \"Password\",\n                  isAboveError: isAboveError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this);\n              },\n              rules: {\n                required: 'This is required field'\n              },\n              defaultValue: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form__form-group-label\",\n            children: \"Select Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group-field\",\n            children: /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"select\",\n              control: control,\n              component: SelectField,\n              errors: errors,\n              options: [{\n                value: 'one',\n                label: 'One'\n              }, {\n                value: 'two',\n                label: 'Two'\n              }],\n              rules: {\n                required: 'This is required field'\n              },\n              defaultValue: \"\",\n              isAboveError: isAboveError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n          className: \"form__button-toolbar\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            children: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => reset({\n              username: '',\n              email: '',\n              url: '',\n              password: '',\n              select: ''\n            }),\n            children: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"gSdZprtE9/EW8EK7zg9Wru+IBDE=\", false, function () {\n  return [useTranslation, useForm];\n});\n\n_c = Form;\nForm.propTypes = {\n  isHorizontal: PropTypes.bool,\n  isAboveError: PropTypes.bool\n};\nForm.defaultProps = {\n  isHorizontal: false,\n  isAboveError: false\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/Form.jsx"],"names":["React","Button","ButtonToolbar","Card","CardBody","Col","PropTypes","useTranslation","useForm","Controller","SelectField","emailPatter","urlPattern","showResults","PasswordField","FormField","Form","isHorizontal","isAboveError","t","handleSubmit","reset","control","formState","errors","onSubmit","data","required","pattern","value","message","field","fieldState","touched","error","label","username","email","url","password","select","propTypes","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,YANP;AAOA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAoC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,CAAC,QAAD,CAA5B;AACA,QAAM;AACJa,IAAAA,YADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFhB,OAAO,EALX;;AAOA,QAAMiB,QAAQ,GAAGC,IAAI,IAAIb,WAAW,CAACa,IAAD,CAApC;;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAAA,2BACE,QAAC,QAAD;AAAA,6BAEE;AAAM,QAAA,SAAS,EAAG,QAAOT,YAAY,IAAI,kBAAmB,EAA5D;AAA+D,QAAA,QAAQ,EAAEG,YAAY,CAACK,QAAD,CAArF;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEH,OAFX;AAGE,cAAA,SAAS,EAAC,OAHZ;AAIE,cAAA,MAAM,EAAEE,MAJV;AAKE,cAAA,KAAK,EAAE;AAAEG,gBAAAA,QAAQ,EAAE;AAAZ,eALT;AAME,cAAA,YAAY,EAAC,EANf;AAOE,cAAA,YAAY,EAAET,YAPhB;AAQE,cAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,OAAO,EAAEI,OAFX;AAGE,cAAA,SAAS,EAAC,OAHZ;AAIE,cAAA,MAAM,EAAEE,MAJV;AAKE,cAAA,KAAK,EAAE;AACLG,gBAAAA,QAAQ,EAAE,wBADL;AAELC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,KAAK,EAAElB,WADA;AAEPmB,kBAAAA,OAAO,EAAE;AAFF;AAFJ,eALT;AAYE,cAAA,YAAY,EAAC,EAZf;AAaE,cAAA,YAAY,EAAEZ,YAbhB;AAcE,cAAA,WAAW,EAAC;AAdd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAqCE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,OAAO,EAAEI,OAFX;AAGE,cAAA,SAAS,EAAC,OAHZ;AAIE,cAAA,MAAM,EAAEE,MAJV;AAKE,cAAA,KAAK,EAAE;AACLG,gBAAAA,QAAQ,EAAE,wBADL;AAELC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,KAAK,EAAEjB,UADA;AAEPkB,kBAAAA,OAAO,EAAE;AAFF;AAFJ,eALT;AAYE,cAAA,WAAW,EAAC,yBAZd;AAaE,cAAA,YAAY,EAAC,EAbf;AAcE,cAAA,YAAY,EAAEZ;AAdhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCF,eA0DE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,OAAO,EAAEI,OAFX;AAGE,cAAA,MAAM,EAAE,CAAC;AAAES,gBAAAA,KAAF;AAASC,gBAAAA;AAAT,eAAD;AAAA;;AAAA,oCACN,QAAC,aAAD;AACE,kBAAA,KAAK,EAAED,KADT;AAEE,kBAAA,IAAI,EAAE;AAAEE,oBAAAA,OAAO,EAAE,CAAC,CAACD,UAAU,CAACE,KAAxB;AAA+BA,oBAAAA,KAAK,uBAAEF,UAAU,CAACE,KAAb,sDAAE,kBAAkBJ;AAAxD,mBAFR;AAGE,kBAAA,WAAW,EAAC,UAHd;AAIE,kBAAA,YAAY,EAAEZ;AAJhB;AAAA;AAAA;AAAA;AAAA,wBADM;AAAA,eAHV;AAWE,cAAA,KAAK,EAAE;AAAES,gBAAAA,QAAQ,EAAE;AAAZ,eAXT;AAYE,cAAA,YAAY,EAAC;AAZf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DF,eA6EE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAEL,OAFX;AAGE,cAAA,SAAS,EAAEZ,WAHb;AAIE,cAAA,MAAM,EAAEc,MAJV;AAKE,cAAA,OAAO,EAAE,CACP;AAAEK,gBAAAA,KAAK,EAAE,KAAT;AAAgBM,gBAAAA,KAAK,EAAE;AAAvB,eADO,EAEP;AAAEN,gBAAAA,KAAK,EAAE,KAAT;AAAgBM,gBAAAA,KAAK,EAAE;AAAvB,eAFO,CALX;AASE,cAAA,KAAK,EAAE;AAAER,gBAAAA,QAAQ,EAAE;AAAZ,eATT;AAUE,cAAA,YAAY,EAAC,EAVf;AAWE,cAAA,YAAY,EAAET;AAXhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7EF,eA+FE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,sBAAzB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAE,MAAMG,KAAK,CAAC;AACnBe,cAAAA,QAAQ,EAAE,EADS;AAEnBC,cAAAA,KAAK,EAAE,EAFY;AAGnBC,cAAAA,GAAG,EAAE,EAHc;AAInBC,cAAAA,QAAQ,EAAE,EAJS;AAKnBC,cAAAA,MAAM,EAAE;AALW,aAAD,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsHD,CAjID;;GAAMxB,I;UACUT,c,EAMVC,O;;;KAPAQ,I;AAmINA,IAAI,CAACyB,SAAL,GAAiB;AACfxB,EAAAA,YAAY,EAAEX,SAAS,CAACoC,IADT;AAEfxB,EAAAA,YAAY,EAAEZ,SAAS,CAACoC;AAFT,CAAjB;AAKA1B,IAAI,CAAC2B,YAAL,GAAoB;AAClB1B,EAAAA,YAAY,EAAE,KADI;AAElBC,EAAAA,YAAY,EAAE;AAFI,CAApB;AAKA,eAAeF,IAAf","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  Col,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectField } from '@/shared/components/form/Select';\nimport { emailPatter, urlPattern } from '@/shared/helpers';\nimport showResults from '@/utils/showResults';\nimport PasswordField from '@/shared/components/form/Password';\nimport { FormField } from './FormField';\n\nconst Form = ({ isHorizontal, isAboveError }) => {\n  const { t } = useTranslation('common');\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => showResults(data);\n\n  return (\n    <Col md={12} lg={12} xl={6}>\n      <CardBody>\n\n        <form className={`form ${isHorizontal && 'form--horizontal'}`} onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">ชื่อสวน</span>\n            <div className=\"form__form-group-field\">\n              <FormField\n                name=\"username\"\n                control={control}\n                component=\"input\"\n                errors={errors}\n                rules={{ required: 'This is required field' }}\n                defaultValue=\"\"\n                isAboveError={isAboveError}\n                placeholder=\"Name\"\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">E-mail</span>\n            <div className=\"form__form-group-field\">\n              <FormField\n                name=\"email\"\n                control={control}\n                component=\"input\"\n                errors={errors}\n                rules={{\n                  required: 'This is required field',\n                  pattern: {\n                    value: emailPatter,\n                    message: 'Entered value does not match email format',\n                  },\n                }}\n                defaultValue=\"\"\n                isAboveError={isAboveError}\n                placeholder=\"example@gmail.com\"\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Url</span>\n            <div className=\"form__form-group-field\">\n              <FormField\n                name=\"url\"\n                control={control}\n                component=\"input\"\n                errors={errors}\n                rules={{\n                  required: 'This is required field',\n                  pattern: {\n                    value: urlPattern,\n                    message: 'invalid url',\n                  },\n                }}\n                placeholder=\"https://themeforest.com\"\n                defaultValue=\"\"\n                isAboveError={isAboveError}\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Password</span>\n            <div className=\"form__form-group-field\">\n              <Controller\n                name=\"password\"\n                control={control}\n                render={({ field, fieldState }) => (\n                  <PasswordField\n                    input={field}\n                    meta={{ touched: !!fieldState.error, error: fieldState.error?.message }}\n                    placeholder=\"Password\"\n                    isAboveError={isAboveError}\n                  />\n                )}\n                rules={{ required: 'This is required field' }}\n                defaultValue=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Select Option</span>\n            <div className=\"form__form-group-field\">\n              <FormField\n                name=\"select\"\n                control={control}\n                component={SelectField}\n                errors={errors}\n                options={[\n                  { value: 'one', label: 'One' },\n                  { value: 'two', label: 'Two' },\n                ]}\n                rules={{ required: 'This is required field' }}\n                defaultValue=\"\"\n                isAboveError={isAboveError}\n              />\n            </div>\n          </div>\n          <ButtonToolbar className=\"form__button-toolbar\">\n            <Button color=\"primary\" type=\"submit\">ยืนยัน</Button>\n            <Button\n              type=\"button\"\n              onClick={() => reset({\n                username: '',\n                email: '',\n                url: '',\n                password: '',\n                select: '',\n              })}\n            >\n              ยกเลิก\n            </Button>\n          </ButtonToolbar>\n        </form>\n      </CardBody>\n    </Col>\n  );\n};\n\nForm.propTypes = {\n  isHorizontal: PropTypes.bool,\n  isAboveError: PropTypes.bool,\n};\n\nForm.defaultProps = {\n  isHorizontal: false,\n  isAboveError: false,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}