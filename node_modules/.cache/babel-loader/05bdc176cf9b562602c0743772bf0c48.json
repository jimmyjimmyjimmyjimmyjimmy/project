{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Layout/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { CustomizerProps, SidebarProps, ThemeProps, RTLProps, BlocksShadowsProps, RoundBordersProps } from '@/shared/prop-types/ReducerProps';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '@/redux/actions/sidebarActions';\nimport { changeThemeToDark, changeThemeToLight } from '@/redux/actions/themeActions';\nimport { changeDirectionToRTL, changeDirectionToLTR } from '@/redux/actions/rtlActions';\nimport { toggleTopNavigation } from '@/redux/actions/customizerActions';\nimport { changeRoundBordersToOnAction, changeRoundBordersToOffAction } from '@/redux/actions/roundBordersActions';\nimport { changeBlocksShadowsToOnAction, changeBlocksShadowsToOffAction } from '@/redux/actions/blocksShadowsActions';\nimport Topbar from './topbar/Topbar';\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Customizer from './customizer/Customizer';\nimport WelcomeNotification from './components/WelcomeNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = ({\n  dispatch,\n  customizer,\n  sidebar,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows\n}) => {\n  _s();\n\n  const [isNotificationShown, setIsNotificationShown] = useState(false);\n  useEffect(() => {\n    if (!isNotificationShown) {\n      WelcomeNotification(theme, rtl, setIsNotificationShown, isNotificationShown);\n    }\n  }, [theme, rtl, isNotificationShown]);\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  const changeToRTL = () => {\n    dispatch(changeDirectionToRTL());\n  };\n\n  const changeToLTR = () => {\n    dispatch(changeDirectionToLTR());\n  };\n\n  const topNavigation = () => {\n    dispatch(toggleTopNavigation());\n  };\n\n  const changeRoundBordersOn = () => {\n    dispatch(changeRoundBordersToOnAction());\n  };\n\n  const changeRoundBordersOff = () => {\n    dispatch(changeRoundBordersToOffAction());\n  };\n\n  const changeBlocksShadowsOn = () => {\n    dispatch(changeBlocksShadowsToOnAction());\n  };\n\n  const changeBlocksShadowsOff = () => {\n    dispatch(changeBlocksShadowsToOffAction());\n  };\n\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n    'layout--top-navigation': customizer.topNavigation\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: layoutClass,\n    children: [/*#__PURE__*/_jsxDEV(Customizer, {\n      customizer: customizer,\n      sidebar: sidebar,\n      theme: theme,\n      rtl: rtl,\n      roundBorders: roundBorders,\n      blocksShadows: blocksShadows,\n      changeSidebarVisibility: sidebarVisibility,\n      toggleTopNavigation: topNavigation,\n      changeToDark: changeToDark,\n      changeToLight: changeToLight,\n      changeToRTL: changeToRTL,\n      changeToLTR: changeToLTR,\n      changeRoundBordersOn: changeRoundBordersOn,\n      changeRoundBordersOff: changeRoundBordersOff,\n      changeBlocksShadowsOn: changeBlocksShadowsOn,\n      changeBlocksShadowsOff: changeBlocksShadowsOff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), customizer.topNavigation ? /*#__PURE__*/_jsxDEV(TopbarWithNavigation, {\n      changeMobileSidebarVisibility: mobileSidebarVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Topbar, {\n      changeMobileSidebarVisibility: mobileSidebarVisibility,\n      changeSidebarVisibility: sidebarVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      sidebar: sidebar,\n      changeToDark: changeToDark,\n      changeToLight: changeToLight,\n      changeMobileSidebarVisibility: mobileSidebarVisibility,\n      topNavigation: customizer.topNavigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"jLVabMSjdh1riGnydYTWIntnPbY=\");\n\n_c = Layout;\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired\n};\nexport default withRouter(connect(state => ({\n  customizer: state.customizer,\n  sidebar: state.sidebar,\n  theme: state.theme,\n  rtl: state.rtl,\n  roundBorders: state.roundBorders,\n  blocksShadows: state.blocksShadows\n}))(Layout));\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Layout/index.jsx"],"names":["React","useEffect","useState","PropTypes","withRouter","connect","classNames","CustomizerProps","SidebarProps","ThemeProps","RTLProps","BlocksShadowsProps","RoundBordersProps","changeMobileSidebarVisibility","changeSidebarVisibility","changeThemeToDark","changeThemeToLight","changeDirectionToRTL","changeDirectionToLTR","toggleTopNavigation","changeRoundBordersToOnAction","changeRoundBordersToOffAction","changeBlocksShadowsToOnAction","changeBlocksShadowsToOffAction","Topbar","TopbarWithNavigation","Sidebar","Customizer","WelcomeNotification","Layout","dispatch","customizer","sidebar","theme","rtl","roundBorders","blocksShadows","isNotificationShown","setIsNotificationShown","sidebarVisibility","mobileSidebarVisibility","changeToDark","changeToLight","changeToRTL","changeToLTR","topNavigation","changeRoundBordersOn","changeRoundBordersOff","changeBlocksShadowsOn","changeBlocksShadowsOff","layoutClass","layout","collapse","propTypes","func","isRequired","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  CustomizerProps, SidebarProps, ThemeProps, RTLProps, BlocksShadowsProps, RoundBordersProps,\n} from '@/shared/prop-types/ReducerProps';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '@/redux/actions/sidebarActions';\nimport {\n  changeThemeToDark, changeThemeToLight,\n} from '@/redux/actions/themeActions';\nimport {\n  changeDirectionToRTL, changeDirectionToLTR,\n} from '@/redux/actions/rtlActions';\nimport { toggleTopNavigation } from '@/redux/actions/customizerActions';\nimport {\n  changeRoundBordersToOnAction, changeRoundBordersToOffAction,\n} from '@/redux/actions/roundBordersActions';\nimport {\n  changeBlocksShadowsToOnAction, changeBlocksShadowsToOffAction,\n} from '@/redux/actions/blocksShadowsActions';\nimport Topbar from './topbar/Topbar';\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Customizer from './customizer/Customizer';\nimport WelcomeNotification from './components/WelcomeNotification';\n\nconst Layout = ({\n  dispatch, customizer, sidebar, theme, rtl, roundBorders, blocksShadows,\n}) => {\n  const [isNotificationShown, setIsNotificationShown] = useState(false);\n\n  useEffect(() => {\n    if (!isNotificationShown) {\n      WelcomeNotification(theme, rtl, setIsNotificationShown, isNotificationShown);\n    }\n  }, [theme, rtl, isNotificationShown]);\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  const changeToRTL = () => {\n    dispatch(changeDirectionToRTL());\n  };\n\n  const changeToLTR = () => {\n    dispatch(changeDirectionToLTR());\n  };\n\n  const topNavigation = () => {\n    dispatch(toggleTopNavigation());\n  };\n\n  const changeRoundBordersOn = () => {\n    dispatch(changeRoundBordersToOnAction());\n  };\n\n  const changeRoundBordersOff = () => {\n    dispatch(changeRoundBordersToOffAction());\n  };\n\n  const changeBlocksShadowsOn = () => {\n    dispatch(changeBlocksShadowsToOnAction());\n  };\n\n  const changeBlocksShadowsOff = () => {\n    dispatch(changeBlocksShadowsToOffAction());\n  };\n\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n    'layout--top-navigation': customizer.topNavigation,\n  });\n\n  return (\n    <div className={layoutClass}>\n      <Customizer\n        customizer={customizer}\n        sidebar={sidebar}\n        theme={theme}\n        rtl={rtl}\n        roundBorders={roundBorders}\n        blocksShadows={blocksShadows}\n        changeSidebarVisibility={sidebarVisibility}\n        toggleTopNavigation={topNavigation}\n        changeToDark={changeToDark}\n        changeToLight={changeToLight}\n        changeToRTL={changeToRTL}\n        changeToLTR={changeToLTR}\n        changeRoundBordersOn={changeRoundBordersOn}\n        changeRoundBordersOff={changeRoundBordersOff}\n        changeBlocksShadowsOn={changeBlocksShadowsOn}\n        changeBlocksShadowsOff={changeBlocksShadowsOff}\n      />\n      {customizer.topNavigation\n        ? (\n          <TopbarWithNavigation\n            changeMobileSidebarVisibility={mobileSidebarVisibility}\n          />\n        )\n        : (\n          <Topbar\n            changeMobileSidebarVisibility={mobileSidebarVisibility}\n            changeSidebarVisibility={sidebarVisibility}\n          />\n        )}\n      <Sidebar\n        sidebar={sidebar}\n        changeToDark={changeToDark}\n        changeToLight={changeToLight}\n        changeMobileSidebarVisibility={mobileSidebarVisibility}\n        topNavigation={customizer.topNavigation}\n      />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n};\n\nexport default withRouter(connect(state => ({\n  customizer: state.customizer,\n  sidebar: state.sidebar,\n  theme: state.theme,\n  rtl: state.rtl,\n  roundBorders: state.roundBorders,\n  blocksShadows: state.blocksShadows,\n}))(Layout));\n"]},"metadata":{},"sourceType":"module"}