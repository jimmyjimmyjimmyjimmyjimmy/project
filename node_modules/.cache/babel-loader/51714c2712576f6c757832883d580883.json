{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { fetchPokemonRequest, fetchPokemonSuccess, fetchPokemonError } from '../actions/pokemonActions';\nconst defaultState = {\n  pokemon: [],\n  isFetching: false,\n  error: null\n};\nexport default handleActions({\n  [fetchPokemonRequest](state) {\n    return { ...state,\n      isFetching: true,\n      error: null\n    };\n  },\n\n  [fetchPokemonSuccess](state, {\n    payload\n  }) {\n    return { ...state,\n      pokemon: payload,\n      isFetching: false,\n      error: null\n    };\n  },\n\n  [fetchPokemonError](state, {\n    payload\n  }) {\n    return { ...state,\n      isFetching: false,\n      error: payload\n    };\n  }\n\n}, defaultState);","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/redux/reducers/pokemonReducer.js"],"names":["handleActions","fetchPokemonRequest","fetchPokemonSuccess","fetchPokemonError","defaultState","pokemon","isFetching","error","state","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,2BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAeP,aAAa,CAC1B;AACE,GAACC,mBAAD,EAAsBO,KAAtB,EAA6B;AAC3B,WAAO,EACL,GAAGA,KADE;AAELF,MAAAA,UAAU,EAAE,IAFP;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD,GAPH;;AAQE,GAACL,mBAAD,EAAsBM,KAAtB,EAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAA0C;AACxC,WAAO,EACL,GAAGD,KADE;AAELH,MAAAA,OAAO,EAAEI,OAFJ;AAGLH,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,KAAK,EAAE;AAJF,KAAP;AAMD,GAfH;;AAgBE,GAACJ,iBAAD,EAAoBK,KAApB,EAA2B;AAAEC,IAAAA;AAAF,GAA3B,EAAwC;AACtC,WAAO,EACL,GAAGD,KADE;AAELF,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,KAAK,EAAEE;AAHF,KAAP;AAKD;;AAtBH,CAD0B,EAyB1BL,YAzB0B,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\nimport {\n  fetchPokemonRequest,\n  fetchPokemonSuccess,\n  fetchPokemonError,\n} from '../actions/pokemonActions';\n\nconst defaultState = {\n  pokemon: [],\n  isFetching: false,\n  error: null,\n};\n\nexport default handleActions(\n  {\n    [fetchPokemonRequest](state) {\n      return {\n        ...state,\n        isFetching: true,\n        error: null,\n      };\n    },\n    [fetchPokemonSuccess](state, { payload }) {\n      return {\n        ...state,\n        pokemon: payload,\n        isFetching: false,\n        error: null,\n      };\n    },\n    [fetchPokemonError](state, { payload }) {\n      return {\n        ...state,\n        isFetching: false,\n        error: payload,\n      };\n    },\n  },\n  defaultState,\n);\n"]},"metadata":{},"sourceType":"module"}