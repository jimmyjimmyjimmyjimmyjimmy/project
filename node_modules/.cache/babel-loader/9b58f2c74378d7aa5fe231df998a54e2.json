{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport api from '../../utils/apiClient';\nexport const fetchAppConfigRequest = createAction('FETCH_APP_CONFIG_REQUEST');\nexport const fetchAppConfigSuccess = createAction('FETCH_APP_CONFIG_SUCCESS');\nexport const fetchAppConfigFailure = createAction('FETCH_APP_CONFIG_FAILURE');\nexport const fetchAppConfig = () => async dispatch => {\n  try {\n    dispatch(fetchAppConfigRequest());\n    const response = await api.appConfig.getAppConfigData(); // Fake request example\n\n    const configAppData = response.data;\n    dispatch(fetchAppConfigSuccess(configAppData));\n  } catch (error) {\n    dispatch(fetchAppConfigFailure({\n      error\n    }));\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/redux/actions/appConfigActions.js"],"names":["createAction","api","fetchAppConfigRequest","fetchAppConfigSuccess","fetchAppConfigFailure","fetchAppConfig","dispatch","response","appConfig","getAppConfigData","configAppData","data","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,MAAMC,qBAAqB,GAAGF,YAAY,CAAC,0BAAD,CAA1C;AACP,OAAO,MAAMG,qBAAqB,GAAGH,YAAY,CAAC,0BAAD,CAA1C;AACP,OAAO,MAAMI,qBAAqB,GAAGJ,YAAY,CAAC,0BAAD,CAA1C;AAEP,OAAO,MAAMK,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACFA,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AACA,UAAMK,QAAQ,GAAG,MAAMN,GAAG,CAACO,SAAJ,CAAcC,gBAAd,EAAvB,CAFE,CAEuD;;AACzD,UAAMC,aAAa,GAAGH,QAAQ,CAACI,IAA/B;AACAL,IAAAA,QAAQ,CAACH,qBAAqB,CAACO,aAAD,CAAtB,CAAR;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACF,qBAAqB,CAAC;AAAEQ,MAAAA;AAAF,KAAD,CAAtB,CAAR;AACA,UAAMA,KAAN;AACD;AACF,CAVM","sourcesContent":["import { createAction } from 'redux-actions';\nimport api from '../../utils/apiClient';\n\nexport const fetchAppConfigRequest = createAction('FETCH_APP_CONFIG_REQUEST');\nexport const fetchAppConfigSuccess = createAction('FETCH_APP_CONFIG_SUCCESS');\nexport const fetchAppConfigFailure = createAction('FETCH_APP_CONFIG_FAILURE');\n\nexport const fetchAppConfig = () => async (dispatch) => {\n  try {\n    dispatch(fetchAppConfigRequest());\n    const response = await api.appConfig.getAppConfigData(); // Fake request example\n    const configAppData = response.data;\n    dispatch(fetchAppConfigSuccess(configAppData));\n  } catch (error) {\n    dispatch(fetchAppConfigFailure({ error }));\n    throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}