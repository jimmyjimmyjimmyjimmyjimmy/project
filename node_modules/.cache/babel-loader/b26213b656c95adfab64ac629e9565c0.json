{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { deleteNewOrderTableData } from '@/redux/actions/newOrderTableActions';\nimport { NewOrderTableProps } from '@/shared/prop-types/TablesProps';\nimport { RTLProps } from '@/shared/prop-types/ReducerProps';\nimport TotalProducts from './components/TotalProducts';\nimport TotalProfit from './components/TotalProfit';\nimport OrdersToday from './components/OrdersToday';\nimport Subscriptions from './components/Subscriptions';\nimport TopSellingProducts from './components/TopSellingProducts';\nimport BasicCard from './components/BasicCard';\nimport SalesStatistic from './components/SalesStatistic';\nimport RecentOrders from './components/RecentOrders';\nimport ProductSales from './components/ProductSales';\nimport NewOrders from './components/NewOrders';\nimport SalesStatisticBar from './components/SalesStatisticBar';\nimport MyTodos from './components/MyTodos';\nimport Emails from './components/Emails';\nimport SalesReport from './components/SalesReport';\nimport ShortReminders from './components/ShortReminders';\nimport { editTodoElement, fetchTodoListData } from '../../Todo/redux/actions';\nimport todoCard from '../../Todo/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onDeleteRow = (dispatch, newOrder) => index => {\n  const arrayCopy = [...newOrder];\n  arrayCopy.splice(index, 1);\n  dispatch(deleteNewOrderTableData(arrayCopy));\n};\n\nconst ECommerceDashboard = ({\n  newOrder,\n  todoElements,\n  rtl,\n  editTodoElementAction,\n  fetchTodoListDataAction\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  useEffect(() => {\n    if (todoElements.length === 0) {\n      // You can delete it if you need\n      fetchTodoListDataAction();\n    }\n  }, [fetchTodoListDataAction, todoElements.length]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"page-title\",\n          children: t('dashboard_commerce.page_title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(TotalProducts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TotalProfit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrdersToday, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subscriptions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(ProductSales, {\n        rtl: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BasicCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SalesStatistic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyTodos, {\n        todoElements: todoElements,\n        editTodoElement: editTodoElementAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SalesStatisticBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SalesReport, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Emails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShortReminders, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopSellingProducts, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewOrders, {\n        newOrder: newOrder,\n        onDeleteRow: onDeleteRow(editTodoElementAction, newOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecentOrders, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ECommerceDashboard, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ECommerceDashboard;\nECommerceDashboard.propTypes = {\n  newOrder: NewOrderTableProps.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired,\n  fetchTodoListDataAction: PropTypes.func.isRequired,\n  editTodoElementAction: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired\n};\n\nconst mapStateToProps = state => {\n  const todoElements = state.todo && state.todo.data && state.todo.data.elements && state.todo.data.elements.length > 0 ? [...state.todo.data.elements] : [];\n  return {\n    newOrder: state.newOrder.items,\n    todoElements,\n    rtl: state.rtl\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchTodoListDataAction: fetchTodoListData,\n  editTodoElementAction: editTodoElement\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ECommerceDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ECommerceDashboard\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/index.jsx"],"names":["React","useEffect","PropTypes","connect","useTranslation","Col","Container","Row","deleteNewOrderTableData","NewOrderTableProps","RTLProps","TotalProducts","TotalProfit","OrdersToday","Subscriptions","TopSellingProducts","BasicCard","SalesStatistic","RecentOrders","ProductSales","NewOrders","SalesStatisticBar","MyTodos","Emails","SalesReport","ShortReminders","editTodoElement","fetchTodoListData","todoCard","onDeleteRow","dispatch","newOrder","index","arrayCopy","splice","ECommerceDashboard","todoElements","rtl","editTodoElementAction","fetchTodoListDataAction","t","length","direction","propTypes","isRequired","arrayOf","func","mapStateToProps","state","todo","data","elements","items","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { deleteNewOrderTableData } from '@/redux/actions/newOrderTableActions';\nimport { NewOrderTableProps } from '@/shared/prop-types/TablesProps';\nimport { RTLProps } from '@/shared/prop-types/ReducerProps';\nimport TotalProducts from './components/TotalProducts';\nimport TotalProfit from './components/TotalProfit';\nimport OrdersToday from './components/OrdersToday';\nimport Subscriptions from './components/Subscriptions';\nimport TopSellingProducts from './components/TopSellingProducts';\nimport BasicCard from './components/BasicCard';\nimport SalesStatistic from './components/SalesStatistic';\nimport RecentOrders from './components/RecentOrders';\nimport ProductSales from './components/ProductSales';\nimport NewOrders from './components/NewOrders';\nimport SalesStatisticBar from './components/SalesStatisticBar';\nimport MyTodos from './components/MyTodos';\nimport Emails from './components/Emails';\nimport SalesReport from './components/SalesReport';\nimport ShortReminders from './components/ShortReminders';\nimport { editTodoElement, fetchTodoListData } from '../../Todo/redux/actions';\nimport todoCard from '../../Todo/types';\n\nconst onDeleteRow = (dispatch, newOrder) => (index) => {\n  const arrayCopy = [...newOrder];\n  arrayCopy.splice(index, 1);\n  dispatch(deleteNewOrderTableData(arrayCopy));\n};\n\nconst ECommerceDashboard = ({\n  newOrder, todoElements, rtl, editTodoElementAction, fetchTodoListDataAction,\n}) => {\n  const { t } = useTranslation('common');\n\n  useEffect(() => {\n    if (todoElements.length === 0) { // You can delete it if you need\n      fetchTodoListDataAction();\n    }\n  }, [fetchTodoListDataAction, todoElements.length]);\n\n  return (\n    <Container className=\"dashboard\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">{t('dashboard_commerce.page_title')}</h3>\n        </Col>\n      </Row>\n      <Row>\n        <TotalProducts />\n        <TotalProfit />\n        <OrdersToday />\n        <Subscriptions />\n      </Row>\n      <Row>\n        <ProductSales rtl={rtl.direction} />\n        <BasicCard />\n        <SalesStatistic />\n        <MyTodos\n          todoElements={todoElements}\n          editTodoElement={editTodoElementAction}\n        />\n        <SalesStatisticBar />\n        <SalesReport />\n        <Emails />\n        <ShortReminders />\n        <TopSellingProducts dir={rtl.direction} />\n        <NewOrders newOrder={newOrder} onDeleteRow={onDeleteRow(editTodoElementAction, newOrder)} />\n        <RecentOrders />\n      </Row>\n    </Container>\n  );\n};\n\nECommerceDashboard.propTypes = {\n  newOrder: NewOrderTableProps.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired,\n  fetchTodoListDataAction: PropTypes.func.isRequired,\n  editTodoElementAction: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired,\n\n};\n\nconst mapStateToProps = (state) => {\n  const todoElements = state.todo && state.todo.data && state.todo.data.elements\n  && state.todo.data.elements.length > 0 ? [...state.todo.data.elements] : [];\n  return ({\n    newOrder: state.newOrder.items,\n    todoElements,\n    rtl: state.rtl,\n  });\n};\n\nconst mapDispatchToProps = {\n  fetchTodoListDataAction: fetchTodoListData,\n  editTodoElementAction: editTodoElement,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ECommerceDashboard);\n"]},"metadata":{},"sourceType":"module"}