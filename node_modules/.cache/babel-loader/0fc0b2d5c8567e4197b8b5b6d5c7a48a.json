{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/Expand.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expand = ({\n  color,\n  outline,\n  title\n}) => {\n  _s();\n\n  const [load, setLoad] = useState(false);\n\n  const onLoad = () => {\n    setLoad(true);\n  };\n\n  const request = () => {\n    // your async logic here\n    setTimeout(() => setLoad(false), 5000);\n  };\n\n  useEffect(() => {\n    if (load) {\n      request();\n    }\n  }, [load]);\n  const expandClass = classNames({\n    icon: true,\n    expand: true,\n    'expand--load': load\n  });\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onLoad,\n    className: expandClass,\n    color: color,\n    outline: outline,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expand, \"ijzMgfjU450NjE2OuXXNqDmJ21Y=\");\n\n_c = Expand;\nExpand.propTypes = {\n  title: PropTypes.string,\n  outline: PropTypes.bool,\n  color: PropTypes.string\n};\nExpand.defaultProps = {\n  title: '',\n  outline: false,\n  color: 'secondary'\n};\nexport default Expand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expand\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/Expand.jsx"],"names":["React","useState","useEffect","PropTypes","Button","LoadingIcon","classNames","Expand","color","outline","title","load","setLoad","onLoad","request","setTimeout","expandClass","icon","expand","propTypes","string","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAA+B;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMY,MAAM,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAME,OAAO,GAAG,MAAM;AACpB;AACAC,IAAAA,UAAU,CAAC,MAAMH,OAAO,CAAC,KAAD,CAAd,EAAuB,IAAvB,CAAV;AACD,GAHD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAJ,EAAU;AACRG,MAAAA,OAAO;AACR;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;AAMA,QAAMK,WAAW,GAAGV,UAAU,CAAC;AAC7BW,IAAAA,IAAI,EAAE,IADuB;AAE7BC,IAAAA,MAAM,EAAE,IAFqB;AAG7B,oBAAgBP;AAHa,GAAD,CAA9B;AAMA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEE,MADX;AAEE,IAAA,SAAS,EAAEG,WAFb;AAGE,IAAA,KAAK,EAAER,KAHT;AAIE,IAAA,OAAO,EAAEC,OAJX;AAAA,2BAME;AAAA,8BAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAH,OAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhCD;;GAAMH,M;;KAAAA,M;AAkCNA,MAAM,CAACY,SAAP,GAAmB;AACjBT,EAAAA,KAAK,EAAEP,SAAS,CAACiB,MADA;AAEjBX,EAAAA,OAAO,EAAEN,SAAS,CAACkB,IAFF;AAGjBb,EAAAA,KAAK,EAAEL,SAAS,CAACiB;AAHA,CAAnB;AAMAb,MAAM,CAACe,YAAP,GAAsB;AACpBZ,EAAAA,KAAK,EAAE,EADa;AAEpBD,EAAAA,OAAO,EAAE,KAFW;AAGpBD,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,eAAeD,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\nimport classNames from 'classnames';\n\nconst Expand = ({ color, outline, title }) => {\n  const [load, setLoad] = useState(false);\n\n  const onLoad = () => {\n    setLoad(true);\n  };\n  const request = () => {\n    // your async logic here\n    setTimeout(() => setLoad(false), 5000);\n  };\n  useEffect(() => {\n    if (load) {\n      request();\n    }\n  }, [load]);\n\n  const expandClass = classNames({\n    icon: true,\n    expand: true,\n    'expand--load': load,\n  });\n\n  return (\n    <Button\n      onClick={onLoad}\n      className={expandClass}\n      color={color}\n      outline={outline}\n    >\n      <p><LoadingIcon /> {title}</p>\n    </Button>\n  );\n};\n\nExpand.propTypes = {\n  title: PropTypes.string,\n  outline: PropTypes.bool,\n  color: PropTypes.string,\n};\n\nExpand.defaultProps = {\n  title: '',\n  outline: false,\n  color: 'secondary',\n};\n\nexport default Expand;\n"]},"metadata":{},"sourceType":"module"}