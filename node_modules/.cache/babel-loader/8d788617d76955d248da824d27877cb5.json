{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/IntervalDatePicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { isMobileOnly } from 'react-device-detect';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IntervalDatePickerField = ({\n  onChange\n}) => {\n  _s();\n\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null\n  });\n\n  const handleChange = ({\n    startDate,\n    endDate\n  }) => {\n    const {\n      startDate: stateStartDate,\n      endDate: stateEndDate\n    } = state;\n    const startDateCopy = startDate || stateStartDate;\n    const endDateCopy = endDate || stateEndDate;\n    setState({\n      startDate: startDateCopy,\n      endDate: endDateCopy\n    });\n    onChange({\n      start: startDateCopy,\n      end: endDateCopy\n    });\n  };\n\n  const handleChangeStart = startDate => handleChange({\n    startDate\n  });\n\n  const handleChangeEnd = endDate => handleChange({\n    endDate\n  });\n\n  const {\n    startDate,\n    endDate\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-picker date-picker--interval\",\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: startDate,\n      selectsStart: true,\n      startDate: startDate,\n      endDate: endDate,\n      onChange: handleChangeStart,\n      dateFormat: \"yyyy/MM/dd\",\n      placeholderText: \"From\",\n      dropDownMode: \"select\",\n      withPortal: isMobileOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MinusIcon, {\n      className: \"date-picker__svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: endDate,\n      selectsEnd: true,\n      startDate: startDate,\n      endDate: endDate,\n      onChange: handleChangeEnd,\n      dateFormat: \"yyyy/MM/dd\",\n      placeholderText: \"To\",\n      dropDownMode: \"select\",\n      withPortal: isMobileOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IntervalDatePickerField, \"GUXZDq6PMdDkLxZeIeor6pxHFaQ=\");\n\n_c = IntervalDatePickerField;\nIntervalDatePickerField.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\nexport default _c2 = renderComponentField(IntervalDatePickerField);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IntervalDatePickerField\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/IntervalDatePicker.jsx"],"names":["React","useState","DatePicker","isMobileOnly","MinusIcon","PropTypes","renderComponentField","IntervalDatePickerField","onChange","state","setState","startDate","endDate","handleChange","stateStartDate","stateEndDate","startDateCopy","endDateCopy","start","end","handleChangeStart","handleChangeEnd","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;;AAEA,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AACjCU,IAAAA,SAAS,EAAE,IADsB;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;;AAKA,QAAMC,YAAY,GAAG,CAAC;AAAEF,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,KAA4B;AAC/C,UAAM;AAAED,MAAAA,SAAS,EAAEG,cAAb;AAA6BF,MAAAA,OAAO,EAAEG;AAAtC,QAAuDN,KAA7D;AAEA,UAAMO,aAAa,GAAGL,SAAS,IAAIG,cAAnC;AACA,UAAMG,WAAW,GAAGL,OAAO,IAAIG,YAA/B;AAEAL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,SAAS,EAAEK,aAAb;AAA4BJ,MAAAA,OAAO,EAAEK;AAArC,KAAD,CAAR;AACAT,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,KAAK,EAAEF,aAAT;AAAwBG,MAAAA,GAAG,EAAEF;AAA7B,KAAD,CAAR;AACD,GARD;;AAUA,QAAMG,iBAAiB,GAAGT,SAAS,IAAIE,YAAY,CAAC;AAAEF,IAAAA;AAAF,GAAD,CAAnD;;AACA,QAAMU,eAAe,GAAGT,OAAO,IAAIC,YAAY,CAAC;AAAED,IAAAA;AAAF,GAAD,CAA/C;;AAEA,QAAM;AAAED,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBH,KAA/B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEE,SADZ;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,SAAS,EAAEA,SAHb;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,QAAQ,EAAEQ,iBALZ;AAME,MAAA,UAAU,EAAC,YANb;AAOE,MAAA,eAAe,EAAC,MAPlB;AAQE,MAAA,YAAY,EAAC,QARf;AASE,MAAA,UAAU,EAAEjB;AATd;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAES,OADZ;AAEE,MAAA,UAAU,MAFZ;AAGE,MAAA,SAAS,EAAED,SAHb;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,QAAQ,EAAES,eALZ;AAME,MAAA,UAAU,EAAC,YANb;AAOE,MAAA,eAAe,EAAC,IAPlB;AAQE,MAAA,YAAY,EAAC,QARf;AASE,MAAA,UAAU,EAAElB;AATd;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/CD;;GAAMI,uB;;KAAAA,uB;AAiDNA,uBAAuB,CAACe,SAAxB,GAAoC;AAClCd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,IAAV,CAAeC;AADS,CAApC;AAIA,qBAAelB,oBAAoB,CAACC,uBAAD,CAAnC","sourcesContent":["import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { isMobileOnly } from 'react-device-detect';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nconst IntervalDatePickerField = ({ onChange }) => {\n  const [state, setState] = useState({\n    startDate: null,\n    endDate: null,\n  });\n\n  const handleChange = ({ startDate, endDate }) => {\n    const { startDate: stateStartDate, endDate: stateEndDate } = state;\n\n    const startDateCopy = startDate || stateStartDate;\n    const endDateCopy = endDate || stateEndDate;\n\n    setState({ startDate: startDateCopy, endDate: endDateCopy });\n    onChange({ start: startDateCopy, end: endDateCopy });\n  };\n\n  const handleChangeStart = startDate => handleChange({ startDate });\n  const handleChangeEnd = endDate => handleChange({ endDate });\n\n  const { startDate, endDate } = state;\n  return (\n    <div className=\"date-picker date-picker--interval\">\n      <DatePicker\n        selected={startDate}\n        selectsStart\n        startDate={startDate}\n        endDate={endDate}\n        onChange={handleChangeStart}\n        dateFormat=\"yyyy/MM/dd\"\n        placeholderText=\"From\"\n        dropDownMode=\"select\"\n        withPortal={isMobileOnly}\n      />\n      <MinusIcon className=\"date-picker__svg\" />\n      <DatePicker\n        selected={endDate}\n        selectsEnd\n        startDate={startDate}\n        endDate={endDate}\n        onChange={handleChangeEnd}\n        dateFormat=\"yyyy/MM/dd\"\n        placeholderText=\"To\"\n        dropDownMode=\"select\"\n        withPortal={isMobileOnly}\n      />\n    </div>\n  );\n};\n\nIntervalDatePickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default renderComponentField(IntervalDatePickerField);\n"]},"metadata":{},"sourceType":"module"}