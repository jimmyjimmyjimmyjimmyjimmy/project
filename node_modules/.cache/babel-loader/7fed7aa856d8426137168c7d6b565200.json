{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableBody.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport ReactTableDnDBody from './ReactTableDnDBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTableDefaultBody = ({\n  page,\n  getTableBodyProps,\n  prepareRow\n}) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n  className: \"table table--bordered\",\n  ...getTableBodyProps(),\n  children: page.map(row => {\n    prepareRow(row);\n    return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n      children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n        children: cell.render('Cell')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = ReactTableDefaultBody;\nReactTableDefaultBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired\n};\n\nconst ReactTableBody = ({\n  page,\n  getTableBodyProps,\n  prepareRow,\n  withDragAndDrop,\n  updateDraggableData,\n  theme\n}) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: withDragAndDrop ? /*#__PURE__*/_jsxDEV(ReactTableDnDBody, {\n    page: page,\n    getTableBodyProps: getTableBodyProps,\n    prepareRow: prepareRow,\n    updateDraggableData: updateDraggableData,\n    theme: theme\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ReactTableDefaultBody, {\n    page: page,\n    getTableBodyProps: getTableBodyProps,\n    prepareRow: prepareRow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n\n_c2 = ReactTableBody;\nReactTableBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n  updateDraggableData: PropTypes.func.isRequired,\n  withDragAndDrop: PropTypes.bool.isRequired,\n  theme: ThemeProps.isRequired\n};\nexport default connect(state => ({\n  theme: state.theme\n}))(ReactTableBody);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactTableDefaultBody\");\n$RefreshReg$(_c2, \"ReactTableBody\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableBody.jsx"],"names":["React","Fragment","PropTypes","connect","ThemeProps","ReactTableDnDBody","ReactTableDefaultBody","page","getTableBodyProps","prepareRow","map","row","getRowProps","cells","cell","getCellProps","render","propTypes","arrayOf","shape","isRequired","func","ReactTableBody","withDragAndDrop","updateDraggableData","theme","bool","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,iBAAR;AAA2BC,EAAAA;AAA3B,CAAD,kBAC5B;AAAO,EAAA,SAAS,EAAC,uBAAjB;AAAA,KAA6CD,iBAAiB,EAA9D;AAAA,YACGD,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AACjBF,IAAAA,UAAU,CAACE,GAAD,CAAV;AACA,wBACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,gBACGD,GAAG,CAACE,KAAJ,CAAUH,GAAV,CAAcI,IAAI,iBACjB,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,kBAA8BD,IAAI,CAACE,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GATA;AADH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMV,qB;AAeNA,qBAAqB,CAACW,SAAtB,GAAkC;AAChCV,EAAAA,IAAI,EAAEL,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,EAAlB,EAAqCC,UADX;AAEhCZ,EAAAA,iBAAiB,EAAEN,SAAS,CAACmB,IAAV,CAAeD,UAFF;AAGhCX,EAAAA,UAAU,EAAEP,SAAS,CAACmB,IAAV,CAAeD;AAHK,CAAlC;;AAMA,MAAME,cAAc,GAAG,CAAC;AACtBf,EAAAA,IADsB;AAChBC,EAAAA,iBADgB;AACGC,EAAAA,UADH;AACec,EAAAA,eADf;AACgCC,EAAAA,mBADhC;AACqDC,EAAAA;AADrD,CAAD,kBAGrB,QAAC,QAAD;AAAA,YACGF,eAAe,gBAEZ,QAAC,iBAAD;AACE,IAAA,IAAI,EAAEhB,IADR;AAEE,IAAA,iBAAiB,EAAEC,iBAFrB;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,mBAAmB,EAAEe,mBAJvB;AAKE,IAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,UAFY,gBAUZ,QAAC,qBAAD;AACE,IAAA,IAAI,EAAElB,IADR;AAEE,IAAA,iBAAiB,EAAEC,iBAFrB;AAGE,IAAA,UAAU,EAAEC;AAHd;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,QAHF;;MAAMa,c;AAuBNA,cAAc,CAACL,SAAf,GAA2B;AACzBV,EAAAA,IAAI,EAAEL,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,EAAlB,EAAqCC,UADlB;AAEzBZ,EAAAA,iBAAiB,EAAEN,SAAS,CAACmB,IAAV,CAAeD,UAFT;AAGzBX,EAAAA,UAAU,EAAEP,SAAS,CAACmB,IAAV,CAAeD,UAHF;AAIzBI,EAAAA,mBAAmB,EAAEtB,SAAS,CAACmB,IAAV,CAAeD,UAJX;AAKzBG,EAAAA,eAAe,EAAErB,SAAS,CAACwB,IAAV,CAAeN,UALP;AAMzBK,EAAAA,KAAK,EAAErB,UAAU,CAACgB;AANO,CAA3B;AASA,eAAejB,OAAO,CAACwB,KAAK,KAAK;AAC/BF,EAAAA,KAAK,EAAEE,KAAK,CAACF;AADkB,CAAL,CAAN,CAAP,CAEXH,cAFW,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport ReactTableDnDBody from './ReactTableDnDBody';\n\nconst ReactTableDefaultBody = ({ page, getTableBodyProps, prepareRow }) => (\n  <tbody className=\"table table--bordered\" {...getTableBodyProps()}>\n    {page.map((row) => {\n      prepareRow(row);\n      return (\n        <tr {...row.getRowProps()}>\n          {row.cells.map(cell => (\n            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n          ))}\n        </tr>\n      );\n    })}\n  </tbody>\n);\n\nReactTableDefaultBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n};\n\nconst ReactTableBody = ({\n  page, getTableBodyProps, prepareRow, withDragAndDrop, updateDraggableData, theme,\n}) => (\n  <Fragment>\n    {withDragAndDrop\n      ? (\n        <ReactTableDnDBody\n          page={page}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          updateDraggableData={updateDraggableData}\n          theme={theme}\n        />\n      ) : (\n        <ReactTableDefaultBody\n          page={page}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n        />\n      )}\n  </Fragment>\n);\n\nReactTableBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n  updateDraggableData: PropTypes.func.isRequired,\n  withDragAndDrop: PropTypes.bool.isRequired,\n  theme: ThemeProps.isRequired,\n};\n\nexport default connect(state => ({\n  theme: state.theme,\n}))(ReactTableBody);\n"]},"metadata":{},"sourceType":"module"}