{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/table/ReactTableBase.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFlexLayout } from 'react-table';\nimport ReactTableConstructor from './components/ReactTableConstructor';\nimport ReactTableCell from './components/ReactTableCell';\nimport ReactTableCellEditable from './components/ReactTableEditableCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTableBase = ({\n  tableConfig,\n  columns,\n  data,\n  updateDraggableData,\n  updateEditableData\n}) => {\n  _s();\n\n  const {\n    isEditable,\n    isResizable,\n    isSortable,\n    withDragAndDrop,\n    withPagination,\n    withSearchEngine,\n    manualPageSize\n  } = tableConfig;\n  const [filterValue, setFilterValue] = useState(null);\n  const tableOptions = {\n    columns,\n    data,\n    updateDraggableData,\n    updateEditableData,\n    setFilterValue,\n    defaultColumn: {},\n    isEditable,\n    withDragAndDrop: withDragAndDrop || false,\n    dataLength: data.length,\n    autoResetPage: false,\n    disableSortBy: !isSortable,\n    manualSortBy: !isSortable,\n    manualGlobalFilter: !withSearchEngine,\n    manualPagination: !withPagination,\n    initialState: {\n      pageIndex: 0,\n      pageSize: manualPageSize ? manualPageSize[0] : 10,\n      globalFilter: withSearchEngine && filterValue ? filterValue : undefined\n    }\n  };\n  let tableOptionalHook = [];\n  if (isResizable) tableOptionalHook = [useFlexLayout];\n\n  if (withSearchEngine) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCell\n    };\n  }\n\n  if (isEditable) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCellEditable\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactTableConstructor, {\n    tableConfig: tableConfig,\n    tableOptions: tableOptions,\n    tableOptionalHook: tableOptionalHook\n  }, isResizable || isEditable ? 'modified' : 'common', false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactTableBase, \"GXzzX4CISKhpdqzZhpEC98BRyjI=\");\n\n_c = ReactTableBase;\nReactTableBase.propTypes = {\n  tableConfig: PropTypes.shape({\n    isEditable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    isSortable: PropTypes.bool,\n    withDragAndDrop: PropTypes.bool,\n    withPagination: PropTypes.bool,\n    withSearchEngine: PropTypes.bool,\n    manualPageSize: PropTypes.arrayOf(PropTypes.number)\n  }),\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string,\n    name: PropTypes.string\n  })),\n  data: PropTypes.arrayOf(PropTypes.shape()),\n  updateDraggableData: PropTypes.func,\n  updateEditableData: PropTypes.func\n};\nReactTableBase.defaultProps = {\n  tableConfig: {\n    isEditable: false,\n    isResizable: false,\n    isSortable: false,\n    withDragAndDrop: false,\n    withPagination: false,\n    withSearchEngine: false,\n    manualPageSize: []\n  },\n  columns: [{\n    Header: '#',\n    accessor: 'id'\n  }, {\n    Header: 'Header Example Title one',\n    accessor: 'first'\n  }, {\n    Header: 'Header Example Title two',\n    accessor: 'last'\n  }],\n  data: [{\n    id: 1,\n    first: 'Cell Example Data one',\n    last: 'Cell Example Data two'\n  }, {\n    id: 2,\n    first: 'Cell Example Data three',\n    last: 'Cell Example Data four'\n  }],\n  updateDraggableData: () => {},\n  updateEditableData: () => {}\n};\nexport default ReactTableBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTableBase\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/table/ReactTableBase.jsx"],"names":["React","useState","PropTypes","useFlexLayout","ReactTableConstructor","ReactTableCell","ReactTableCellEditable","ReactTableBase","tableConfig","columns","data","updateDraggableData","updateEditableData","isEditable","isResizable","isSortable","withDragAndDrop","withPagination","withSearchEngine","manualPageSize","filterValue","setFilterValue","tableOptions","defaultColumn","dataLength","length","autoResetPage","disableSortBy","manualSortBy","manualGlobalFilter","manualPagination","initialState","pageIndex","pageSize","globalFilter","undefined","tableOptionalHook","Cell","propTypes","shape","bool","arrayOf","number","key","string","name","func","defaultProps","Header","accessor","id","first","last"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFlexLayout } from 'react-table';\nimport ReactTableConstructor from './components/ReactTableConstructor';\nimport ReactTableCell from './components/ReactTableCell';\nimport ReactTableCellEditable from './components/ReactTableEditableCell';\n\nconst ReactTableBase = ({\n  tableConfig,\n  columns,\n  data,\n  updateDraggableData,\n  updateEditableData,\n}) => {\n  const {\n    isEditable,\n    isResizable,\n    isSortable,\n    withDragAndDrop,\n    withPagination,\n    withSearchEngine,\n    manualPageSize,\n  } = tableConfig;\n  const [filterValue, setFilterValue] = useState(null);\n  const tableOptions = {\n    columns,\n    data,\n    updateDraggableData,\n    updateEditableData,\n    setFilterValue,\n    defaultColumn: {},\n    isEditable,\n    withDragAndDrop: withDragAndDrop || false,\n    dataLength: data.length,\n    autoResetPage: false,\n    disableSortBy: !isSortable,\n    manualSortBy: !isSortable,\n    manualGlobalFilter: !withSearchEngine,\n    manualPagination: !withPagination,\n    initialState: {\n      pageIndex: 0,\n      pageSize: manualPageSize ? manualPageSize[0] : 10,\n      globalFilter: withSearchEngine && filterValue ? filterValue : undefined,\n    },\n  };\n\n  let tableOptionalHook = [];\n  if (isResizable) tableOptionalHook = [useFlexLayout];\n  if (withSearchEngine) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCell,\n    };\n  }\n  if (isEditable) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCellEditable,\n    };\n  }\n\n  return (\n    <ReactTableConstructor\n      key={isResizable || isEditable ? 'modified' : 'common'}\n      tableConfig={tableConfig}\n      tableOptions={tableOptions}\n      tableOptionalHook={tableOptionalHook}\n    />\n  );\n};\n\nReactTableBase.propTypes = {\n  tableConfig: PropTypes.shape({\n    isEditable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    isSortable: PropTypes.bool,\n    withDragAndDrop: PropTypes.bool,\n    withPagination: PropTypes.bool,\n    withSearchEngine: PropTypes.bool,\n    manualPageSize: PropTypes.arrayOf(PropTypes.number),\n  }),\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string,\n    name: PropTypes.string,\n  })),\n  data: PropTypes.arrayOf(PropTypes.shape()),\n  updateDraggableData: PropTypes.func,\n  updateEditableData: PropTypes.func,\n};\n\nReactTableBase.defaultProps = {\n  tableConfig: {\n    isEditable: false,\n    isResizable: false,\n    isSortable: false,\n    withDragAndDrop: false,\n    withPagination: false,\n    withSearchEngine: false,\n    manualPageSize: [],\n  },\n  columns: [\n    { Header: '#', accessor: 'id' },\n    { Header: 'Header Example Title one', accessor: 'first' },\n    { Header: 'Header Example Title two', accessor: 'last' },\n  ],\n  data: [\n    { id: 1, first: 'Cell Example Data one', last: 'Cell Example Data two' },\n    { id: 2, first: 'Cell Example Data three', last: 'Cell Example Data four' },\n  ],\n  updateDraggableData: () => {},\n  updateEditableData: () => {},\n};\n\nexport default ReactTableBase;\n"]},"metadata":{},"sourceType":"module"}