{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/ToggleButton.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleButtonField = /*#__PURE__*/React.forwardRef(_c = ({\n  onChange,\n  name,\n  disabled,\n  value\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"toggle-btn\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"toggle-btn__input\",\n    type: \"checkbox\",\n    name: name,\n    onChange: onChange,\n    checked: value,\n    disabled: disabled,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"toggle-btn__input-label\",\n    onClick: () => onChange(!value),\n    children: \"Toggle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = ToggleButtonField;\nToggleButtonField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired\n};\nToggleButtonField.defaultProps = {\n  disabled: false\n};\nexport default _c3 = renderComponentField(ToggleButtonField);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ToggleButtonField$React.forwardRef\");\n$RefreshReg$(_c2, \"ToggleButtonField\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/ToggleButton.jsx"],"names":["React","PropTypes","renderComponentField","ToggleButtonField","forwardRef","onChange","name","disabled","value","ref","propTypes","func","isRequired","string","bool","oneOfType","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,OAAO,MAAMC,iBAAiB,gBAAGH,KAAK,CAACI,UAAN,MAAiB,CAAC;AACjDC,EAAAA,QADiD;AACvCC,EAAAA,IADuC;AACjCC,EAAAA,QADiC;AACvBC,EAAAA;AADuB,CAAD,EAE/CC,GAF+C,kBAGhD;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA,0BACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,QAAQ,EAAED,QAJZ;AAKE,IAAA,OAAO,EAAEG,KALX;AAME,IAAA,QAAQ,EAAED,QANZ;AAOE,IAAA,GAAG,EAAEE;AAPP;AAAA;AAAA;AAAA;AAAA,UADF,eAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,yBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,CAACG,KAAF,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF;AAAA;AAAA;AAAA;AAAA;AAAA,QAH+B,CAA1B;MAAML,iB;AAsBbA,iBAAiB,CAACO,SAAlB,GAA8B;AAC5BL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,IAAV,CAAeC,UADG;AAE5BN,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBD,UAFK;AAG5BL,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAHQ;AAI5BN,EAAAA,KAAK,EAAEP,SAAS,CAACc,SAAV,CAAoB,CACzBd,SAAS,CAACY,MADe,EAEzBZ,SAAS,CAACa,IAFe,CAApB,EAGJF;AAPyB,CAA9B;AAUAT,iBAAiB,CAACa,YAAlB,GAAiC;AAC/BT,EAAAA,QAAQ,EAAE;AADqB,CAAjC;AAIA,qBAAeL,oBAAoB,CAACC,iBAAD,CAAnC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nexport const ToggleButtonField = React.forwardRef(({\n  onChange, name, disabled, value,\n}, ref) => (\n  <div className=\"toggle-btn\">\n    <input\n      className=\"toggle-btn__input\"\n      type=\"checkbox\"\n      name={name}\n      onChange={onChange}\n      checked={value}\n      disabled={disabled}\n      ref={ref}\n    />\n    <button\n      type=\"button\"\n      className=\"toggle-btn__input-label\"\n      onClick={() => onChange(!value)}\n    >Toggle\n    </button>\n  </div>\n));\n\nToggleButtonField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]).isRequired,\n};\n\nToggleButtonField.defaultProps = {\n  disabled: false,\n};\n\nexport default renderComponentField(ToggleButtonField);\n"]},"metadata":{},"sourceType":"module"}