{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Maps/GoogleMap/components/PinWithInfoWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  height: '360px'\n};\nconst center = {\n  lat: 56.009483,\n  lng: 92.8121694\n};\n\nconst PinWithInfoWindow = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script'\n  });\n  const [isOpened, setIsOpened] = useState(true);\n\n  const onToggleIsOpen = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const onLoad = infoWindow => {\n    console.log('infoWindow: ', infoWindow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: 12,\n    md: 12,\n    lg: 12,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('maps.google_map.pin_with_info_window')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n          id: \"infoWindowMap\",\n          mapContainerStyle: containerStyle,\n          center: center,\n          zoom: 13,\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            position: center,\n            onClick: onToggleIsOpen,\n            children: !isOpened && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              onLoad: onLoad,\n              options: {\n                closeBoxURL: '',\n                enableEventPropagation: true\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"map__marker-label-content\",\n                children: \"DRAKARYS!!!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PinWithInfoWindow, \"waipmjOqb6rlTo4lP3CGqMYY5qg=\", false, function () {\n  return [useTranslation, useJsApiLoader];\n});\n\n_c = PinWithInfoWindow;\nexport default PinWithInfoWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinWithInfoWindow\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Maps/GoogleMap/components/PinWithInfoWindow.jsx"],"names":["React","Fragment","useState","useTranslation","Card","CardBody","Col","GoogleMap","useJsApiLoader","Marker","InfoWindow","containerStyle","height","center","lat","lng","PinWithInfoWindow","t","isLoaded","id","isOpened","setIsOpened","onToggleIsOpen","onLoad","infoWindow","console","log","closeBoxURL","enableEventPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SACEC,SADF,EACaC,cADb,EAC6BC,MAD7B,EACqCC,UADrC,QAEO,wBAFP;;AAIA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE;AADa,CAAvB;AAIA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,SADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,CAAC,QAAD,CAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAeV,cAAc,CAAC;AAClCW,IAAAA,EAAE,EAAE;AAD8B,GAAD,CAAnC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMoB,cAAc,GAAG,MAAM;AAC3BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMG,MAAM,GAAIC,UAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBAA2BP,CAAC,CAAC,sCAAD;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGC,QAAQ,gBACP,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,eADL;AAEE,UAAA,iBAAiB,EAAEP,cAFrB;AAGE,UAAA,MAAM,EAAEE,MAHV;AAIE,UAAA,IAAI,EAAE,EAJR;AAAA,iCAME,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEA,MAAlB;AAA0B,YAAA,OAAO,EAAES,cAAnC;AAAA,sBACG,CAACF,QAAD,iBACC,QAAC,UAAD;AACE,cAAA,MAAM,EAAEG,MADV;AAEE,cAAA,OAAO,EAAE;AAAEI,gBAAAA,WAAW,EAAE,EAAf;AAAmBC,gBAAAA,sBAAsB,EAAE;AAA3C,eAFX;AAAA,qCAIE;AAAK,gBAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADO,gBAoBL,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAhDD;;GAAMZ,iB;UACUb,c,EACOK,c;;;KAFjBQ,iB;AAkDN,eAAeA,iBAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  GoogleMap, useJsApiLoader, Marker, InfoWindow,\n} from '@react-google-maps/api';\n\nconst containerStyle = {\n  height: '360px',\n};\n\nconst center = {\n  lat: 56.009483,\n  lng: 92.8121694,\n};\n\nconst PinWithInfoWindow = () => {\n  const { t } = useTranslation('common');\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n  });\n\n  const [isOpened, setIsOpened] = useState(true);\n\n  const onToggleIsOpen = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const onLoad = (infoWindow) => {\n    console.log('infoWindow: ', infoWindow);\n  };\n\n  return (\n    <Col xs={12} md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('maps.google_map.pin_with_info_window')}</h5>\n          </div>\n          {isLoaded ? (\n            <GoogleMap\n              id=\"infoWindowMap\"\n              mapContainerStyle={containerStyle}\n              center={center}\n              zoom={13}\n            >\n              <Marker position={center} onClick={onToggleIsOpen}>\n                {!isOpened && (\n                  <InfoWindow\n                    onLoad={onLoad}\n                    options={{ closeBoxURL: '', enableEventPropagation: true }}\n                  >\n                    <div className=\"map__marker-label-content\">\n                      DRAKARYS!!!\n                    </div>\n                  </InfoWindow>\n                )}\n              </Marker>\n            </GoogleMap>\n          ) : <Fragment />}\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default PinWithInfoWindow;\n"]},"metadata":{},"sourceType":"module"}