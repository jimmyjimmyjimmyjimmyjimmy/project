{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/MultiSelect.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MultiSelectField = /*#__PURE__*/React.forwardRef(_c = ({\n  value,\n  name,\n  placeholder,\n  options,\n  onChange,\n  ...other\n}, ref) => {\n  const handleChange = handleChangeValue => {\n    onChange(handleChangeValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    isMulti: true,\n    name: name,\n    value: value,\n    onChange: handleChange,\n    options: options,\n    clearable: false,\n    closeOnSelect: false,\n    removeSelected: false,\n    className: \"react-select\",\n    placeholder: placeholder,\n    classNamePrefix: \"react-select\",\n    ref: ref,\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n});\n_c2 = MultiSelectField;\nMultiSelectField.propTypes = {\n  onChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  }))])\n};\nMultiSelectField.defaultProps = {\n  placeholder: '',\n  onChange: () => {},\n  options: [],\n  value: ''\n};\nexport default _c3 = renderComponentField(MultiSelectField);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MultiSelectField$React.forwardRef\");\n$RefreshReg$(_c2, \"MultiSelectField\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/MultiSelect.jsx"],"names":["React","Select","PropTypes","renderComponentField","MultiSelectField","forwardRef","value","name","placeholder","options","onChange","other","ref","handleChange","handleChangeValue","propTypes","func","string","isRequired","arrayOf","shape","label","oneOfType","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAAC;AAChDC,EAAAA,KADgD;AACzCC,EAAAA,IADyC;AACnCC,EAAAA,WADmC;AACtBC,EAAAA,OADsB;AACbC,EAAAA,QADa;AACH,KAAGC;AADA,CAAD,EAE9CC,GAF8C,KAEtC;AACT,QAAMC,YAAY,GAAIC,iBAAD,IAAuB;AAC1CJ,IAAAA,QAAQ,CAACI,iBAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,MADT;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,QAAQ,EAAEO,YAJZ;AAKE,IAAA,OAAO,EAAEJ,OALX;AAME,IAAA,SAAS,EAAE,KANb;AAOE,IAAA,aAAa,EAAE,KAPjB;AAQE,IAAA,cAAc,EAAE,KARlB;AASE,IAAA,SAAS,EAAC,cATZ;AAUE,IAAA,WAAW,EAAED,WAVf;AAWE,IAAA,eAAe,EAAC,cAXlB;AAYE,IAAA,GAAG,EAAEI,GAZP;AAAA,OAaMD;AAbN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxB+B,CAAzB;MAAMP,gB;AA0BbA,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BL,EAAAA,QAAQ,EAAER,SAAS,CAACc,IADO;AAE3BT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UAFI;AAG3BV,EAAAA,WAAW,EAAEN,SAAS,CAACe,MAHI;AAI3BR,EAAAA,OAAO,EAAEP,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,KAAV,CAAgB;AACzCd,IAAAA,KAAK,EAAEJ,SAAS,CAACe,MADwB;AAEzCI,IAAAA,KAAK,EAAEnB,SAAS,CAACe;AAFwB,GAAhB,CAAlB,CAJkB;AAQ3BX,EAAAA,KAAK,EAAEJ,SAAS,CAACoB,SAAV,CAAoB,CACzBpB,SAAS,CAACe,MADe,EAEzBf,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,KAAV,CAAgB;AAChCd,IAAAA,KAAK,EAAEJ,SAAS,CAACe,MADe;AAEhCI,IAAAA,KAAK,EAAEnB,SAAS,CAACe;AAFe,GAAhB,CAAlB,CAFyB,CAApB;AARoB,CAA7B;AAiBAb,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9Bf,EAAAA,WAAW,EAAE,EADiB;AAE9BE,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFY;AAG9BD,EAAAA,OAAO,EAAE,EAHqB;AAI9BH,EAAAA,KAAK,EAAE;AAJuB,CAAhC;AAOA,qBAAeH,oBAAoB,CAACC,gBAAD,CAAnC","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nexport const MultiSelectField = React.forwardRef(({\n  value, name, placeholder, options, onChange, ...other\n}, ref) => {\n  const handleChange = (handleChangeValue) => {\n    onChange(handleChangeValue);\n  };\n\n  return (\n    <Select\n      isMulti\n      name={name}\n      value={value}\n      onChange={handleChange}\n      options={options}\n      clearable={false}\n      closeOnSelect={false}\n      removeSelected={false}\n      className=\"react-select\"\n      placeholder={placeholder}\n      classNamePrefix=\"react-select\"\n      ref={ref}\n      {...other}\n    />\n  );\n});\n\nMultiSelectField.propTypes = {\n  onChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })),\n  ]),\n};\n\nMultiSelectField.defaultProps = {\n  placeholder: '',\n  onChange: () => {},\n  options: [],\n  value: '',\n};\n\nexport default renderComponentField(MultiSelectField);\n"]},"metadata":{},"sourceType":"module"}