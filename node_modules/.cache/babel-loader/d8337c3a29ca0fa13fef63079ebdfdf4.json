{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/MyTodos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Panel from '@/shared/components/Panel';\nimport todoCard from '../../../Todo/types';\nimport ToDo from './ToDo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst editTodoElementData = ({\n  todoElements,\n  editTodoElement\n}) => e => {\n  const todoId = e.target.id;\n  const elementData = todoElements.find(item => Number(item.data.id) === Number(todoId)).data;\n  elementData.isCompleted = !elementData.isCompleted;\n  editTodoElement(elementData);\n};\n\nconst MyTodos = ({\n  todoElements,\n  editTodoElement\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const [noArchivedTodoElements, setNoArchivedTodoElements] = useState(null);\n  const [archivedTodoElements, setArchivedTodoElements] = useState(null);\n  useEffect(() => {\n    const filteredData = [...todoElements];\n    setNoArchivedTodoElements(filteredData.filter(item => !item.data.isArchived));\n    setArchivedTodoElements(filteredData.filter(item => item.data.isArchived));\n  }, [todoElements]);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    md: 12,\n    lg: 5,\n    xl: 3,\n    xs: 12,\n    title: t('dashboard_commerce.my_todos'),\n    subhead: \"Do not forget to do everything\",\n    children: [noArchivedTodoElements && noArchivedTodoElements.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n      id: todo.data.id,\n      label: todo.data.title,\n      checked: todo.data.isCompleted,\n      onChange: editTodoElementData({\n        todoElements,\n        editTodoElement\n      })\n    }, todo.data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), archivedTodoElements && archivedTodoElements.map(todo => /*#__PURE__*/_jsxDEV(ToDo, {\n      id: todo.data.id,\n      label: todo.data.title,\n      disabled: true\n    }, todo.data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTodos, \"D2S5lHYtHhEotfQRfEqM4W5g1yM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = MyTodos;\nMyTodos.propTypes = {\n  editTodoElement: PropTypes.func.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired\n};\nexport default MyTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTodos\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/MyTodos.jsx"],"names":["React","useEffect","useState","PropTypes","useTranslation","Panel","todoCard","ToDo","editTodoElementData","todoElements","editTodoElement","e","todoId","target","id","elementData","find","item","Number","data","isCompleted","MyTodos","t","noArchivedTodoElements","setNoArchivedTodoElements","archivedTodoElements","setArchivedTodoElements","filteredData","filter","isArchived","map","todo","title","propTypes","func","isRequired","arrayOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAwCC,CAAD,IAAO;AACxE,QAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAxB;AACA,QAAMC,WAAW,GAAGN,YAAY,CAACO,IAAb,CAAkBC,IAAI,IAAIC,MAAM,CAACD,IAAI,CAACE,IAAL,CAAUL,EAAX,CAAN,KAAyBI,MAAM,CAACN,MAAD,CAAzD,EAAmEO,IAAvF;AACAJ,EAAAA,WAAW,CAACK,WAAZ,GAA0B,CAACL,WAAW,CAACK,WAAvC;AACAV,EAAAA,eAAe,CAACK,WAAD,CAAf;AACD,CALD;;AAOA,MAAMM,OAAO,GAAG,CAAC;AAAEZ,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAuC;AAAA;;AACrD,QAAM;AAAEY,IAAAA;AAAF,MAAQlB,cAAc,CAAC,QAAD,CAA5B;AACA,QAAM,CAACmB,sBAAD,EAAyBC,yBAAzB,IAAsDtB,QAAQ,CAAC,IAAD,CAApE;AACA,QAAM,CAACuB,oBAAD,EAAuBC,uBAAvB,IAAkDxB,QAAQ,CAAC,IAAD,CAAhE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,YAAY,GAAG,CAAC,GAAGlB,YAAJ,CAArB;AACAe,IAAAA,yBAAyB,CAACG,YAAY,CAACC,MAAb,CAAoBX,IAAI,IAAI,CAACA,IAAI,CAACE,IAAL,CAAUU,UAAvC,CAAD,CAAzB;AACAH,IAAAA,uBAAuB,CAACC,YAAY,CAACC,MAAb,CAAoBX,IAAI,IAAIA,IAAI,CAACE,IAAL,CAAUU,UAAtC,CAAD,CAAvB;AACD,GAJQ,EAIN,CAACpB,YAAD,CAJM,CAAT;AAMA,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,EAAE,EAAE,EAJN;AAKE,IAAA,KAAK,EAAEa,CAAC,CAAC,6BAAD,CALV;AAME,IAAA,OAAO,EAAC,gCANV;AAAA,eAQGC,sBAAsB,IAAIA,sBAAsB,CAACO,GAAvB,CAA2BC,IAAI,iBACxD,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACZ,IAAL,CAAUL,EAFhB;AAGE,MAAA,KAAK,EAAEiB,IAAI,CAACZ,IAAL,CAAUa,KAHnB;AAIE,MAAA,OAAO,EAAED,IAAI,CAACZ,IAAL,CAAUC,WAJrB;AAKE,MAAA,QAAQ,EAAEZ,mBAAmB,CAAC;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAD;AAL/B,OACOqB,IAAI,CAACZ,IAAL,CAAUL,EADjB;AAAA;AAAA;AAAA;AAAA,YADyB,CAR7B,EAiBGW,oBAAoB,IAAIA,oBAAoB,CAACK,GAArB,CAAyBC,IAAI,iBACpD,QAAC,IAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACZ,IAAL,CAAUL,EAFhB;AAGE,MAAA,KAAK,EAAEiB,IAAI,CAACZ,IAAL,CAAUa,KAHnB;AAIE,MAAA,QAAQ;AAJV,OACOD,IAAI,CAACZ,IAAL,CAAUL,EADjB;AAAA;AAAA;AAAA;AAAA,YADuB,CAjB3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAvCD;;GAAMO,O;UACUjB,c;;;KADViB,O;AAyCNA,OAAO,CAACY,SAAR,GAAoB;AAClBvB,EAAAA,eAAe,EAAEP,SAAS,CAAC+B,IAAV,CAAeC,UADd;AAElB1B,EAAAA,YAAY,EAAEN,SAAS,CAACiC,OAAV,CAAkB9B,QAAlB,EAA4B6B;AAFxB,CAApB;AAKA,eAAed,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Panel from '@/shared/components/Panel';\nimport todoCard from '../../../Todo/types';\nimport ToDo from './ToDo';\n\nconst editTodoElementData = ({ todoElements, editTodoElement }) => (e) => {\n  const todoId = e.target.id;\n  const elementData = todoElements.find(item => Number(item.data.id) === Number(todoId)).data;\n  elementData.isCompleted = !elementData.isCompleted;\n  editTodoElement(elementData);\n};\n\nconst MyTodos = ({ todoElements, editTodoElement }) => {\n  const { t } = useTranslation('common');\n  const [noArchivedTodoElements, setNoArchivedTodoElements] = useState(null);\n  const [archivedTodoElements, setArchivedTodoElements] = useState(null);\n\n  useEffect(() => {\n    const filteredData = [...todoElements];\n    setNoArchivedTodoElements(filteredData.filter(item => !item.data.isArchived));\n    setArchivedTodoElements(filteredData.filter(item => item.data.isArchived));\n  }, [todoElements]);\n\n  return (\n    <Panel\n      md={12}\n      lg={5}\n      xl={3}\n      xs={12}\n      title={t('dashboard_commerce.my_todos')}\n      subhead=\"Do not forget to do everything\"\n    >\n      {noArchivedTodoElements && noArchivedTodoElements.map(todo => (\n        <ToDo\n          key={todo.data.id}\n          id={todo.data.id}\n          label={todo.data.title}\n          checked={todo.data.isCompleted}\n          onChange={editTodoElementData({ todoElements, editTodoElement })}\n        />\n      ))}\n      {archivedTodoElements && archivedTodoElements.map(todo => (\n        <ToDo\n          key={todo.data.id}\n          id={todo.data.id}\n          label={todo.data.title}\n          disabled\n        />\n      ))}\n    </Panel>\n  );\n};\n\nMyTodos.propTypes = {\n  editTodoElement: PropTypes.func.isRequired,\n  todoElements: PropTypes.arrayOf(todoCard).isRequired,\n};\n\nexport default MyTodos;\n"]},"metadata":{},"sourceType":"module"}