{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/UI/Notification/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Col, Container, Row } from 'reactstrap';\nimport { RTLProps, ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport Notification from 'rc-notification';\nimport BasicNotifications from './components/BasicNotifications';\nimport ImageNotifications from './components/ImageNotifications';\nimport ColorStates from './components/ColorStates';\nimport ColorStatesFullWidth from './components/ColorStatesFullWidth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst objectNotification = {\n  LU: null,\n  RU: null,\n  TC: null\n};\nNotification.newInstance({\n  style: {\n    top: 65\n  }\n}, n => {\n  objectNotification.LU = n;\n});\nNotification.newInstance({\n  style: {\n    top: 65\n  }\n}, n => {\n  objectNotification.RU = n;\n});\nNotification.newInstance({\n  style: {\n    top: 65\n  }\n}, n => {\n  objectNotification.TC = n;\n});\n\nconst Notifications = ({\n  rtl,\n  theme\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n\n  const showNotification = ({\n    notification,\n    position\n  }, direction) => {\n    let type;\n    let style;\n    const notificationDefaultProps = {\n      content: notification(theme),\n      key: new Date().getTime(),\n      duration: 5,\n      closable: true,\n      className: `${position} ${direction}-support`\n    };\n\n    switch (position) {\n      case 'left-up':\n        style = {\n          top: 0,\n          left: 0\n        };\n        type = 'LU';\n        break;\n\n      case 'right-up':\n        style = {\n          top: 0,\n          left: 'calc(100vw - 100%)'\n        };\n        type = 'RU';\n        break;\n\n      default:\n        style = {\n          top: 0,\n          left: 0\n        };\n        type = 'TC';\n        break;\n    }\n\n    objectNotification[type].notice({ ...notificationDefaultProps,\n      style\n    });\n  };\n\n  useEffect(() => {\n    const currentTheme = theme.className === 'theme-dark' ? 'theme-light' : 'theme-dark';\n    [].forEach.call(document.querySelectorAll(`.notification--${currentTheme}`), el => {\n      // eslint-disable-next-line no-param-reassign\n      el.className = el.className.replace(`notification--${currentTheme}`, `notification--${theme.className}`);\n    });\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"page-title\",\n          children: t('ui_elements.notifications.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"page-subhead subhead\",\n          children: \"Use this elements, if you want to show some hints or additional information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(BasicNotifications, {\n        theme: theme,\n        showNotification: ({\n          notification,\n          position\n        }) => showNotification({\n          notification,\n          position\n        }, rtl.direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageNotifications, {\n        theme: theme,\n        showNotification: ({\n          notification,\n          position\n        }) => showNotification({\n          notification,\n          position\n        }, rtl.direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorStates, {\n        theme: theme,\n        showNotification: ({\n          notification,\n          position\n        }) => showNotification({\n          notification,\n          position\n        }, rtl.direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorStatesFullWidth, {\n        showNotification: ({\n          notification,\n          position\n        }) => showNotification({\n          notification,\n          position\n        }, rtl.direction)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notifications, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Notifications;\nNotifications.propTypes = {\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired\n};\nexport default compose(connect(state => ({\n  rtl: state.rtl,\n  theme: state.theme\n})))(Notifications);\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/UI/Notification/index.jsx"],"names":["React","useEffect","useTranslation","connect","compose","Col","Container","Row","RTLProps","ThemeProps","Notification","BasicNotifications","ImageNotifications","ColorStates","ColorStatesFullWidth","objectNotification","LU","RU","TC","newInstance","style","top","n","Notifications","rtl","theme","t","showNotification","notification","position","direction","type","notificationDefaultProps","content","key","Date","getTime","duration","closable","className","left","notice","currentTheme","forEach","call","document","querySelectorAll","el","replace","propTypes","isRequired","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Col, Container, Row } from 'reactstrap';\nimport { RTLProps, ThemeProps } from '@/shared/prop-types/ReducerProps';\nimport Notification from 'rc-notification';\nimport BasicNotifications from './components/BasicNotifications';\nimport ImageNotifications from './components/ImageNotifications';\nimport ColorStates from './components/ColorStates';\nimport ColorStatesFullWidth from './components/ColorStatesFullWidth';\n\nconst objectNotification = {\n  LU: null,\n  RU: null,\n  TC: null,\n};\n\nNotification.newInstance({ style: { top: 65 } }, (n) => { objectNotification.LU = n; });\nNotification.newInstance({ style: { top: 65 } }, (n) => { objectNotification.RU = n; });\nNotification.newInstance({ style: { top: 65 } }, (n) => { objectNotification.TC = n; });\n\nconst Notifications = ({ rtl, theme }) => {\n  const { t } = useTranslation('common');\n\n  const showNotification = (\n    { notification, position }, direction,\n  ) => {\n    let type;\n    let style;\n    const notificationDefaultProps = {\n      content: notification(theme),\n      key: new Date().getTime(),\n      duration: 5,\n      closable: true,\n      className: `${position} ${direction}-support`,\n    };\n\n    switch (position) {\n      case 'left-up':\n      style = { top: 0, left: 0 };\n      type = 'LU';\n        break;\n      case 'right-up':\n      style = { top: 0, left: 'calc(100vw - 100%)' };\n      type = 'RU';\n        break;\n      default:\n      style = { top: 0, left: 0 };\n      type = 'TC';\n        break;\n    }\n\n    objectNotification[type].notice({\n      ...notificationDefaultProps,\n      style,\n    });\n  };\n\n  useEffect(() => {\n    const currentTheme = theme.className === 'theme-dark' ? 'theme-light' : 'theme-dark';\n    [].forEach.call(document.querySelectorAll(`.notification--${currentTheme}`), (el) => {\n      // eslint-disable-next-line no-param-reassign\n      el.className = el.className\n        .replace(`notification--${currentTheme}`, `notification--${theme.className}`);\n    });\n  }, [theme]);\n\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">{t('ui_elements.notifications.title')}</h3>\n          <h3 className=\"page-subhead subhead\">Use this elements, if you want to show some hints or additional\n            information\n          </h3>\n        </Col>\n      </Row>\n      <Row>\n        <BasicNotifications\n          theme={theme}\n          showNotification={\n            ({ notification, position }) => showNotification(\n              { notification, position }, rtl.direction,\n            )\n          }\n        />\n        <ImageNotifications\n          theme={theme}\n          showNotification={\n            ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n          }\n        />\n        <ColorStates\n          theme={theme}\n          showNotification={\n            ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n          }\n        />\n        <ColorStatesFullWidth\n          showNotification={\n            ({ notification, position }) => showNotification({ notification, position }, rtl.direction)\n          }\n        />\n      </Row>\n    </Container>\n  );\n};\n\nNotifications.propTypes = {\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired,\n};\n\nexport default compose(connect(state => ({\n  rtl: state.rtl,\n  theme: state.theme,\n})))(Notifications);\n"]},"metadata":{},"sourceType":"module"}