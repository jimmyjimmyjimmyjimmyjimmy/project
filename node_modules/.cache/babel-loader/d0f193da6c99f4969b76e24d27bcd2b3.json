{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/DefaultPage/Gallery/components/Gallery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'reactstrap';\nimport Carousel from '@brainhubeu/react-carousel';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Gallery = ({\n  images,\n  tags\n}) => {\n  _s();\n\n  const [image, setImage] = useState(images);\n  const [currentTag, setCurrentTag] = useState('all');\n  const [tag] = useState(tags);\n  const [isOpenLightbox, setIsOpenLightbox] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  const onFilter = item => {\n    if (item === 'all') {\n      setImage(images);\n      setCurrentTag('all');\n    } else {\n      setImage(images.filter(t => t.type === item));\n      setCurrentTag(item);\n    }\n  };\n\n  const onChange = value => {\n    setCurrentImage(value);\n  };\n\n  const carouselImage = () => {\n    setCarouselImages(image.map(item => item.src));\n  };\n\n  const openLightbox = index => {\n    setIsOpenLightbox(true);\n    setCurrentImage(index);\n    carouselImage();\n  };\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setIsOpenLightbox(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery__btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `gallery__btn${currentTag === 'all' ? ' gallery__btn--active' : ''}`,\n        onClick: () => onFilter('all'),\n        children: \"all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), tag.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `gallery__btn${btn.tag === currentTag ? ' gallery__btn--active' : ''}`,\n        onClick: () => onFilter(btn.tag),\n        children: btn.title\n      }, `index_${btn.tag}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), image.map((img, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"gallery__img-wrap\",\n      onClick: () => openLightbox(index),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.src,\n        alt: img.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, `index_${img.src}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpenLightbox,\n      toggle: closeLightbox,\n      className: \"modal-dialog--primary modal-dialog--carousel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lnr lnr-cross modal__close-btn\",\n            type: \"button\",\n            \"aria-label\": \"close lightbox button\",\n            onClick: closeLightbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n          value: currentImage,\n          onChange: onChange,\n          slides: carouselImages.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, `index_${item}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)),\n          addArrowClickHandler: true,\n          arrowLeft: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__btn\",\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n              className: \"modal__btn_left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this),\n          arrowRight: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal__btn\",\n            children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n              className: \"modal__btn_right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal__footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [currentImage + 1, \" of \", carouselImages.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Gallery, \"OCKHmlEZQ5cgEVqxpmBC1+9ZwXI=\");\n\n_c = Gallery;\nGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    type: PropTypes.string,\n    alt: PropTypes.string\n  })).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.shape({\n    tag: PropTypes.string,\n    title: PropTypes.string\n  })).isRequired\n};\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/DefaultPage/Gallery/components/Gallery.jsx"],"names":["React","useState","PropTypes","Modal","Carousel","ChevronLeftIcon","ChevronRightIcon","Gallery","images","tags","image","setImage","currentTag","setCurrentTag","tag","isOpenLightbox","setIsOpenLightbox","currentImage","setCurrentImage","carouselImages","setCarouselImages","onFilter","item","filter","t","type","onChange","value","carouselImage","map","src","openLightbox","index","closeLightbox","btn","title","img","alt","length","propTypes","arrayOf","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'reactstrap';\nimport Carousel from '@brainhubeu/react-carousel';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nconst Gallery = ({ images, tags }) => {\n  const [image, setImage] = useState(images);\n  const [currentTag, setCurrentTag] = useState('all');\n  const [tag] = useState(tags);\n  const [isOpenLightbox, setIsOpenLightbox] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  const onFilter = (item) => {\n    if (item === 'all') {\n      setImage(images);\n      setCurrentTag('all');\n    } else {\n      setImage(images.filter(t => t.type === item));\n      setCurrentTag(item);\n    }\n  };\n\n  const onChange = (value) => {\n    setCurrentImage(value);\n  };\n\n  const carouselImage = () => {\n    setCarouselImages(image.map(item => item.src));\n  };\n\n  const openLightbox = (index) => {\n    setIsOpenLightbox(true);\n    setCurrentImage(index);\n    carouselImage();\n  };\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setIsOpenLightbox(false);\n  };\n\n  return (\n    <div className=\"gallery\">\n      <div className=\"gallery__btns\">\n        <button\n          type=\"button\"\n          className={`gallery__btn${currentTag === 'all' ? ' gallery__btn--active' : ''}`}\n          onClick={() => onFilter('all')}\n        >\n          all\n        </button>\n        {tag.map(btn => (\n          <button\n            key={`index_${btn.tag}`}\n            type=\"button\"\n            className={`gallery__btn${btn.tag === currentTag ? ' gallery__btn--active' : ''}`}\n            onClick={() => onFilter(btn.tag)}\n          >\n            {btn.title}\n          </button>\n        ))}\n      </div>\n      {image.map((img, index) => (\n        <button\n          key={`index_${img.src}`}\n          type=\"button\"\n          className=\"gallery__img-wrap\"\n          onClick={() => openLightbox(index)}\n        >\n          <img src={img.src} alt={img.alt} />\n        </button>\n      ))}\n      <Modal\n        isOpen={isOpenLightbox}\n        toggle={closeLightbox}\n        className=\"modal-dialog--primary modal-dialog--carousel\"\n      >\n        <div className=\"modal__body\">\n          <div className=\"modal__header\">\n            <button\n              className=\"lnr lnr-cross modal__close-btn\"\n              type=\"button\"\n              aria-label=\"close lightbox button\"\n              onClick={closeLightbox}\n            />\n          </div>\n          <Carousel\n            value={currentImage}\n            onChange={onChange}\n            slides={\n              carouselImages.map(item => (\n                <div key={`index_${item}`}>\n                  <img src={item} alt=\"\" />\n                </div>\n              ))\n            }\n            addArrowClickHandler\n            arrowLeft={(\n              <div className=\"modal__btn\">\n                <ChevronLeftIcon className=\"modal__btn_left\" />\n              </div>\n            )}\n            arrowRight={(\n              <div className=\"modal__btn\">\n                <ChevronRightIcon className=\"modal__btn_right\" />\n              </div>\n            )}\n          />\n          <div className=\"modal__footer\">\n            <p>{currentImage + 1} of {carouselImages.length}</p>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    type: PropTypes.string,\n    alt: PropTypes.string,\n  })).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.shape({\n    tag: PropTypes.string,\n    title: PropTypes.string,\n  })).isRequired,\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}