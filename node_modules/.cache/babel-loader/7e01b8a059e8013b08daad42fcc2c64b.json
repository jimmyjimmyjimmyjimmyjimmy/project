{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/DropZone.jsx\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropZoneField = ({\n  value,\n  customHeight,\n  name,\n  onChange\n}) => {\n  const files = value;\n\n  const onDrop = file => {\n    onChange(file.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl)\n    })));\n  };\n\n  const removeFile = (index, e) => {\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      accept: \"image/jpeg, image/png\",\n      name: name,\n      multiple: false,\n      onDrop: fileToUpload => {\n        onDrop(fileToUpload);\n      },\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        className: \"dropzone__input\",\n        children: [(!files || files.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone__drop-here\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lnr lnr-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), \" Drop file here to upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), files && Array.isArray(files) && files.length > 0 && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"dropzone__img\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: files[0].preview,\n        alt: \"drop-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropzone__img-name\",\n        children: files[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropzone__img-delete\",\n        type: \"button\",\n        onClick: e => removeFile(0, e),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DropZoneField;\nDropZoneField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  customHeight: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string\n  }))]).isRequired\n};\nDropZoneField.defaultProps = {\n  customHeight: false\n};\nexport default _c2 = renderComponentField(DropZoneField);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DropZoneField\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/DropZone.jsx"],"names":["React","Dropzone","PropTypes","renderComponentField","DropZoneField","value","customHeight","name","onChange","files","onDrop","file","map","fl","Object","assign","preview","URL","createObjectURL","removeFile","index","e","preventDefault","filter","val","i","fileToUpload","getRootProps","getInputProps","length","Array","isArray","propTypes","string","isRequired","func","bool","oneOfType","arrayOf","shape","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,KADqB;AACdC,EAAAA,YADc;AACAC,EAAAA,IADA;AACMC,EAAAA;AADN,CAAD,KAEhB;AACJ,QAAMC,KAAK,GAAGJ,KAAd;;AACA,QAAMK,MAAM,GAAIC,IAAD,IAAU;AACvBH,IAAAA,QAAQ,CAACG,IAAI,CAACC,GAAL,CAASC,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcF,EAAd,EAAkB;AACxCG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,EAApB;AAD+B,KAAlB,CAAf,CAAD,CAAR;AAGD,GAJD;;AAKA,QAAMM,UAAU,GAAG,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAd,IAAAA,QAAQ,CAACH,KAAK,CAACkB,MAAN,CAAa,CAACC,GAAD,EAAMC,CAAN,KAAYA,CAAC,KAAKL,KAA/B,CAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAG,4BAA2Bd,YAAY,GAAG,0BAAH,GAAgC,EAAG,EAA3F;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,MAAM,EAAC,uBADT;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,MAAM,EAAGmB,YAAD,IAAkB;AACxBhB,QAAAA,MAAM,CAACgB,YAAD,CAAN;AACD,OANH;AAAA,gBAQG,CAAC;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAD,kBACC,oBAASD,YAAY,EAArB;AAAyB,QAAA,SAAS,EAAC,iBAAnC;AAAA,mBACG,CAAC,CAAClB,KAAD,IAAUA,KAAK,CAACoB,MAAN,KAAiB,CAA5B,kBAEC;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOE,sBAAWD,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YADF,EAqBGnB,KAAK,IAAIqB,KAAK,CAACC,OAAN,CAActB,KAAd,CAAT,IAAiCA,KAAK,CAACoB,MAAN,GAAe,CAAhD,iBAEC;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEpB,KAAK,CAAC,CAAD,CAAL,CAASO,OAAnB;AAA4B,QAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA,kBAAmCP,KAAK,CAAC,CAAD,CAAL,CAASF;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,OAAO,EAAEc,CAAC,IAAIF,UAAU,CAAC,CAAD,EAAIE,CAAJ,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAhDD;;KAAMjB,a;AAkDNA,aAAa,CAAC4B,SAAd,GAA0B;AACxBzB,EAAAA,IAAI,EAAEL,SAAS,CAAC+B,MAAV,CAAiBC,UADC;AAExB1B,EAAAA,QAAQ,EAAEN,SAAS,CAACiC,IAAV,CAAeD,UAFD;AAGxB5B,EAAAA,YAAY,EAAEJ,SAAS,CAACkC,IAHA;AAIxB/B,EAAAA,KAAK,EAAEH,SAAS,CAACmC,SAAV,CAAoB,CACzBnC,SAAS,CAAC+B,MADe,EAEzB/B,SAAS,CAACoC,OAAV,CAAkBpC,SAAS,CAACqC,KAAV,CAAgB;AAChChC,IAAAA,IAAI,EAAEL,SAAS,CAAC+B;AADgB,GAAhB,CAAlB,CAFyB,CAApB,EAKJC;AATqB,CAA1B;AAYA9B,aAAa,CAACoC,YAAd,GAA6B;AAC3BlC,EAAAA,YAAY,EAAE;AADa,CAA7B;AAIA,qBAAeH,oBAAoB,CAACC,aAAD,CAAnC","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nconst DropZoneField = ({\n  value, customHeight, name, onChange,\n}) => {\n  const files = value;\n  const onDrop = (file) => {\n    onChange(file.map(fl => Object.assign(fl, {\n      preview: URL.createObjectURL(fl),\n    })));\n  };\n  const removeFile = (index, e) => {\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  };\n\n  return (\n    <div className={`dropzone dropzone--single${customHeight ? ' dropzone--custom-height' : ''}`}>\n      <Dropzone\n        accept=\"image/jpeg, image/png\"\n        name={name}\n        multiple={false}\n        onDrop={(fileToUpload) => {\n          onDrop(fileToUpload);\n        }}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} className=\"dropzone__input\">\n            {(!files || files.length === 0)\n            && (\n              <div className=\"dropzone__drop-here\">\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\n              </div>\n            )}\n            <input {...getInputProps()} />\n          </div>\n        )}\n      </Dropzone>\n      {files && Array.isArray(files) && files.length > 0\n      && (\n        <aside className=\"dropzone__img\">\n          <img src={files[0].preview} alt=\"drop-img\" />\n          <p className=\"dropzone__img-name\">{files[0].name}</p>\n          <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => removeFile(0, e)}>\n            Remove\n          </button>\n        </aside>\n      )}\n    </div>\n  );\n};\n\nDropZoneField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  customHeight: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n    })),\n  ]).isRequired,\n};\n\nDropZoneField.defaultProps = {\n  customHeight: false,\n};\n\nexport default renderComponentField(DropZoneField);\n"]},"metadata":{},"sourceType":"module"}