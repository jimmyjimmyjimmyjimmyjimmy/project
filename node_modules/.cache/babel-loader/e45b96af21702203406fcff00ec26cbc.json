{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\n\nconst CreateTableData = () => {\n  _s();\n\n  const columns = useMemo(() => [{\n    Header: 'ชื่อเส้นทางวิ่ง',\n    accessor: 'routeName',\n    disableGlobalFilter: true\n  }, {\n    Header: 'สวน',\n    accessor: 'parkName',\n    disableGlobalFilter: true\n  }, {\n    Header: 'ชื่อเส้นทางวิ่ง',\n    accessor: 'routeName',\n    disableGlobalFilter: true\n  }, {\n    Header: 'Location',\n    accessor: 'location',\n    disableGlobalFilter: true\n  }, {\n    Header: 'Work',\n    accessor: 'work',\n    disableGlobalFilter: true,\n    disableSortBy: true\n  }], []);\n\n  const getRandomDate = (start, end) => new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n\n  const data = [];\n\n  const rows = () => {\n    for (let i = 1; i < 36; i += 1) {\n      data.push({\n        id: i,\n        routeName: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n        parkName: ['Morrison', 'Brown  ', 'Medinberg'][Math.floor(Math.random() * 3)],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor(Math.random() * 3)],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor(Math.random() * 4)],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor(Math.random() * 5)]\n      });\n    }\n  };\n\n  rows();\n  const reactTableData = {\n    tableHeaderData: columns,\n    tableRowsData: data\n  };\n  return reactTableData;\n};\n\n_s(CreateTableData, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = CreateTableData;\nexport default CreateTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTableData\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Tables/CreateData.jsx"],"names":["React","useMemo","CreateTableData","columns","Header","accessor","disableGlobalFilter","disableSortBy","getRandomDate","start","end","Date","getTime","Math","random","toLocaleDateString","data","rows","i","push","id","routeName","floor","parkName","user","age","min","round","date","location","work","reactTableData","tableHeaderData","tableRowsData"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\n\nconst CreateTableData = () => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'ชื่อเส้นทางวิ่ง',\n        accessor: 'routeName',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'สวน',\n        accessor: 'parkName',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'ชื่อเส้นทางวิ่ง',\n        accessor: 'routeName',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Location',\n        accessor: 'location',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Work',\n        accessor: 'work',\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n    ],\n    [],\n  );\n\n  const getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  const data = [];\n  const rows = () => {\n    for (let i = 1; i < 36; i += 1) {\n      data.push({\n        id: i,\n        routeName: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        parkName: ['Morrison', 'Brown  ', 'Medinberg'][Math.floor((Math.random() * 3))],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor((Math.random() * 3))],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor((Math.random() * 4))],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor((Math.random() * 5))],\n      });\n    }\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n"]},"metadata":{},"sourceType":"module"}