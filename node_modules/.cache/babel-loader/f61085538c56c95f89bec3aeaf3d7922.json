{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/auth/withAuthFirebase.jsx\";\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { auth as authAction } from '@/redux/actions/authActions';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, FacebookAuthProvider, GoogleAuthProvider, OAuthProvider } from 'firebase/auth';\nimport firebaseAuthSetting from '../../../config/firebase';\nimport ModalLoginForm from '../ModalLoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitializeApp(firebaseAuthSetting);\nconst auth = getAuth();\nconst facebookProvider = new FacebookAuthProvider();\nconst googleProvider = new GoogleAuthProvider();\nconst microsoftProvider = new OAuthProvider('microsoft.com').setCustomParameters({\n  prompt: 'consent',\n  tenant: firebaseAuthSetting.microsoftTenantId\n});\n\nconst signIn = async (provider = null, userProps = {\n  name: '',\n  password: ''\n}) => {\n  if (provider) {\n    return signInWithPopup(auth, provider);\n  }\n\n  return signInWithEmailAndPassword(auth, userProps.username, userProps.password);\n};\n\nconst withAuthFirebase = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  const HocAuth = props => {\n    _s();\n\n    const {\n      history,\n      login\n    } = props;\n    const [error, setError] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const closeModal = () => {\n      setError('');\n      setIsOpen(false);\n    };\n\n    const openModal = () => {\n      setIsOpen(true);\n      setError('');\n    };\n\n    const onLogin = (provider = null) => async userProps => {\n      setError('');\n\n      try {\n        const {\n          user\n        } = await signIn(provider, userProps);\n        const name = user.displayName ? user.displayName : user.email;\n        const avatar = user.photoURL ? user.photoURL : '';\n        login({\n          name,\n          avatar\n        });\n        history.push('/app_dashboard');\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account\",\n      children: [/*#__PURE__*/_jsxDEV(ModalLoginForm, {\n        title: \"Sign in with Firebase\",\n        isOpen: isOpen,\n        error: error,\n        form: \"log_in_modal\",\n        closeModal: closeModal,\n        onLogin: onLogin(),\n        onFacebookLogin: onLogin(facebookProvider),\n        onGoogleLogin: onLogin(googleProvider),\n        onMicrosoftLogin: onLogin(microsoftProvider)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props,\n        changeIsOpenModalFireBase: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(HocAuth, \"pXWbym04mceow055hT7BjRaw86s=\");\n\n  HocAuth.propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func\n    }).isRequired,\n    login: PropTypes.func.isRequired\n  };\n  return connect(null, {\n    login: authAction\n  })(withRouter(HocAuth));\n};\n\nexport default withAuthFirebase;","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/auth/withAuthFirebase.jsx"],"names":["React","useState","withRouter","connect","PropTypes","auth","authAction","initializeApp","getAuth","signInWithEmailAndPassword","signInWithPopup","FacebookAuthProvider","GoogleAuthProvider","OAuthProvider","firebaseAuthSetting","ModalLoginForm","facebookProvider","googleProvider","microsoftProvider","setCustomParameters","prompt","tenant","microsoftTenantId","signIn","provider","userProps","name","password","username","withAuthFirebase","WrappedComponent","HocAuth","props","history","login","error","setError","isOpen","setIsOpen","closeModal","openModal","onLogin","user","displayName","email","avatar","photoURL","push","e","message","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { auth as authAction } from '@/redux/actions/authActions';\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  FacebookAuthProvider,\n  GoogleAuthProvider,\n  OAuthProvider,\n} from 'firebase/auth';\nimport firebaseAuthSetting from '../../../config/firebase';\nimport ModalLoginForm from '../ModalLoginForm';\n\ninitializeApp(firebaseAuthSetting);\nconst auth = getAuth();\nconst facebookProvider = new FacebookAuthProvider();\nconst googleProvider = new GoogleAuthProvider();\nconst microsoftProvider = new OAuthProvider('microsoft.com').setCustomParameters({\n  prompt: 'consent',\n  tenant: firebaseAuthSetting.microsoftTenantId,\n});\nconst signIn = async (provider = null, userProps = { name: '', password: '' }) => {\n  if (provider) {\n    return signInWithPopup(auth, provider);\n  }\n  return signInWithEmailAndPassword(auth, userProps.username, userProps.password);\n};\n\nconst withAuthFirebase = (WrappedComponent) => {\n  const HocAuth = (props) => {\n    const { history, login } = props;\n    const [error, setError] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const closeModal = () => {\n      setError('');\n      setIsOpen(false);\n    };\n\n    const openModal = () => {\n      setIsOpen(true);\n      setError('');\n    };\n\n    const onLogin = (provider = null) => async (userProps) => {\n      setError('');\n      try {\n        const { user } = await signIn(provider, userProps);\n        const name = user.displayName ? user.displayName : user.email;\n        const avatar = user.photoURL ? user.photoURL : '';\n        login({ name, avatar });\n        history.push('/app_dashboard');\n      } catch (e) {\n        setError(e.message);\n      }\n    };\n\n    return (\n      <div className=\"account\">\n        <ModalLoginForm\n          title=\"Sign in with Firebase\"\n          isOpen={isOpen}\n          error={error}\n          form=\"log_in_modal\"\n          closeModal={closeModal}\n          onLogin={onLogin()}\n          onFacebookLogin={onLogin(facebookProvider)}\n          onGoogleLogin={onLogin(googleProvider)}\n          onMicrosoftLogin={onLogin(microsoftProvider)}\n        />\n        <WrappedComponent {...props} changeIsOpenModalFireBase={openModal} />\n      </div>\n    );\n  };\n\n  HocAuth.propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n    login: PropTypes.func.isRequired,\n  };\n\n  return connect(null, { login: authAction })(withRouter(HocAuth));\n};\n\nexport default withAuthFirebase;\n"]},"metadata":{},"sourceType":"module"}