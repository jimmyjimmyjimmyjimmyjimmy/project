{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/Fitness/components/ActivityChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Mon',\n  cycling: 6.8,\n  pv: 800,\n  walking: 2.7\n}, {\n  name: 'Tue',\n  cycling: 8.1,\n  pv: 967,\n  walking: 0\n}, {\n  name: 'Wed',\n  cycling: 3,\n  pv: 1098,\n  walking: 5.4\n}, {\n  name: 'Thu',\n  cycling: 5.5,\n  pv: 1200,\n  walking: 4.8\n}, {\n  name: 'Fri',\n  cycling: 4,\n  pv: 1108,\n  walking: 2.6\n}, {\n  name: 'Sat',\n  cycling: 7,\n  pv: 1108,\n  walking: 6\n}, {\n  name: 'Sun',\n  cycling: 8.2,\n  pv: 680,\n  walking: 4.1\n}];\n\nconst ActivityChart = ({\n  dir,\n  themeName\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    xs: 12,\n    lg: 12,\n    title: t('fitness_dashboard.activity_chart'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dir: \"ltr\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        height: 250,\n        className: \"dashboard__area\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: data,\n          margin: {\n            top: 20,\n            left: -15,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            tickLine: false,\n            reversed: dir === 'rtl'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickFormatter: value => `${value}km`,\n            tickLine: false,\n            orientation: dir === 'rtl' ? 'right' : 'left'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...getTooltipStyles(themeName, 'defaultItems')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Cycling\",\n            type: \"monotone\",\n            dataKey: \"cycling\",\n            fill: \"#70bbfd\",\n            stroke: \"#70bbfd\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Walking\",\n            type: \"monotone\",\n            dataKey: \"walking\",\n            fill: \"#4ce1b6\",\n            stroke: \"#4ce1b6\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActivityChart, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ActivityChart;\nActivityChart.propTypes = {\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(ActivityChart);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityChart\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/Fitness/components/ActivityChart.jsx"],"names":["React","PropTypes","connect","useTranslation","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Panel","getTooltipStyles","data","name","cycling","pv","walking","ActivityChart","dir","themeName","t","top","left","bottom","value","propTypes","string","isRequired","state","theme","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\n\nconst data = [\n  {\n    name: 'Mon', cycling: 6.8, pv: 800, walking: 2.7,\n  },\n  {\n    name: 'Tue', cycling: 8.1, pv: 967, walking: 0,\n  },\n  {\n    name: 'Wed', cycling: 3, pv: 1098, walking: 5.4,\n  },\n  {\n    name: 'Thu', cycling: 5.5, pv: 1200, walking: 4.8,\n  },\n  {\n    name: 'Fri', cycling: 4, pv: 1108, walking: 2.6,\n  },\n  {\n    name: 'Sat', cycling: 7, pv: 1108, walking: 6,\n  },\n  {\n    name: 'Sun', cycling: 8.2, pv: 680, walking: 4.1,\n  },\n];\n\nconst ActivityChart = ({ dir, themeName }) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Panel xs={12} lg={12} title={t('fitness_dashboard.activity_chart')}>\n      <div dir=\"ltr\">\n        <ResponsiveContainer height={250} className=\"dashboard__area\">\n          <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n            <XAxis dataKey=\"name\" tickLine={false} reversed={dir === 'rtl'} />\n            <YAxis\n              tickFormatter={value => `${value}km`}\n              tickLine={false}\n              orientation={dir === 'rtl' ? 'right' : 'left'}\n            />\n            <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n            <Legend />\n            <CartesianGrid />\n            <Area name=\"Cycling\" type=\"monotone\" dataKey=\"cycling\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n            <Area name=\"Walking\" type=\"monotone\" dataKey=\"walking\" fill=\"#4ce1b6\" stroke=\"#4ce1b6\" fillOpacity={0.2} />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </Panel>\n  );\n};\n\nActivityChart.propTypes = {\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(ActivityChart);\n"]},"metadata":{},"sourceType":"module"}