{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/BlockColorPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BlockPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlockColorPickerField = ({\n  name,\n  onChange\n}) => {\n  _s();\n\n  const [colorValue, setColorValue] = useState({\n    color: '#4ce1b6',\n    rgb: {\n      r: 76,\n      g: 225,\n      b: 182,\n      a: 1\n    }\n  });\n  const [colorActive, setColorActive] = useState({\n    displayColorPicker: false,\n    active: false\n  });\n  const {\n    color,\n    rgb\n  } = colorValue;\n  const {\n    displayColorPicker,\n    active\n  } = colorActive;\n\n  const handleClick = e => {\n    e.preventDefault();\n    setColorActive({\n      displayColorPicker: !displayColorPicker,\n      active: !active\n    });\n  };\n\n  const handleChange = changeColor => {\n    setColorValue({\n      color: changeColor.hex,\n      rgb: changeColor.rgb\n    });\n    onChange(changeColor);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-picker\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `color-picker__button${active ? ' active' : ''}`,\n      onClick: handleClick,\n      id: name,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"color-picker__color\",\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker__color-view\",\n        style: {\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      isOpen: displayColorPicker,\n      target: name,\n      placement: \"bottom\",\n      className: \"color-picker__popover\",\n      children: /*#__PURE__*/_jsxDEV(BlockPicker, {\n        color: rgb,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlockColorPickerField, \"QEXP9lVhlW9sKHA+griLoDSLW4k=\");\n\n_c = BlockColorPickerField;\nBlockColorPickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default _c2 = renderComponentField(BlockColorPickerField);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlockColorPickerField\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/BlockColorPicker.jsx"],"names":["React","useState","BlockPicker","Popover","PropTypes","renderComponentField","BlockColorPickerField","name","onChange","colorValue","setColorValue","color","rgb","r","g","b","a","colorActive","setColorActive","displayColorPicker","active","handleClick","e","preventDefault","handleChange","changeColor","hex","backgroundColor","propTypes","func","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA;;AACpD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAC3CU,IAAAA,KAAK,EAAE,SADoC;AAE3CC,IAAAA,GAAG,EAAE;AACHC,MAAAA,CAAC,EAAE,EADA;AACIC,MAAAA,CAAC,EAAE,GADP;AACYC,MAAAA,CAAC,EAAE,GADf;AACoBC,MAAAA,CAAC,EAAE;AADvB;AAFsC,GAAD,CAA5C;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC;AAC7CkB,IAAAA,kBAAkB,EAAE,KADyB;AAE7CC,IAAAA,MAAM,EAAE;AAFqC,GAAD,CAA9C;AAIA,QAAM;AAAET,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiBH,UAAvB;AACA,QAAM;AAAEU,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAiCH,WAAvC;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,cAAc,CACZ;AAAEC,MAAAA,kBAAkB,EAAE,CAACA,kBAAvB;AAA2CC,MAAAA,MAAM,EAAE,CAACA;AAApD,KADY,CAAd;AAGD,GALD;;AAMA,QAAMI,YAAY,GAAIC,WAAD,IAAiB;AACpCf,IAAAA,aAAa,CAAC;AAAEC,MAAAA,KAAK,EAAEc,WAAW,CAACC,GAArB;AAA0Bd,MAAAA,GAAG,EAAEa,WAAW,CAACb;AAA3C,KAAD,CAAb;AACAJ,IAAAA,QAAQ,CAACiB,WAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,uBAAsBL,MAAM,GAAG,SAAH,GAAe,EAAG,EAF5D;AAGE,MAAA,OAAO,EAAEC,WAHX;AAIE,MAAA,EAAE,EAAEd,IAJN;AAAA,8BAME;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA,kBAAoCI;AAApC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,KAAK,EAAE;AAAEgB,UAAAA,eAAe,EAAEhB;AAAnB;AAAjD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,OAAD;AACE,MAAA,MAAM,EAAEQ,kBADV;AAEE,MAAA,MAAM,EAAEZ,IAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,SAAS,EAAC,uBAJZ;AAAA,6BAME,QAAC,WAAD;AACE,QAAA,KAAK,EAAEK,GADT;AAEE,QAAA,QAAQ,EAAEY;AAFZ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjDD;;GAAMlB,qB;;KAAAA,qB;AAmDNA,qBAAqB,CAACsB,SAAtB,GAAkC;AAChCpB,EAAAA,QAAQ,EAAEJ,SAAS,CAACyB,IAAV,CAAeC,UADO;AAEhCvB,EAAAA,IAAI,EAAEH,SAAS,CAAC2B,MAAV,CAAiBD;AAFS,CAAlC;AAKA,qBAAezB,oBAAoB,CAACC,qBAAD,CAAnC","sourcesContent":["import React, { useState } from 'react';\nimport { BlockPicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nconst BlockColorPickerField = ({ name, onChange }) => {\n  const [colorValue, setColorValue] = useState({\n    color: '#4ce1b6',\n    rgb: {\n      r: 76, g: 225, b: 182, a: 1,\n    },\n  });\n  const [colorActive, setColorActive] = useState({\n    displayColorPicker: false,\n    active: false,\n  });\n  const { color, rgb } = colorValue;\n  const { displayColorPicker, active } = colorActive;\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setColorActive(\n      { displayColorPicker: !displayColorPicker, active: !active },\n    );\n  };\n  const handleChange = (changeColor) => {\n    setColorValue({ color: changeColor.hex, rgb: changeColor.rgb });\n    onChange(changeColor);\n  };\n\n  return (\n    <div className=\"color-picker\">\n      <button\n        type=\"button\"\n        className={`color-picker__button${active ? ' active' : ''}`}\n        onClick={handleClick}\n        id={name}\n      >\n        <p className=\"color-picker__color\">{color}</p>\n        <div className=\"color-picker__color-view\" style={{ backgroundColor: color }} />\n      </button>\n      <Popover\n        isOpen={displayColorPicker}\n        target={name}\n        placement=\"bottom\"\n        className=\"color-picker__popover\"\n      >\n        <BlockPicker\n          color={rgb}\n          onChange={handleChange}\n        />\n      </Popover>\n    </div>\n  );\n};\n\nBlockColorPickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default renderComponentField(BlockColorPickerField);\n"]},"metadata":{},"sourceType":"module"}