{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/ProductSales.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Mon',\n  plan: 590,\n  pv: 800,\n  current: 1400\n}, {\n  name: 'Tue',\n  plan: 868,\n  pv: 967,\n  current: 1506\n}, {\n  name: 'Wed',\n  plan: 1397,\n  pv: 1098,\n  current: 989\n}, {\n  name: 'Thu',\n  plan: 1480,\n  pv: 1200,\n  current: 1228\n}, {\n  name: 'Fri',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sat',\n  plan: 1520,\n  pv: 1108,\n  current: 1100\n}, {\n  name: 'Sun',\n  plan: 1400,\n  pv: 680,\n  current: 1700\n}];\n\nconst ProductSales = ({\n  rtl,\n  themeName\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    lg: 12,\n    title: t('dashboard_commerce.product_sales'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dir: \"ltr\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        height: 250,\n        className: \"dashboard__area\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: data,\n          margin: {\n            top: 20,\n            left: -15,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            tickLine: false,\n            reversed: rtl === 'rtl'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickLine: false,\n            orientation: rtl === 'rtl' ? 'right' : 'left'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...getTooltipStyles(themeName, 'defaultItems')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Current Sales\",\n            type: \"monotone\",\n            dataKey: \"current\",\n            fill: \"#4ce1b6\",\n            stroke: \"#4ce1b6\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Plan Sales\",\n            type: \"monotone\",\n            dataKey: \"plan\",\n            fill: \"#70bbfd\",\n            stroke: \"#70bbfd\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductSales, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ProductSales;\nProductSales.propTypes = {\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(ProductSales);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSales\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/ECommerce/components/ProductSales.jsx"],"names":["React","PropTypes","connect","useTranslation","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Panel","getTooltipStyles","data","name","plan","pv","current","ProductSales","rtl","themeName","t","top","left","bottom","propTypes","string","isRequired","state","theme","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\n\nconst data = [{\n  name: 'Mon', plan: 590, pv: 800, current: 1400,\n},\n{\n  name: 'Tue', plan: 868, pv: 967, current: 1506,\n},\n{\n  name: 'Wed', plan: 1397, pv: 1098, current: 989,\n},\n{\n  name: 'Thu', plan: 1480, pv: 1200, current: 1228,\n},\n{\n  name: 'Fri', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sat', plan: 1520, pv: 1108, current: 1100,\n},\n{\n  name: 'Sun', plan: 1400, pv: 680, current: 1700,\n}];\n\nconst ProductSales = ({ rtl, themeName }) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Panel lg={12} title={t('dashboard_commerce.product_sales')}>\n      <div dir=\"ltr\">\n        <ResponsiveContainer height={250} className=\"dashboard__area\">\n          <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n            <XAxis dataKey=\"name\" tickLine={false} reversed={rtl === 'rtl'} />\n            <YAxis tickLine={false} orientation={rtl === 'rtl' ? 'right' : 'left'} />\n            <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n            <Legend />\n            <CartesianGrid />\n            <Area\n              name=\"Current Sales\"\n              type=\"monotone\"\n              dataKey=\"current\"\n              fill=\"#4ce1b6\"\n              stroke=\"#4ce1b6\"\n              fillOpacity={0.2}\n            />\n            <Area name=\"Plan Sales\" type=\"monotone\" dataKey=\"plan\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </Panel>\n  );\n};\n\nProductSales.propTypes = {\n  rtl: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(ProductSales);\n"]},"metadata":{},"sourceType":"module"}