{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/OnLineMarketing/components/ABTestingAnalytics.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Mon',\n  a: 590,\n  b: 1400\n}, {\n  name: 'Tue',\n  a: 868,\n  b: 1506\n}, {\n  name: 'Wed',\n  a: 1397,\n  b: 989\n}, {\n  name: 'Thu',\n  a: 1480,\n  b: 1228\n}, {\n  name: 'Fri',\n  a: 1520,\n  b: 1100\n}, {\n  name: 'Sat',\n  a: 1520,\n  b: 1100\n}, {\n  name: 'Sun',\n  a: 1400,\n  b: 1700\n}];\n\nconst ABTestingAnalytics = ({\n  dir,\n  themeName\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    md: 12,\n    lg: 12,\n    xl: 12,\n    title: t('online_marketing_dashboard.ab_testing'),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dir: \"ltr\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        height: 250,\n        className: \"dashboard__area\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: data,\n          margin: {\n            top: 20,\n            left: -15,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\",\n            tickLine: false,\n            reversed: dir === 'rtl'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            tickLine: false,\n            orientation: dir === 'rtl' ? 'right' : 'left'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, { ...getTooltipStyles(themeName, 'defaultItems')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Site A\",\n            type: \"monotone\",\n            dataKey: \"a\",\n            fill: \"#4ce1b6\",\n            stroke: \"#4ce1b6\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            name: \"Site B\",\n            type: \"monotone\",\n            dataKey: \"b\",\n            fill: \"#70bbfd\",\n            stroke: \"#70bbfd\",\n            fillOpacity: 0.2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ABTestingAnalytics, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ABTestingAnalytics;\nABTestingAnalytics.propTypes = {\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(state => ({\n  themeName: state.theme.className\n}))(ABTestingAnalytics);\n\nvar _c;\n\n$RefreshReg$(_c, \"ABTestingAnalytics\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/OnLineMarketing/components/ABTestingAnalytics.jsx"],"names":["React","PropTypes","connect","useTranslation","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Panel","getTooltipStyles","data","name","a","b","ABTestingAnalytics","dir","themeName","t","top","left","bottom","propTypes","string","isRequired","state","theme","className"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n} from 'recharts';\nimport Panel from '@/shared/components/Panel';\nimport getTooltipStyles from '@/shared/helpers';\n\nconst data = [{ name: 'Mon', a: 590, b: 1400 },\n  { name: 'Tue', a: 868, b: 1506 },\n  { name: 'Wed', a: 1397, b: 989 },\n  { name: 'Thu', a: 1480, b: 1228 },\n  { name: 'Fri', a: 1520, b: 1100 },\n  { name: 'Sat', a: 1520, b: 1100 },\n  { name: 'Sun', a: 1400, b: 1700 }];\n\nconst ABTestingAnalytics = ({ dir, themeName }) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Panel md={12} lg={12} xl={12} title={t('online_marketing_dashboard.ab_testing')}>\n      <div dir=\"ltr\">\n        <ResponsiveContainer height={250} className=\"dashboard__area\">\n          <AreaChart data={data} margin={{ top: 20, left: -15, bottom: 20 }}>\n            <XAxis dataKey=\"name\" tickLine={false} reversed={dir === 'rtl'} />\n            <YAxis tickLine={false} orientation={dir === 'rtl' ? 'right' : 'left'} />\n            <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\n            <Legend />\n            <CartesianGrid />\n            <Area name=\"Site A\" type=\"monotone\" dataKey=\"a\" fill=\"#4ce1b6\" stroke=\"#4ce1b6\" fillOpacity={0.2} />\n            <Area name=\"Site B\" type=\"monotone\" dataKey=\"b\" fill=\"#70bbfd\" stroke=\"#70bbfd\" fillOpacity={0.2} />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    </Panel>\n  );\n};\n\nABTestingAnalytics.propTypes = {\n  dir: PropTypes.string.isRequired,\n  themeName: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({ themeName: state.theme.className }))(ABTestingAnalytics);\n"]},"metadata":{},"sourceType":"module"}