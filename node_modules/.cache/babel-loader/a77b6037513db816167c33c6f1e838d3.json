{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Mail/components/InboxTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'reactstrap';\nimport { EmailsProps } from '@/shared/prop-types/EmailProps';\nimport EmailListItem from './EmailListItem';\nimport EmailsControls from './EmailsControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InboxTable = ({\n  emails,\n  onLetter\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false);\n  const [pageOfItems, setPageOfItems] = useState(null);\n  const [emailsWithID, setEmailsWithID] = useState([]);\n  useEffect(() => {\n    setEmailsWithID(emails.map((item, index) => ({ ...item,\n      id: index\n    })));\n  }, [emails]);\n\n  const onChangePage = page => {\n    setPageOfItems(page);\n  };\n\n  const onChangeSelect = () => {\n    setIsChecked(!isChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox__content\",\n    children: [/*#__PURE__*/_jsxDEV(EmailsControls, {\n      emails: emails,\n      onChangePage: onChangePage,\n      onChangeSelect: onChangeSelect,\n      pageOfItems: pageOfItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      className: \"table--bordered inbox__emails-table\",\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emailsWithID.slice(1, 15).map((item, index) => /*#__PURE__*/_jsxDEV(EmailListItem, {\n          email: item,\n          itemId: index,\n          onLetter: onLetter,\n          isChecked: isChecked\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InboxTable, \"STNT8wd0iTRW9GrBEK3S2qUUqsY=\");\n\n_c = InboxTable;\nInboxTable.propTypes = {\n  emails: EmailsProps.isRequired,\n  onLetter: PropTypes.func.isRequired\n};\nexport default InboxTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"InboxTable\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Mail/components/InboxTable.jsx"],"names":["React","useEffect","useState","PropTypes","Table","EmailsProps","EmailListItem","EmailsControls","InboxTable","emails","onLetter","isChecked","setIsChecked","pageOfItems","setPageOfItems","emailsWithID","setEmailsWithID","map","item","index","id","onChangePage","page","onChangeSelect","slice","propTypes","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,eAAe,CAACP,MAAM,CAACQ,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,MAAkB,EAAE,GAAGD,IAAL;AAAWE,MAAAA,EAAE,EAAED;AAAf,KAAlB,CAAX,CAAD,CAAf;AACD,GAFQ,EAEN,CAACV,MAAD,CAFM,CAAT;;AAIA,QAAMY,YAAY,GAAIC,IAAD,IAAU;AAC7BR,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BX,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,MAAM,EAAEF,MADV;AAEE,MAAA,YAAY,EAAEY,YAFhB;AAGE,MAAA,cAAc,EAAEE,cAHlB;AAIE,MAAA,WAAW,EAAEV;AAJf;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qCAAjB;AAAuD,MAAA,UAAU,MAAjE;AAAA,6BACE;AAAA,kBACGE,YAAY,CAACS,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BP,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,kBAC7B,QAAC,aAAD;AAEE,UAAA,KAAK,EAAED,IAFT;AAGE,UAAA,MAAM,EAAEC,KAHV;AAIE,UAAA,QAAQ,EAAET,QAJZ;AAKE,UAAA,SAAS,EAAEC;AALb,WACOO,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxCD;;GAAMZ,U;;KAAAA,U;AA0CNA,UAAU,CAACiB,SAAX,GAAuB;AACrBhB,EAAAA,MAAM,EAAEJ,WAAW,CAACqB,UADC;AAErBhB,EAAAA,QAAQ,EAAEP,SAAS,CAACwB,IAAV,CAAeD;AAFJ,CAAvB;AAKA,eAAelB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'reactstrap';\nimport { EmailsProps } from '@/shared/prop-types/EmailProps';\nimport EmailListItem from './EmailListItem';\nimport EmailsControls from './EmailsControls';\n\nconst InboxTable = ({ emails, onLetter }) => {\n  const [isChecked, setIsChecked] = useState(false);\n  const [pageOfItems, setPageOfItems] = useState(null);\n  const [emailsWithID, setEmailsWithID] = useState([]);\n\n  useEffect(() => {\n    setEmailsWithID(emails.map((item, index) => ({ ...item, id: index })));\n  }, [emails]);\n\n  const onChangePage = (page) => {\n    setPageOfItems(page);\n  };\n\n  const onChangeSelect = () => {\n    setIsChecked(!isChecked);\n  };\n\n  return (\n    <div className=\"inbox__content\">\n      <EmailsControls\n        emails={emails}\n        onChangePage={onChangePage}\n        onChangeSelect={onChangeSelect}\n        pageOfItems={pageOfItems}\n      />\n      <Table className=\"table--bordered inbox__emails-table\" responsive>\n        <tbody>\n          {emailsWithID.slice(1, 15).map((item, index) => (\n            <EmailListItem\n              key={item.id}\n              email={item}\n              itemId={index}\n              onLetter={onLetter}\n              isChecked={isChecked}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nInboxTable.propTypes = {\n  emails: EmailsProps.isRequired,\n  onLetter: PropTypes.func.isRequired,\n};\n\nexport default InboxTable;\n"]},"metadata":{},"sourceType":"module"}