{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/catalog/ProductItems.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { CardBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sale = `${process.env.PUBLIC_URL}/img/for_store/catalog/sale_lable.png`;\nconst New = `${process.env.PUBLIC_URL}/img/for_store/catalog/new_lable.png`;\n\nconst Catalog = ({\n  items\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"catalog-items__wrap\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"catalog-items\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(CardBody, {\n      className: \"catalog-item\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"catalog-item__link\",\n        to: \"/discover_park/:parkId\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog-item__img-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"catalog-item__img\",\n            src: item.src,\n            alt: \"catalog-item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog-item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"catalog-item__title\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"catalog-item__description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = Catalog;\nCatalog.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.string,\n    description: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string),\n    new: PropTypes.bool\n  }))\n};\nCatalog.defaultProps = {\n  items: []\n};\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/catalog/ProductItems.jsx"],"names":["React","PropTypes","Link","CardBody","Sale","process","env","PUBLIC_URL","New","Catalog","items","map","item","src","title","description","id","propTypes","arrayOf","shape","string","price","colors","new","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,IAAI,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,uCAAvC;AACA,MAAMC,GAAG,GAAI,GAAEH,OAAO,CAACC,GAAR,CAAYC,UAAW,sCAAtC;;AAEA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACd;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA,yBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,cAApB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,EAAE,EAAC,wBAAxC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAmC,YAAA,GAAG,EAAEA,IAAI,CAACC,GAA7C;AAAkD,YAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,sBAAqCD,IAAI,CAACE;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAC,2BAAb;AAAA,sBAA0CF,IAAI,CAACG;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAwCH,IAAI,CAACI,EAA7C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMP,O;AAoBNA,OAAO,CAACQ,SAAR,GAAoB;AAClBP,EAAAA,KAAK,EAAET,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,KAAV,CAAgB;AACvCN,IAAAA,GAAG,EAAEZ,SAAS,CAACmB,MADwB;AAEvCN,IAAAA,KAAK,EAAEb,SAAS,CAACmB,MAFsB;AAGvCC,IAAAA,KAAK,EAAEpB,SAAS,CAACmB,MAHsB;AAIvCL,IAAAA,WAAW,EAAEd,SAAS,CAACmB,MAJgB;AAKvCE,IAAAA,MAAM,EAAErB,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACmB,MAA5B,CAL+B;AAMvCG,IAAAA,GAAG,EAAEtB,SAAS,CAACuB;AANwB,GAAhB,CAAlB;AADW,CAApB;AAWAf,OAAO,CAACgB,YAAR,GAAuB;AACrBf,EAAAA,KAAK,EAAE;AADc,CAAvB;AAIA,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { CardBody } from 'reactstrap';\n\nconst Sale = `${process.env.PUBLIC_URL}/img/for_store/catalog/sale_lable.png`;\nconst New = `${process.env.PUBLIC_URL}/img/for_store/catalog/new_lable.png`;\n\nconst Catalog = ({ items }) => (\n  <div className=\"catalog-items__wrap\">\n    <div className=\"catalog-items\">\n      {items.map(item => (\n        <CardBody className=\"catalog-item\" key={item.id}>\n          <Link className=\"catalog-item__link\" to=\"/discover_park/:parkId\">\n            <div className=\"catalog-item__img-wrap\">\n              <img className=\"catalog-item__img\" src={item.src} alt=\"catalog-item-img\" />\n            </div>\n            <div className=\"catalog-item__info\">\n              <h5 className=\"catalog-item__title\">{item.title}</h5>\n              <p className=\"catalog-item__description\">{item.description}</p>\n            </div>\n          </Link>\n        </CardBody>\n      ))}\n    </div>\n  </div>\n);\n\nCatalog.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.string,\n    description: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string),\n    new: PropTypes.bool,\n  })),\n};\n\nCatalog.defaultProps = {\n  items: [],\n};\n\nexport default Catalog;\n"]},"metadata":{},"sourceType":"module"}