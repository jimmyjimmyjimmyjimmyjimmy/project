{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableCustomizer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Collapse, UncontrolledTooltip } from 'reactstrap';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport ReactTableCustomizerToggle from './ReactTableCustomizerToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTableCustomizer = ({\n  handleClickIsEditable,\n  handleClickIsResizable,\n  handleClickIsSortable,\n  handleClickWithDragAndDrop,\n  handleClickWithPagination,\n  handleClickWithSearchEngine,\n  isEditable,\n  isResizable,\n  isSortable,\n  isDisabledDragAndDrop,\n  isDisabledEditable,\n  isDisabledResizable,\n  withDragAndDrop,\n  withPagination,\n  withSearchEngine,\n  fullCustomizer\n}) => {\n  _s();\n\n  const arrayTableCustomizerSingleToggle = [{\n    id: 0,\n    text: 'Filtration mode',\n    func: handleClickWithSearchEngine,\n    isChecked: withSearchEngine\n  }, {\n    id: 1,\n    text: 'Sortable mode',\n    func: handleClickIsSortable,\n    isChecked: isSortable\n  }, {\n    id: 2,\n    text: 'Pagination mode',\n    func: handleClickWithPagination,\n    isChecked: withPagination\n  }];\n  const arrayTableCustomizerAddictionToggle = [{\n    id: 0,\n    text: 'Drag&Drop mode',\n    func: handleClickWithDragAndDrop,\n    isChecked: withDragAndDrop,\n    isDisabled: isDisabledDragAndDrop,\n    tooltip: 'Drag&Drop mode cannot be performed at the same time with Resizable Mode'\n  }, {\n    id: 1,\n    text: 'Editable mode',\n    func: handleClickIsEditable,\n    isChecked: isEditable,\n    isDisabled: isDisabledEditable,\n    tooltip: 'Editable mode cannot be performed at the same time with Resizable Mode'\n  }, {\n    id: 2,\n    text: 'Resizable mode',\n    func: handleClickIsResizable,\n    isChecked: isResizable,\n    isDisabled: isDisabledResizable,\n    tooltip: 'Resizable mode cannot be performed at the same time with Drag&Drop and Editable Mode'\n  }];\n  const [collapse, setCollapse] = useState(false);\n\n  const handleOpen = () => {\n    setCollapse(!collapse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"react-table__customizer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table__collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"table__btn\",\n        type: \"button\",\n        onClick: handleOpen,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Table customizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DownIcon, {\n          className: \"table__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), collapse && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"table__collapse-back\",\n        \"aria-label\": \"table__collapse-back\",\n        type: \"button\",\n        onClick: handleOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: collapse,\n        className: \"table__collapse-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table__collapse-title-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This customizer allows you to see the different variations of the data table.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table__collapse-item\",\n          children: arrayTableCustomizerSingleToggle.map(item => /*#__PURE__*/_jsxDEV(ReactTableCustomizerToggle, {\n            text: item.text,\n            handleClick: item.func,\n            isChecked: item.isChecked\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), fullCustomizer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table__collapse-item\",\n          children: arrayTableCustomizerAddictionToggle.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `tooltip-${item.id}`,\n            children: [/*#__PURE__*/_jsxDEV(ReactTableCustomizerToggle, {\n              text: item.text,\n              handleClick: item.func,\n              isChecked: item.isChecked,\n              isDisabled: item.isDisabled\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), item.isDisabled && /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n              className: \"table__collapse-item--tooltip\",\n              placement: \"left\",\n              target: `tooltip-${item.id}`,\n              children: item.tooltip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactTableCustomizer, \"QWByOIdrS/tQP5Yr4mPBvuIhZuA=\");\n\n_c = ReactTableCustomizer;\nReactTableCustomizer.propTypes = {\n  handleClickIsEditable: PropTypes.func,\n  handleClickIsResizable: PropTypes.func,\n  handleClickIsSortable: PropTypes.func.isRequired,\n  handleClickWithDragAndDrop: PropTypes.func,\n  handleClickWithPagination: PropTypes.func.isRequired,\n  handleClickWithSearchEngine: PropTypes.func.isRequired,\n  isEditable: PropTypes.bool,\n  isResizable: PropTypes.bool,\n  isSortable: PropTypes.bool.isRequired,\n  isDisabledDragAndDrop: PropTypes.bool,\n  isDisabledEditable: PropTypes.bool,\n  isDisabledResizable: PropTypes.bool,\n  withDragAndDrop: PropTypes.bool,\n  withPagination: PropTypes.bool.isRequired,\n  withSearchEngine: PropTypes.bool.isRequired,\n  fullCustomizer: PropTypes.bool\n};\nReactTableCustomizer.defaultProps = {\n  handleClickIsEditable: () => {},\n  handleClickIsResizable: () => {},\n  handleClickWithDragAndDrop: () => {},\n  isEditable: false,\n  isResizable: false,\n  isDisabledDragAndDrop: false,\n  isDisabledEditable: false,\n  isDisabledResizable: false,\n  withDragAndDrop: false,\n  fullCustomizer: false\n};\nexport default ReactTableCustomizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTableCustomizer\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableCustomizer.jsx"],"names":["React","useState","PropTypes","Row","Collapse","UncontrolledTooltip","DownIcon","ReactTableCustomizerToggle","ReactTableCustomizer","handleClickIsEditable","handleClickIsResizable","handleClickIsSortable","handleClickWithDragAndDrop","handleClickWithPagination","handleClickWithSearchEngine","isEditable","isResizable","isSortable","isDisabledDragAndDrop","isDisabledEditable","isDisabledResizable","withDragAndDrop","withPagination","withSearchEngine","fullCustomizer","arrayTableCustomizerSingleToggle","id","text","func","isChecked","arrayTableCustomizerAddictionToggle","isDisabled","tooltip","collapse","setCollapse","handleOpen","map","item","propTypes","isRequired","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Collapse, UncontrolledTooltip } from 'reactstrap';\nimport DownIcon from 'mdi-react/ChevronDownIcon';\nimport ReactTableCustomizerToggle from './ReactTableCustomizerToggle';\n\nconst ReactTableCustomizer = ({\n  handleClickIsEditable,\n  handleClickIsResizable,\n  handleClickIsSortable,\n  handleClickWithDragAndDrop,\n  handleClickWithPagination,\n  handleClickWithSearchEngine,\n  isEditable,\n  isResizable,\n  isSortable,\n  isDisabledDragAndDrop,\n  isDisabledEditable,\n  isDisabledResizable,\n  withDragAndDrop,\n  withPagination,\n  withSearchEngine,\n  fullCustomizer,\n}) => {\n  const arrayTableCustomizerSingleToggle = [\n    {\n      id: 0, text: 'Filtration mode', func: handleClickWithSearchEngine, isChecked: withSearchEngine,\n    },\n    {\n      id: 1, text: 'Sortable mode', func: handleClickIsSortable, isChecked: isSortable,\n    },\n    {\n      id: 2, text: 'Pagination mode', func: handleClickWithPagination, isChecked: withPagination,\n    },\n  ];\n  const arrayTableCustomizerAddictionToggle = [\n    {\n      id: 0,\n      text: 'Drag&Drop mode',\n      func: handleClickWithDragAndDrop,\n      isChecked: withDragAndDrop,\n      isDisabled: isDisabledDragAndDrop,\n      tooltip: 'Drag&Drop mode cannot be performed at the same time with Resizable Mode',\n    },\n    {\n      id: 1,\n      text: 'Editable mode',\n      func: handleClickIsEditable,\n      isChecked: isEditable,\n      isDisabled: isDisabledEditable,\n      tooltip: 'Editable mode cannot be performed at the same time with Resizable Mode',\n    },\n    {\n      id: 2,\n      text: 'Resizable mode',\n      func: handleClickIsResizable,\n      isChecked: isResizable,\n      isDisabled: isDisabledResizable,\n      tooltip: 'Resizable mode cannot be performed at the same time with Drag&Drop and Editable Mode',\n    },\n  ];\n  const [collapse, setCollapse] = useState(false);\n\n  const handleOpen = () => {\n    setCollapse(!collapse);\n  };\n\n  return (\n    <Row className=\"react-table__customizer\">\n      <div className=\"table__collapse\">\n        <button className=\"table__btn\" type=\"button\" onClick={handleOpen}>\n          <h5>Table customizer</h5>\n          <DownIcon className=\"table__icon\" />\n        </button>\n        {collapse && (\n          <button\n            className=\"table__collapse-back\"\n            aria-label=\"table__collapse-back\"\n            type=\"button\"\n            onClick={handleOpen}\n          />\n          )}\n        <Collapse\n          isOpen={collapse}\n          className=\"table__collapse-content\"\n        >\n          <div className=\"table__collapse-title-wrap\">\n            <p>This customizer allows you to see the different variations of the data table.</p>\n          </div>\n          <div className=\"table__collapse-item\">\n            {arrayTableCustomizerSingleToggle.map(item => (\n              <ReactTableCustomizerToggle\n                key={item.id}\n                text={item.text}\n                handleClick={item.func}\n                isChecked={item.isChecked}\n              />\n            ))}\n          </div>\n          {fullCustomizer && (\n            <div className=\"table__collapse-item\">\n              {arrayTableCustomizerAddictionToggle.map(item => (\n                <div id={`tooltip-${item.id}`} key={item.id}>\n                  <ReactTableCustomizerToggle\n                    key={item.id}\n                    text={item.text}\n                    handleClick={item.func}\n                    isChecked={item.isChecked}\n                    isDisabled={item.isDisabled}\n                  />\n                  {item.isDisabled && (\n                    <UncontrolledTooltip\n                      className=\"table__collapse-item--tooltip\"\n                      placement=\"left\"\n                      target={`tooltip-${item.id}`}\n                    >\n                      {item.tooltip}\n                    </UncontrolledTooltip>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </Collapse>\n      </div>\n    </Row>\n  );\n};\n\nReactTableCustomizer.propTypes = {\n  handleClickIsEditable: PropTypes.func,\n  handleClickIsResizable: PropTypes.func,\n  handleClickIsSortable: PropTypes.func.isRequired,\n  handleClickWithDragAndDrop: PropTypes.func,\n  handleClickWithPagination: PropTypes.func.isRequired,\n  handleClickWithSearchEngine: PropTypes.func.isRequired,\n  isEditable: PropTypes.bool,\n  isResizable: PropTypes.bool,\n  isSortable: PropTypes.bool.isRequired,\n  isDisabledDragAndDrop: PropTypes.bool,\n  isDisabledEditable: PropTypes.bool,\n  isDisabledResizable: PropTypes.bool,\n  withDragAndDrop: PropTypes.bool,\n  withPagination: PropTypes.bool.isRequired,\n  withSearchEngine: PropTypes.bool.isRequired,\n  fullCustomizer: PropTypes.bool,\n};\n\nReactTableCustomizer.defaultProps = {\n  handleClickIsEditable: () => {},\n  handleClickIsResizable: () => {},\n  handleClickWithDragAndDrop: () => {},\n  isEditable: false,\n  isResizable: false,\n  isDisabledDragAndDrop: false,\n  isDisabledEditable: false,\n  isDisabledResizable: false,\n  withDragAndDrop: false,\n  fullCustomizer: false,\n};\n\nexport default ReactTableCustomizer;\n"]},"metadata":{},"sourceType":"module"}