{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/Finance/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { deleteCryptoTableData } from '@/redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '@/shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '@/shared/prop-types/ReducerProps';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onDeleteCryptoTableData = (dispatch, cryptoTable) => index => {\n  const arrayCopy = [...cryptoTable];\n  arrayCopy.splice(index, 1);\n  dispatch(deleteCryptoTableData(arrayCopy));\n};\n\nconst FinanceDashboard = ({\n  dispatch,\n  cryptoTable,\n  rtl,\n  theme\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"page-title\",\n          children: t('finance_dashboard.page_title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(BTC, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ETH, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BCH, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XRP, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(TradeHistory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BtcEth, {\n        dir: rtl.direction,\n        theme: theme.className\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CryptotrendsToday, {\n        dir: rtl.direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlaceOrder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopTen, {\n        cryptoTable: cryptoTable,\n        onDeleteCryptoTableData: onDeleteCryptoTableData(dispatch, cryptoTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FinanceDashboard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FinanceDashboard;\nFinanceDashboard.propTypes = {\n  cryptoTable: CryptoTableProps.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired\n};\nexport default connect(state => ({\n  cryptoTable: state.cryptoTable.items,\n  rtl: state.rtl,\n  theme: state.theme\n}))(FinanceDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"FinanceDashboard\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/Finance/index.jsx"],"names":["React","PropTypes","connect","useTranslation","Col","Container","Row","deleteCryptoTableData","CryptoTableProps","ThemeProps","RTLProps","BTC","ETH","BCH","XRP","TradeHistory","BtcEth","CryptotrendsToday","TopTen","PlaceOrder","onDeleteCryptoTableData","dispatch","cryptoTable","index","arrayCopy","splice","FinanceDashboard","rtl","theme","t","direction","className","propTypes","isRequired","func","state","items"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Col, Container, Row } from 'reactstrap';\nimport { deleteCryptoTableData } from '@/redux/actions/cryptoTableActions';\nimport { CryptoTableProps } from '@/shared/prop-types/TablesProps';\nimport { ThemeProps, RTLProps } from '@/shared/prop-types/ReducerProps';\nimport BTC from './components/BTC';\nimport ETH from './components/ETH';\nimport BCH from './components/BCH';\nimport XRP from './components/XRP';\nimport TradeHistory from './components/TradeHistory';\nimport BtcEth from './components/BtcEth';\nimport CryptotrendsToday from './components/CryptotrendsToday';\nimport TopTen from './components/TopTen';\nimport PlaceOrder from './components/PlaceOrder';\n\nconst onDeleteCryptoTableData = (dispatch, cryptoTable) => (index) => {\n  const arrayCopy = [...cryptoTable];\n  arrayCopy.splice(index, 1);\n  dispatch(deleteCryptoTableData(arrayCopy));\n};\n\nconst FinanceDashboard = ({\n  dispatch, cryptoTable, rtl, theme,\n}) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Container className=\"dashboard\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">{t('finance_dashboard.page_title')}</h3>\n        </Col>\n      </Row>\n      <Row>\n        <BTC dir={rtl.direction} />\n        <ETH dir={rtl.direction} />\n        <BCH dir={rtl.direction} />\n        <XRP dir={rtl.direction} />\n      </Row>\n      <Row>\n        <TradeHistory />\n        <BtcEth\n          dir={rtl.direction}\n          theme={theme.className}\n        />\n        <CryptotrendsToday dir={rtl.direction} />\n        <PlaceOrder />\n        <TopTen cryptoTable={cryptoTable} onDeleteCryptoTableData={onDeleteCryptoTableData(dispatch, cryptoTable)} />\n      </Row>\n    </Container>\n  );\n};\n\nFinanceDashboard.propTypes = {\n  cryptoTable: CryptoTableProps.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  rtl: RTLProps.isRequired,\n  theme: ThemeProps.isRequired,\n};\n\nexport default connect(state => ({\n  cryptoTable: state.cryptoTable.items,\n  rtl: state.rtl,\n  theme: state.theme,\n}))(FinanceDashboard);\n"]},"metadata":{},"sourceType":"module"}