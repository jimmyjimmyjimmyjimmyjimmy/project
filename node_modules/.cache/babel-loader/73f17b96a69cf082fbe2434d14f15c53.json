{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableEditableCell.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\nimport ReactTableCell from './ReactTableCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  value: initialValue,\n  row: {\n    index\n  },\n  column: {\n    id\n  },\n  column,\n  state,\n  updateEditableData\n}) => {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n  const [isActiveInput, setIsActiveInput] = useState(false);\n\n  const handleClick = () => {\n    setIsActiveInput(!isActiveInput);\n  };\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  const updateData = () => {\n    updateEditableData(index, id, value);\n    setIsActiveInput(false);\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      updateData();\n    }\n  };\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDoubleClick: handleClick,\n    children: isActiveInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table__editable-table--cell-active\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: \"table__edit-form\",\n        value: value,\n        onChange: onChange,\n        onBlur: updateData,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ReactTableCell, {\n      value: value,\n      column: column,\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableCell, \"mrkqs9KBwI2p71NjljPaT5Rs6ZM=\");\n\n_c = EditableCell;\nEditableCell.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  row: PropTypes.shape({\n    index: PropTypes.number\n  }).isRequired,\n  column: PropTypes.shape({\n    id: PropTypes.string\n  }).isRequired,\n  state: PropTypes.shape({\n    globalFilter: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }).isRequired,\n  updateEditableData: PropTypes.func.isRequired\n};\nexport default EditableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableCell\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableEditableCell.jsx"],"names":["React","useEffect","useState","PropTypes","Input","ReactTableCell","EditableCell","value","initialValue","row","index","column","id","state","updateEditableData","setValue","isActiveInput","setIsActiveInput","handleClick","onChange","event","target","updateData","handleKeyPress","key","propTypes","oneOfType","string","number","isRequired","shape","globalFilter","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\nimport ReactTableCell from './ReactTableCell';\n\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  column,\n  state,\n  updateEditableData,\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const [isActiveInput, setIsActiveInput] = useState(false);\n\n  const handleClick = () => {\n    setIsActiveInput(!isActiveInput);\n  };\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n  const updateData = () => {\n    updateEditableData(index, id, value);\n    setIsActiveInput(false);\n  };\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      updateData();\n    }\n  };\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <div onDoubleClick={handleClick}>\n      {isActiveInput ? (\n        <div className=\"table__editable-table--cell-active\">\n          <Input\n            className=\"table__edit-form\"\n            value={value}\n            onChange={onChange}\n            onBlur={updateData}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      ) : (\n        <ReactTableCell\n          value={value}\n          column={column}\n          state={state}\n        />\n      )}\n    </div>\n  );\n};\n\nEditableCell.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  row: PropTypes.shape({\n    index: PropTypes.number,\n  }).isRequired,\n  column: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  state: PropTypes.shape({\n    globalFilter: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }).isRequired,\n  updateEditableData: PropTypes.func.isRequired,\n};\n\nexport default EditableCell;\n"]},"metadata":{},"sourceType":"module"}