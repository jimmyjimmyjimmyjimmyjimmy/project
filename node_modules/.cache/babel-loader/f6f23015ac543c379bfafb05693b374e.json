{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Charts/ChartJs/components/PolarArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Polar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  datasets: [{\n    data: [11, 16, 7, 3, 14],\n    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n    label: 'My dataset',\n    borderColor: 'rgba(255,255,255,0.54)'\n  }],\n  labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue']\n};\nconst options = {\n  legend: {\n    position: 'bottom'\n  },\n  scale: {\n    gridLines: {\n      color: 'rgb(204, 204, 204)',\n      borderDash: [3, 3]\n    },\n    ticks: {\n      fontColor: 'rgb(204, 204, 204)'\n    }\n  }\n};\n\nconst PolarArea = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 12,\n    lg: 12,\n    xl: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('charts.react_chartjs.polar_area')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PolarArea, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PolarArea;\nexport default PolarArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"PolarArea\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Charts/ChartJs/components/PolarArea.jsx"],"names":["React","useTranslation","Card","CardBody","Col","Polar","data","datasets","backgroundColor","label","borderColor","labels","options","legend","position","scale","gridLines","color","borderDash","ticks","fontColor","PolarArea","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE,CAAC;AACTD,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,CADG;AAETE,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAFR;AAGTC,IAAAA,KAAK,EAAE,YAHE;AAITC,IAAAA,WAAW,EAAE;AAJJ,GAAD,CADC;AAOXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,MAAnC;AAPG,CAAb;AAUA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GADM;AAIdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,oBADE;AAETC,MAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFH,KADN;AAKLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE;AADN;AALF;AAJO,CAAhB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAQrB,cAAc,CAAC,QAAD,CAA5B;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBAA2BqB,CAAC,CAAC,iCAAD;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEhB,IAAb;AAAmB,UAAA,OAAO,EAAEM;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAMS,S;UACUpB,c;;;KADVoB,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Polar } from 'react-chartjs-2';\n\nconst data = {\n  datasets: [{\n    data: [11, 16, 7, 3, 14],\n    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n    label: 'My dataset',\n    borderColor: 'rgba(255,255,255,0.54)',\n  }],\n  labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n};\n\nconst options = {\n  legend: {\n    position: 'bottom',\n  },\n  scale: {\n    gridLines: {\n      color: 'rgb(204, 204, 204)',\n      borderDash: [3, 3],\n    },\n    ticks: {\n      fontColor: 'rgb(204, 204, 204)',\n    },\n  },\n};\n\nconst PolarArea = () => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Col md={12} lg={12} xl={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('charts.react_chartjs.polar_area')}</h5>\n          </div>\n          <Polar data={data} options={options} />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default PolarArea;\n"]},"metadata":{},"sourceType":"module"}