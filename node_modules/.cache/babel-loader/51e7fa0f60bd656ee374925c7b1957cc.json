{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Tables/CreateData.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTableData = () => {\n  _s2();\n\n  const columns = useMemo(() => {\n    var _s = $RefreshSig$();\n\n    return [{\n      Header: 'ลำดับ',\n      accessor: 'id',\n      Footer: 'Middle age:',\n      disableGlobalFilter: true,\n      width: 65\n    }, {\n      Header: 'ชื่อเส้นทางวิ่ง',\n      accessor: 'first'\n    }, {\n      Header: 'สวน',\n      accessor: 'last',\n      disableGlobalFilter: true\n    }, {\n      Header: 'Username',\n      accessor: 'user',\n      disableGlobalFilter: true\n    }, {\n      Header: 'Age',\n      accessor: 'age',\n      disableGlobalFilter: true,\n      Footer: _s(info => {\n        _s();\n\n        const {\n          rows,\n          flatRows\n        } = info;\n        const totalAge = useMemo(() => rows.reduce((sum, row) => Number(row.values.age) + sum, 0), [rows]);\n        const age = Math.round(totalAge / flatRows.length);\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this);\n      }, \"l5cA1x/iAe5xhlHv8KwCrOTeR6Q=\")\n    }, {\n      Header: 'Date',\n      accessor: 'date',\n      disableGlobalFilter: true\n    }, {\n      Header: 'Location',\n      accessor: 'location',\n      disableGlobalFilter: true\n    }, {\n      Header: 'Work',\n      accessor: 'work',\n      disableGlobalFilter: true,\n      disableSortBy: true\n    }];\n  }, []);\n\n  const getRandomDate = (start, end) => new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toLocaleDateString();\n\n  const data = [];\n\n  const rows = () => {\n    for (let i = 1; i < 36; i += 1) {\n      data.push({\n        id: i,\n        first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor(Math.random() * 3)],\n        last: ['Morrison', 'Brown  ', 'Medinberg'][Math.floor(Math.random() * 3)],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor(Math.random() * 3)],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor(Math.random() * 4)],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor(Math.random() * 5)]\n      });\n    }\n  };\n\n  rows();\n  const reactTableData = {\n    tableHeaderData: columns,\n    tableRowsData: data\n  };\n  return reactTableData;\n};\n\n_s2(CreateTableData, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = CreateTableData;\nexport default CreateTableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTableData\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Tables/CreateData.jsx"],"names":["React","useMemo","CreateTableData","columns","Header","accessor","Footer","disableGlobalFilter","width","info","rows","flatRows","totalAge","reduce","sum","row","Number","values","age","Math","round","length","disableSortBy","getRandomDate","start","end","Date","getTime","random","toLocaleDateString","data","i","push","id","first","floor","last","user","min","date","location","work","reactTableData","tableHeaderData","tableRowsData"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\n\nconst CreateTableData = () => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'ลำดับ',\n        accessor: 'id',\n        Footer: 'Middle age:',\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: 'ชื่อเส้นทางวิ่ง',\n        accessor: 'first',\n      },\n      {\n        Header: 'สวน',\n        accessor: 'last',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Username',\n        accessor: 'user',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n        disableGlobalFilter: true,\n        Footer: (info) => {\n          const { rows, flatRows } = info;\n          const totalAge = useMemo(\n            () => rows.reduce((sum, row) => Number(row.values.age) + sum, 0),\n            [rows],\n          );\n          const age = Math.round(totalAge / flatRows.length);\n          return <span>{age}</span>;\n        },\n      },\n      {\n        Header: 'Date',\n        accessor: 'date',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Location',\n        accessor: 'location',\n        disableGlobalFilter: true,\n      },\n      {\n        Header: 'Work',\n        accessor: 'work',\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n    ],\n    [],\n  );\n\n  const getRandomDate = (start, end) => new Date(start.getTime() + (Math.random() * (end.getTime()\n    - start.getTime()))).toLocaleDateString();\n\n  const data = [];\n  const rows = () => {\n    for (let i = 1; i < 36; i += 1) {\n      data.push({\n        id: i,\n        first: ['Maria', 'Bobby  ', 'Alexander'][Math.floor((Math.random() * 3))],\n        last: ['Morrison', 'Brown  ', 'Medinberg'][Math.floor((Math.random() * 3))],\n        user: ['@dragon', '@hamster', '@cat'][Math.floor((Math.random() * 3))],\n        age: Math.min(100, Math.round(Math.random() * 30) + 20),\n        date: getRandomDate(new Date(2002, 3, 1), new Date(1954, 3, 1)),\n        location: ['Melbourne', 'Tokio', 'Moscow', 'Rome'][Math.floor((Math.random() * 4))],\n        work: ['Nova Soft', 'Dog Shop', 'Aspirity', 'Business Bro', 'Starlight'][Math.floor((Math.random() * 5))],\n      });\n    }\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n"]},"metadata":{},"sourceType":"module"}