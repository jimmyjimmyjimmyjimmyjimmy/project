{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '@/shared/prop-types/ReducerProps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalComponent = ({\n  color,\n  btn,\n  title,\n  message,\n  colored,\n  header,\n  rtl\n}) => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(prevState => !prevState);\n  };\n\n  let Icon;\n\n  switch (color) {\n    case 'primary':\n      Icon = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lnr lnr-pushpin modal__title-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 'success':\n      Icon = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lnr lnr-thumbs-up modal__title-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 'warning':\n      Icon = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lnr lnr-flag modal__title-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case 'danger':\n      Icon = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lnr lnr-cross-circle modal__title-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n      break;\n\n    default:\n      break;\n  }\n\n  const modalClass = classNames({\n    'modal-dialog--colored': colored,\n    'modal-dialog--header': header\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      color: color,\n      onClick: toggle,\n      children: btn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      modalClassName: `${rtl.direction}-support`,\n      className: `modal-dialog--${color} ${modalClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"lnr lnr-cross modal__close-btn\",\n          \"aria-label\": \"modal__close-btn\",\n          type: \"button\",\n          onClick: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), header ? '' : Icon, /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-modal  modal__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__body\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        className: \"modal__footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"modal_cancel\",\n          onClick: toggle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          className: \"modal_ok\",\n          outline: colored,\n          color: color,\n          onClick: toggle,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalComponent, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = ModalComponent;\nModalComponent.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  colored: PropTypes.bool,\n  header: PropTypes.bool,\n  btn: PropTypes.string.isRequired,\n  rtl: RTLProps.isRequired\n};\nModalComponent.defaultProps = {\n  title: '',\n  message: '',\n  colored: false,\n  header: false\n};\nexport default connect(state => ({\n  rtl: state.rtl\n}))(ModalComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/Modal.jsx"],"names":["React","useState","PropTypes","connect","Button","ButtonToolbar","Modal","classNames","RTLProps","ModalComponent","color","btn","title","message","colored","header","rtl","modal","setModal","toggle","prevState","Icon","modalClass","direction","propTypes","string","isRequired","bool","defaultProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonToolbar, Modal } from 'reactstrap';\nimport classNames from 'classnames';\nimport { RTLProps } from '@/shared/prop-types/ReducerProps';\n\nconst ModalComponent = ({\n  color, btn, title, message, colored, header, rtl,\n}) => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    setModal(prevState => !prevState);\n  };\n\n  let Icon;\n\n  switch (color) {\n    case 'primary':\n      Icon = <span className=\"lnr lnr-pushpin modal__title-icon\" />;\n      break;\n    case 'success':\n      Icon = <span className=\"lnr lnr-thumbs-up modal__title-icon\" />;\n      break;\n    case 'warning':\n      Icon = <span className=\"lnr lnr-flag modal__title-icon\" />;\n      break;\n    case 'danger':\n      Icon = <span className=\"lnr lnr-cross-circle modal__title-icon\" />;\n      break;\n    default:\n      break;\n  }\n  const modalClass = classNames({\n    'modal-dialog--colored': colored,\n    'modal-dialog--header': header,\n  });\n\n  return (\n    <div>\n      <Button color={color} onClick={toggle}>{btn}</Button>\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        modalClassName={`${rtl.direction}-support`}\n        className={`modal-dialog--${color} ${modalClass}`}\n      >\n        <div className=\"modal__header\">\n          <button\n            className=\"lnr lnr-cross modal__close-btn\"\n            aria-label=\"modal__close-btn\"\n            type=\"button\"\n            onClick={toggle}\n          />\n          {header ? '' : Icon}\n          <h4 className=\"text-modal  modal__title\">{title}</h4>\n        </div>\n        <div className=\"modal__body\">\n          {message}\n        </div>\n        <ButtonToolbar className=\"modal__footer\">\n          <Button className=\"modal_cancel\" onClick={toggle}>Cancel</Button>{' '}\n          <Button className=\"modal_ok\" outline={colored} color={color} onClick={toggle}>Ok</Button>\n        </ButtonToolbar>\n      </Modal>\n    </div>\n  );\n};\n\nModalComponent.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  color: PropTypes.string.isRequired,\n  colored: PropTypes.bool,\n  header: PropTypes.bool,\n  btn: PropTypes.string.isRequired,\n  rtl: RTLProps.isRequired,\n};\n\nModalComponent.defaultProps = {\n  title: '',\n  message: '',\n  colored: false,\n  header: false,\n};\n\nexport default connect(state => ({\n  rtl: state.rtl,\n}))(ModalComponent);\n"]},"metadata":{},"sourceType":"module"}