{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Dashboards/Booking/components/OccupancyTooltipContent.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { themes } from '@/shared/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderContent = (itemSorter, colorForKey, payload) => {\n  if (payload && payload.length) {\n    const listStyle = {\n      padding: 0,\n      margin: 0\n    };\n    const items = payload.sort(itemSorter).map((entry, i) => {\n      const finalItemStyle = {\n        display: 'block',\n        paddingTop: 4,\n        paddingBottom: 4,\n        color: entry.color || '#555555'\n      };\n      Object.keys(colorForKey).filter(key => key === entry.dataKey).forEach(key => {\n        finalItemStyle.color = colorForKey[key];\n      });\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"recharts-tooltip-item\",\n        style: finalItemStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recharts-tooltip-item-name\",\n          children: entry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recharts-tooltip-item-separator\",\n          children: \" : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recharts-tooltip-item-value\",\n          children: entry.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"recharts-tooltip-item-unit\",\n          children: entry.unit || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, `tooltip-item-${i + 1}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"recharts-tooltip-item-list\",\n      style: listStyle,\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n};\n\nconst finalStyle = theme => ({\n  margin: 0,\n  padding: 10,\n  backgroundColor: theme === 'theme-dark' ? themes.darkTheme.backgroundColor : '#fff',\n  border: '1px solid #ccc',\n  whiteSpace: 'nowrap'\n});\n\nconst finalLabelStyle = {\n  margin: 0\n};\n\nconst OccupancyTooltipContent = ({\n  label,\n  theme,\n  itemSorter,\n  colorForKey,\n  payload\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"recharts-default-tooltip\",\n  style: finalStyle(theme),\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"recharts-tooltip-label\",\n    style: finalLabelStyle,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this), renderContent(itemSorter, colorForKey, payload)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n\n_c = OccupancyTooltipContent;\nOccupancyTooltipContent.propTypes = {\n  label: PropTypes.string,\n  theme: PropTypes.string.isRequired,\n  colorForKey: PropTypes.objectOf(PropTypes.string),\n  itemSorter: PropTypes.func,\n  payload: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string,\n    dataKey: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.number,\n    unit: PropTypes.string\n  }))\n};\nOccupancyTooltipContent.defaultProps = {\n  colorForKey: {},\n  label: '',\n  itemSorter: () => {},\n  payload: []\n};\nexport default OccupancyTooltipContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OccupancyTooltipContent\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Dashboards/Booking/components/OccupancyTooltipContent.jsx"],"names":["React","PropTypes","themes","renderContent","itemSorter","colorForKey","payload","length","listStyle","padding","margin","items","sort","map","entry","i","finalItemStyle","display","paddingTop","paddingBottom","color","Object","keys","filter","key","dataKey","forEach","name","value","unit","finalStyle","theme","backgroundColor","darkTheme","border","whiteSpace","finalLabelStyle","OccupancyTooltipContent","label","propTypes","string","isRequired","objectOf","func","arrayOf","shape","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { themes } from '@/shared/helpers';\n\nconst renderContent = (itemSorter, colorForKey, payload) => {\n  if (payload && payload.length) {\n    const listStyle = { padding: 0, margin: 0 };\n\n    const items = payload.sort(itemSorter)\n      .map((entry, i) => {\n        const finalItemStyle = {\n          display: 'block',\n          paddingTop: 4,\n          paddingBottom: 4,\n          color: entry.color || '#555555',\n        };\n        Object.keys(colorForKey)\n          .filter(key => key === entry.dataKey)\n          .forEach((key) => {\n            finalItemStyle.color = colorForKey[key];\n          });\n\n        return (\n          <li className=\"recharts-tooltip-item\" key={`tooltip-item-${i + 1}`} style={finalItemStyle}>\n            <span className=\"recharts-tooltip-item-name\">{entry.name}</span>\n            <span className=\"recharts-tooltip-item-separator\"> : </span>\n            <span className=\"recharts-tooltip-item-value\">\n              {entry.value}\n            </span>\n            <span className=\"recharts-tooltip-item-unit\">{entry.unit || ''}</span>\n          </li>\n        );\n      });\n\n    return <ul className=\"recharts-tooltip-item-list\" style={listStyle}>{items}</ul>;\n  }\n  return null;\n};\n\nconst finalStyle = theme => ({\n  margin: 0,\n  padding: 10,\n  backgroundColor: theme === 'theme-dark' ? themes.darkTheme.backgroundColor : '#fff',\n  border: '1px solid #ccc',\n  whiteSpace: 'nowrap',\n});\n\nconst finalLabelStyle = {\n  margin: 0,\n};\n\nconst OccupancyTooltipContent = ({\n  label, theme, itemSorter, colorForKey, payload,\n}) => (\n  <div className=\"recharts-default-tooltip\" style={finalStyle(theme)}>\n    <p className=\"recharts-tooltip-label\" style={finalLabelStyle}>{label}</p>\n    {renderContent(itemSorter, colorForKey, payload)}\n  </div>\n);\n\nOccupancyTooltipContent.propTypes = {\n  label: PropTypes.string,\n  theme: PropTypes.string.isRequired,\n  colorForKey: PropTypes.objectOf(PropTypes.string),\n  itemSorter: PropTypes.func,\n  payload: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string,\n    dataKey: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.number,\n    unit: PropTypes.string,\n  })),\n};\n\nOccupancyTooltipContent.defaultProps = {\n  colorForKey: {},\n  label: '',\n  itemSorter: () => {},\n  payload: [],\n};\n\nexport default OccupancyTooltipContent;\n"]},"metadata":{},"sourceType":"module"}