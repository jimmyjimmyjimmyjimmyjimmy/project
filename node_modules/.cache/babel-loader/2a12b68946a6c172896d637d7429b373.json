{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/text-editor/TextEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToolbarOptions = {\n  options: ['inline', 'blockType', 'list', 'textAlign', 'link', 'emoji', 'image', 'history'],\n  inline: {\n    options: ['bold', 'italic', 'underline']\n  }\n};\nconst TextEditorTwo = /*#__PURE__*/memo(_c = _s(({\n  onChange\n}) => {\n  _s();\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = items => {\n    setEditorState(items);\n\n    if (onChange) {\n      onChange(draftToHtml(convertToRaw(items.getCurrentContent())));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor\",\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onEditorStateChange: onEditorStateChange,\n      toolbar: ToolbarOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\"));\n_c2 = TextEditorTwo;\nTextEditorTwo.propTypes = {\n  onChange: PropTypes.func\n};\nTextEditorTwo.defaultProps = {\n  onChange: () => {}\n};\nexport default TextEditorTwo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextEditorTwo$memo\");\n$RefreshReg$(_c2, \"TextEditorTwo\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/text-editor/TextEditor.jsx"],"names":["React","memo","useState","EditorState","convertToRaw","Editor","draftToHtml","PropTypes","ToolbarOptions","options","inline","TextEditorTwo","onChange","editorState","setEditorState","createEmpty","onEditorStateChange","items","getCurrentContent","propTypes","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,UAA1C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,MAAxB,EAAgC,WAAhC,EAA6C,MAA7C,EAAqD,OAArD,EAA8D,OAA9D,EAAuE,SAAvE,CADY;AAErBC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;AADH;AAFa,CAAvB;AAOA,MAAME,aAAa,gBAAGV,IAAI,SAAC,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAACC,WAAW,CAACY,WAAZ,EAAD,CAA9C;;AAEA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCH,IAAAA,cAAc,CAACG,KAAD,CAAd;;AACA,QAAIL,QAAJ,EAAc;AAAEA,MAAAA,QAAQ,CAACN,WAAW,CAACF,YAAY,CAACa,KAAK,CAACC,iBAAN,EAAD,CAAb,CAAZ,CAAR;AAAiE;AAClF,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,WAAW,EAAEL,WADf;AAEE,MAAA,gBAAgB,EAAC,cAFnB;AAGE,MAAA,eAAe,EAAC,aAHlB;AAIE,MAAA,mBAAmB,EAAEG,mBAJvB;AAKE,MAAA,OAAO,EAAER;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnByB,kCAA1B;MAAMG,a;AAqBNA,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa;AADI,CAA1B;AAIAT,aAAa,CAACU,YAAd,GAA6B;AAC3BT,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADS,CAA7B;AAIA,eAAeD,aAAf","sourcesContent":["import React, { memo, useState } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport PropTypes from 'prop-types';\n\nconst ToolbarOptions = {\n  options: ['inline', 'blockType', 'list', 'textAlign', 'link', 'emoji', 'image', 'history'],\n  inline: {\n    options: ['bold', 'italic', 'underline'],\n  },\n};\n\nconst TextEditorTwo = memo(({ onChange }) => {\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = (items) => {\n    setEditorState(items);\n    if (onChange) { onChange(draftToHtml(convertToRaw(items.getCurrentContent()))); }\n  };\n\n  return (\n    <div className=\"text-editor\">\n      <Editor\n        editorState={editorState}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        onEditorStateChange={onEditorStateChange}\n        toolbar={ToolbarOptions}\n      />\n    </div>\n  );\n});\n\nTextEditorTwo.propTypes = {\n  onChange: PropTypes.func,\n};\n\nTextEditorTwo.defaultProps = {\n  onChange: () => {},\n};\n\nexport default TextEditorTwo;\n"]},"metadata":{},"sourceType":"module"}