{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Account/AuthBtn/googleAuthBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport GoogleLogin from 'react-google-login';\nimport GooglePlusIcon from 'mdi-react/GooglePlusIcon';\nimport { auth, authError } from '@/redux/actions/authActions';\nimport googleAuthSetting from '../../../config/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthGoogleBtn = ({\n  dispatch,\n  history\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('errors');\n\n  const responseSuccess = response => {\n    dispatch(auth({\n      name: response.profileObj.name,\n      avatar: response.profileObj.imageUrl\n    }));\n    localStorage.setItem('easydev', response.accessToken);\n    history.push('/online_marketing_dashboard');\n  };\n\n  const responseError = response => {\n    console.trace();\n    dispatch(authError(t(response.error)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleLogin, {\n    clientId: googleAuthSetting.client_id,\n    render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: renderProps.onClick,\n      type: \"button\",\n      className: \"account__social-btn account__social-btn--google\",\n      children: /*#__PURE__*/_jsxDEV(GooglePlusIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this),\n    onSuccess: responseSuccess,\n    onFailure: responseError,\n    cookiePolicy: \"single_host_origin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthGoogleBtn, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AuthGoogleBtn;\nAuthGoogleBtn.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    action: PropTypes.string.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default withRouter(connect()(AuthGoogleBtn));\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGoogleBtn\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Account/AuthBtn/googleAuthBtn.jsx"],"names":["React","PropTypes","withRouter","connect","useTranslation","GoogleLogin","GooglePlusIcon","auth","authError","googleAuthSetting","AuthGoogleBtn","dispatch","history","t","responseSuccess","response","name","profileObj","avatar","imageUrl","localStorage","setItem","accessToken","push","responseError","console","trace","error","client_id","renderProps","onClick","propTypes","func","isRequired","shape","action","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,6BAAhC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,CAAC,QAAD,CAA5B;;AACA,QAAMU,eAAe,GAAIC,QAAD,IAAc;AACpCJ,IAAAA,QAAQ,CAACJ,IAAI,CAAC;AAAES,MAAAA,IAAI,EAAED,QAAQ,CAACE,UAAT,CAAoBD,IAA5B;AAAkCE,MAAAA,MAAM,EAAEH,QAAQ,CAACE,UAAT,CAAoBE;AAA9D,KAAD,CAAL,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCN,QAAQ,CAACO,WAAzC;AACAV,IAAAA,OAAO,CAACW,IAAR,CAAa,6BAAb;AACD,GAJD;;AAMA,QAAMC,aAAa,GAAIT,QAAD,IAAc;AAClCU,IAAAA,OAAO,CAACC,KAAR;AACAf,IAAAA,QAAQ,CAACH,SAAS,CAACK,CAAC,CAACE,QAAQ,CAACY,KAAV,CAAF,CAAV,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD;AACE,IAAA,QAAQ,EAAElB,iBAAiB,CAACmB,SAD9B;AAEE,IAAA,MAAM,EAAEC,WAAW,iBACjB;AACE,MAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,iDAHZ;AAAA,6BAKE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAWE,IAAA,SAAS,EAAEhB,eAXb;AAYE,IAAA,SAAS,EAAEU,aAZb;AAaE,IAAA,YAAY,EAAC;AAbf;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9BD;;GAAMd,a;UACUN,c;;;KADVM,a;AAgCNA,aAAa,CAACqB,SAAd,GAA0B;AACxBpB,EAAAA,QAAQ,EAAEV,SAAS,CAAC+B,IAAV,CAAeC,UADD;AAExBrB,EAAAA,OAAO,EAAEX,SAAS,CAACiC,KAAV,CAAgB;AACvBC,IAAAA,MAAM,EAAElC,SAAS,CAACmC,MAAV,CAAiBH,UADF;AAEvBV,IAAAA,IAAI,EAAEtB,SAAS,CAAC+B,IAAV,CAAeC;AAFE,GAAhB,EAGNA;AALqB,CAA1B;AAQA,eAAe/B,UAAU,CAACC,OAAO,GAAGO,aAAH,CAAR,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport GoogleLogin from 'react-google-login';\nimport GooglePlusIcon from 'mdi-react/GooglePlusIcon';\nimport { auth, authError } from '@/redux/actions/authActions';\nimport googleAuthSetting from '../../../config/google';\n\nconst AuthGoogleBtn = ({ dispatch, history }) => {\n  const { t } = useTranslation('errors');\n  const responseSuccess = (response) => {\n    dispatch(auth({ name: response.profileObj.name, avatar: response.profileObj.imageUrl }));\n    localStorage.setItem('easydev', response.accessToken);\n    history.push('/online_marketing_dashboard');\n  };\n\n  const responseError = (response) => {\n    console.trace();\n    dispatch(authError(t(response.error)));\n  };\n\n  return (\n    <GoogleLogin\n      clientId={googleAuthSetting.client_id}\n      render={renderProps => (\n        <button\n          onClick={renderProps.onClick}\n          type=\"button\"\n          className=\"account__social-btn account__social-btn--google\"\n        >\n          <GooglePlusIcon />\n        </button>\n      )}\n      onSuccess={responseSuccess}\n      onFailure={responseError}\n      cookiePolicy=\"single_host_origin\"\n    />\n  );\n};\n\nAuthGoogleBtn.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    action: PropTypes.string.isRequired,\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(connect()(AuthGoogleBtn));\n"]},"metadata":{},"sourceType":"module"}