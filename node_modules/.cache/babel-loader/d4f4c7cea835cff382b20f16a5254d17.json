{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Layout/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { CustomizerProps, SidebarProps, ThemeProps, RTLProps, BlocksShadowsProps, RoundBordersProps } from '@/shared/prop-types/ReducerProps';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '@/redux/actions/sidebarActions';\nimport { changeThemeToDark, changeThemeToLight } from '@/redux/actions/themeActions';\nimport { changeDirectionToRTL, changeDirectionToLTR } from '@/redux/actions/rtlActions';\nimport { toggleTopNavigation } from '@/redux/actions/customizerActions';\nimport { changeRoundBordersToOnAction, changeRoundBordersToOffAction } from '@/redux/actions/roundBordersActions';\nimport { changeBlocksShadowsToOnAction, changeBlocksShadowsToOffAction } from '@/redux/actions/blocksShadowsActions';\nimport Topbar from './topbar/Topbar';\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Customizer from './customizer/Customizer';\nimport WelcomeNotification from './components/WelcomeNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = ({\n  dispatch,\n  customizer,\n  sidebar,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows\n}) => {\n  _s();\n\n  const [isNotificationShown, setIsNotificationShown] = useState(false);\n  useEffect(() => {\n    if (!isNotificationShown) {\n      WelcomeNotification(theme, rtl, setIsNotificationShown, isNotificationShown);\n    }\n  }, [theme, rtl, isNotificationShown]);\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  const changeToRTL = () => {\n    dispatch(changeDirectionToRTL());\n  };\n\n  const changeToLTR = () => {\n    dispatch(changeDirectionToLTR());\n  };\n\n  const topNavigation = () => {\n    dispatch(toggleTopNavigation());\n  };\n\n  const changeRoundBordersOn = () => {\n    dispatch(changeRoundBordersToOnAction());\n  };\n\n  const changeRoundBordersOff = () => {\n    dispatch(changeRoundBordersToOffAction());\n  };\n\n  const changeBlocksShadowsOn = () => {\n    dispatch(changeBlocksShadowsToOnAction());\n  };\n\n  const changeBlocksShadowsOff = () => {\n    dispatch(changeBlocksShadowsToOffAction());\n  };\n\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n    'layout--top-navigation': customizer.topNavigation\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: layoutClass,\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      changeMobileSidebarVisibility: mobileSidebarVisibility,\n      changeSidebarVisibility: sidebarVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      sidebar: sidebar,\n      changeMobileSidebarVisibility: mobileSidebarVisibility,\n      topNavigation: customizer.topNavigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"jLVabMSjdh1riGnydYTWIntnPbY=\");\n\n_c = Layout;\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired\n};\nexport default withRouter(connect(state => ({\n  customizer: state.customizer,\n  sidebar: state.sidebar,\n  theme: state.theme,\n  rtl: state.rtl,\n  roundBorders: state.roundBorders,\n  blocksShadows: state.blocksShadows\n}))(Layout));\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Layout/index.jsx"],"names":["React","useEffect","useState","PropTypes","withRouter","connect","classNames","CustomizerProps","SidebarProps","ThemeProps","RTLProps","BlocksShadowsProps","RoundBordersProps","changeMobileSidebarVisibility","changeSidebarVisibility","changeThemeToDark","changeThemeToLight","changeDirectionToRTL","changeDirectionToLTR","toggleTopNavigation","changeRoundBordersToOnAction","changeRoundBordersToOffAction","changeBlocksShadowsToOnAction","changeBlocksShadowsToOffAction","Topbar","TopbarWithNavigation","Sidebar","Customizer","WelcomeNotification","Layout","dispatch","customizer","sidebar","theme","rtl","roundBorders","blocksShadows","isNotificationShown","setIsNotificationShown","sidebarVisibility","mobileSidebarVisibility","changeToDark","changeToLight","changeToRTL","changeToLTR","topNavigation","changeRoundBordersOn","changeRoundBordersOff","changeBlocksShadowsOn","changeBlocksShadowsOff","layoutClass","layout","collapse","propTypes","func","isRequired","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport {\n  CustomizerProps,\n  SidebarProps,\n  ThemeProps,\n  RTLProps,\n  BlocksShadowsProps,\n  RoundBordersProps,\n} from '@/shared/prop-types/ReducerProps';\nimport {\n  changeMobileSidebarVisibility,\n  changeSidebarVisibility,\n} from '@/redux/actions/sidebarActions';\nimport {\n  changeThemeToDark,\n  changeThemeToLight,\n} from '@/redux/actions/themeActions';\nimport {\n  changeDirectionToRTL,\n  changeDirectionToLTR,\n} from '@/redux/actions/rtlActions';\nimport { toggleTopNavigation } from '@/redux/actions/customizerActions';\nimport {\n  changeRoundBordersToOnAction,\n  changeRoundBordersToOffAction,\n} from '@/redux/actions/roundBordersActions';\nimport {\n  changeBlocksShadowsToOnAction,\n  changeBlocksShadowsToOffAction,\n} from '@/redux/actions/blocksShadowsActions';\nimport Topbar from './topbar/Topbar';\nimport TopbarWithNavigation from './topbar_with_navigation/TopbarWithNavigation';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Customizer from './customizer/Customizer';\nimport WelcomeNotification from './components/WelcomeNotification';\n\nconst Layout = ({\n  dispatch,\n  customizer,\n  sidebar,\n  theme,\n  rtl,\n  roundBorders,\n  blocksShadows,\n}) => {\n  const [isNotificationShown, setIsNotificationShown] = useState(false);\n\n  useEffect(() => {\n    if (!isNotificationShown) {\n      WelcomeNotification(\n        theme,\n        rtl,\n        setIsNotificationShown,\n        isNotificationShown,\n      );\n    }\n  }, [theme, rtl, isNotificationShown]);\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  const changeToRTL = () => {\n    dispatch(changeDirectionToRTL());\n  };\n\n  const changeToLTR = () => {\n    dispatch(changeDirectionToLTR());\n  };\n\n  const topNavigation = () => {\n    dispatch(toggleTopNavigation());\n  };\n\n  const changeRoundBordersOn = () => {\n    dispatch(changeRoundBordersToOnAction());\n  };\n\n  const changeRoundBordersOff = () => {\n    dispatch(changeRoundBordersToOffAction());\n  };\n\n  const changeBlocksShadowsOn = () => {\n    dispatch(changeBlocksShadowsToOnAction());\n  };\n\n  const changeBlocksShadowsOff = () => {\n    dispatch(changeBlocksShadowsToOffAction());\n  };\n\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n    'layout--top-navigation': customizer.topNavigation,\n  });\n\n  return (\n    <div className={layoutClass}>\n      <Topbar\n        changeMobileSidebarVisibility={mobileSidebarVisibility}\n        changeSidebarVisibility={sidebarVisibility}\n      />\n      <Sidebar\n        sidebar={sidebar}\n        changeMobileSidebarVisibility={mobileSidebarVisibility}\n        topNavigation={customizer.topNavigation}\n      />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n  customizer: CustomizerProps.isRequired,\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  roundBorders: RoundBordersProps.isRequired,\n  blocksShadows: BlocksShadowsProps.isRequired,\n};\n\nexport default withRouter(\n  connect(state => ({\n    customizer: state.customizer,\n    sidebar: state.sidebar,\n    theme: state.theme,\n    rtl: state.rtl,\n    roundBorders: state.roundBorders,\n    blocksShadows: state.blocksShadows,\n  }))(Layout),\n);\n"]},"metadata":{},"sourceType":"module"}