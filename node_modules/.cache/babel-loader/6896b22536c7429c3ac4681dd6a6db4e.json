{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/form/Select.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectField = /*#__PURE__*/React.forwardRef(_c = ({\n  onChange,\n  value,\n  name,\n  placeholder,\n  options\n}, ref) => {\n  const handleChange = selectedOption => {\n    onChange(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    name: name,\n    value: value,\n    onChange: handleChange,\n    options: options,\n    clearable: false,\n    className: \"react-select\",\n    placeholder: placeholder,\n    classNamePrefix: \"react-select\",\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n});\n_c2 = SelectField;\nSelectField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })]).isRequired\n};\nSelectField.defaultProps = {\n  placeholder: '',\n  options: []\n};\nexport default _c3 = renderComponentField(SelectField);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SelectField$React.forwardRef\");\n$RefreshReg$(_c2, \"SelectField\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/form/Select.jsx"],"names":["React","Select","PropTypes","renderComponentField","SelectField","forwardRef","onChange","value","name","placeholder","options","ref","handleChange","selectedOption","propTypes","func","isRequired","string","arrayOf","shape","label","oneOfType","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAAC;AAC3CC,EAAAA,QAD2C;AACjCC,EAAAA,KADiC;AAC1BC,EAAAA,IAD0B;AACpBC,EAAAA,WADoB;AACPC,EAAAA;AADO,CAAD,EAEzCC,GAFyC,KAEjC;AACT,QAAMC,YAAY,GAAIC,cAAD,IAAoB;AACvCP,IAAAA,QAAQ,CAACO,cAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,QAAQ,EAAEK,YAHZ;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,SAAS,EAAE,KALb;AAME,IAAA,SAAS,EAAC,cANZ;AAOE,IAAA,WAAW,EAAED,WAPf;AAQE,IAAA,eAAe,EAAC,cARlB;AASE,IAAA,GAAG,EAAEE;AATP;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApB0B,CAApB;MAAMP,W;AAsBbA,WAAW,CAACU,SAAZ,GAAwB;AACtBR,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADH;AAEtBR,EAAAA,IAAI,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFD;AAGtBP,EAAAA,WAAW,EAAEP,SAAS,CAACe,MAHD;AAItBP,EAAAA,OAAO,EAAER,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACzCZ,IAAAA,KAAK,EAAEL,SAAS,CAACe,MADwB;AAEzCG,IAAAA,KAAK,EAAElB,SAAS,CAACe;AAFwB,GAAhB,CAAlB,CAJa;AAQtBV,EAAAA,KAAK,EAAEL,SAAS,CAACmB,SAAV,CAAoB,CACzBnB,SAAS,CAACe,MADe,EAEzBf,SAAS,CAACiB,KAAV,CAAgB;AACdZ,IAAAA,KAAK,EAAEL,SAAS,CAACe,MADH;AAEdG,IAAAA,KAAK,EAAElB,SAAS,CAACe;AAFH,GAAhB,CAFyB,CAApB,EAMJD;AAdmB,CAAxB;AAiBAZ,WAAW,CAACkB,YAAZ,GAA2B;AACzBb,EAAAA,WAAW,EAAE,EADY;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAA3B;AAKA,qBAAeP,oBAAoB,CAACC,WAAD,CAAnC","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { renderComponentField } from '@/shared/components/form/FormField';\n\nexport const SelectField = React.forwardRef(({\n  onChange, value, name, placeholder, options,\n}, ref) => {\n  const handleChange = (selectedOption) => {\n    onChange(selectedOption);\n  };\n\n  return (\n    <Select\n      name={name}\n      value={value}\n      onChange={handleChange}\n      options={options}\n      clearable={false}\n      className=\"react-select\"\n      placeholder={placeholder}\n      classNamePrefix=\"react-select\"\n      ref={ref}\n    />\n  );\n});\n\nSelectField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ]).isRequired,\n};\n\nSelectField.defaultProps = {\n  placeholder: '',\n  options: [],\n};\n\nexport default renderComponentField(SelectField);\n"]},"metadata":{},"sourceType":"module"}