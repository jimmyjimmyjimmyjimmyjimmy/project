{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableFilter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAsyncDebounce } from 'react-table';\nimport { Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactTableFilter = ({\n  rows,\n  setGlobalFilter,\n  setFilterValue,\n  placeholder,\n  dataLength\n}) => {\n  _s();\n\n  const onChange = useAsyncDebounce(item => {\n    const value = item.trim();\n    setFilterValue(value);\n    setGlobalFilter(value);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table__search\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      className: \"table__search table__search-input\",\n      onChange: e => onChange(e.target.value),\n      placeholder: `${placeholder}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), dataLength !== rows.length && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Found \", rows.length, \" matches\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactTableFilter, \"oXbRbFnWvAY7GGkiw7r7qYIFOG0=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = ReactTableFilter;\n\nconst filterGreaterThan = (rows, id, filterValue) => rows.filter(row => {\n  const rowValue = row.values[id];\n  return rowValue >= filterValue;\n});\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number';\n\nReactTableFilter.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setGlobalFilter: PropTypes.func.isRequired,\n  setFilterValue: PropTypes.func,\n  placeholder: PropTypes.string,\n  dataLength: PropTypes.number.isRequired\n};\nReactTableFilter.defaultProps = {\n  setFilterValue: () => {},\n  placeholder: 'Search...'\n};\nexport default ReactTableFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTableFilter\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/table/components/ReactTableFilter.jsx"],"names":["React","PropTypes","useAsyncDebounce","Input","ReactTableFilter","rows","setGlobalFilter","setFilterValue","placeholder","dataLength","onChange","item","value","trim","e","target","length","filterGreaterThan","id","filterValue","filter","row","rowValue","values","autoRemove","val","propTypes","arrayOf","shape","isRequired","func","string","number","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,IADwB;AAExBC,EAAAA,eAFwB;AAEPC,EAAAA,cAFO;AAESC,EAAAA,WAFT;AAEsBC,EAAAA;AAFtB,CAAD,KAGnB;AAAA;;AACJ,QAAMC,QAAQ,GAAGR,gBAAgB,CAAES,IAAD,IAAU;AAC1C,UAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,EAAd;AACAN,IAAAA,cAAc,CAACK,KAAD,CAAd;AACAN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACD,GAJgC,EAI9B,GAJ8B,CAAjC;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAC,mCADZ;AAEE,MAAA,QAAQ,EAAEE,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASH,KAAV,CAFzB;AAGE,MAAA,WAAW,EAAG,GAAEJ,WAAY;AAH9B;AAAA;AAAA;AAAA;AAAA,YADF,EAMGC,UAAU,KAAKJ,IAAI,CAACW,MAApB,iBACC;AAAA,2BAAaX,IAAI,CAACW,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBD;;GAAMZ,gB;UAIaF,gB;;;KAJbE,gB;;AAwBN,MAAMa,iBAAiB,GAAG,CAACZ,IAAD,EAAOa,EAAP,EAAWC,WAAX,KAA2Bd,IAAI,CAACe,MAAL,CAAaC,GAAD,IAAS;AACxE,QAAMC,QAAQ,GAAGD,GAAG,CAACE,MAAJ,CAAWL,EAAX,CAAjB;AACA,SAAOI,QAAQ,IAAIH,WAAnB;AACD,CAHoD,CAArD;;AAKAF,iBAAiB,CAACO,UAAlB,GAA+BC,GAAG,IAAI,OAAOA,GAAP,KAAe,QAArD;;AAEArB,gBAAgB,CAACsB,SAAjB,GAA6B;AAC3BrB,EAAAA,IAAI,EAAEJ,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,KAAV,EAAlB,EAAqCC,UADhB;AAE3BvB,EAAAA,eAAe,EAAEL,SAAS,CAAC6B,IAAV,CAAeD,UAFL;AAG3BtB,EAAAA,cAAc,EAAEN,SAAS,CAAC6B,IAHC;AAI3BtB,EAAAA,WAAW,EAAEP,SAAS,CAAC8B,MAJI;AAK3BtB,EAAAA,UAAU,EAAER,SAAS,CAAC+B,MAAV,CAAiBH;AALF,CAA7B;AAQAzB,gBAAgB,CAAC6B,YAAjB,GAAgC;AAC9B1B,EAAAA,cAAc,EAAE,MAAM,CAAE,CADM;AAE9BC,EAAAA,WAAW,EAAE;AAFiB,CAAhC;AAKA,eAAeJ,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useAsyncDebounce } from 'react-table';\nimport { Input } from 'reactstrap';\n\nconst ReactTableFilter = ({\n  rows,\n  setGlobalFilter, setFilterValue, placeholder, dataLength,\n}) => {\n  const onChange = useAsyncDebounce((item) => {\n    const value = item.trim();\n    setFilterValue(value);\n    setGlobalFilter(value);\n  }, 200);\n\n  return (\n    <div className=\"table__search\">\n      <Input\n        className=\"table__search table__search-input\"\n        onChange={e => onChange(e.target.value)}\n        placeholder={`${placeholder}`}\n      />\n      {dataLength !== rows.length && (\n        <span>Found {rows.length} matches</span>\n      )}\n    </div>\n  );\n};\n\nconst filterGreaterThan = (rows, id, filterValue) => rows.filter((row) => {\n  const rowValue = row.values[id];\n  return rowValue >= filterValue;\n});\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number';\n\nReactTableFilter.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setGlobalFilter: PropTypes.func.isRequired,\n  setFilterValue: PropTypes.func,\n  placeholder: PropTypes.string,\n  dataLength: PropTypes.number.isRequired,\n};\n\nReactTableFilter.defaultProps = {\n  setFilterValue: () => {},\n  placeholder: 'Search...',\n};\n\nexport default ReactTableFilter;\n"]},"metadata":{},"sourceType":"module"}