{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport pokemonApi from '../../utils/api/pokemonApi';\nexport const fetchPokemonRequest = createAction('FETCH_POKEMON_REQUEST');\nexport const fetchPokemonSuccess = createAction('FETCH_POKEMON_SUCCESS');\nexport const fetchPokemonError = createAction('FETCH_POKEMON_ERROR');\nexport const fetchPokemon = count => async dispatch => {\n  try {\n    dispatch(fetchPokemonRequest());\n    const {\n      data: {\n        results\n      }\n    } = await pokemonApi.getPokemons(count);\n    const pokemonData = results.map(async (pokemon, index) => {\n      const {\n        data: pokemonInfo\n      } = await pokemonApi.getPokemon(pokemon.url);\n      return { ...results[index],\n        ...pokemonInfo\n      };\n    });\n    const pokemons = await Promise.all(pokemonData);\n    dispatch(fetchPokemonSuccess(pokemons));\n  } catch (e) {\n    dispatch(fetchPokemonError());\n  }\n};","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/redux/actions/pokemonActions.js"],"names":["createAction","pokemonApi","fetchPokemonRequest","fetchPokemonSuccess","fetchPokemonError","fetchPokemon","count","dispatch","data","results","getPokemons","pokemonData","map","pokemon","index","pokemonInfo","getPokemon","url","pokemons","Promise","all","e"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAO,MAAMC,mBAAmB,GAAGF,YAAY,CAAC,uBAAD,CAAxC;AACP,OAAO,MAAMG,mBAAmB,GAAGH,YAAY,CAAC,uBAAD,CAAxC;AACP,OAAO,MAAMI,iBAAiB,GAAGJ,YAAY,CAAC,qBAAD,CAAtC;AAEP,OAAO,MAAMK,YAAY,GAAGC,KAAK,IAAI,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAACL,mBAAmB,EAApB,CAAR;AACA,UAAM;AAAEM,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAAwB,MAAMR,UAAU,CAACS,WAAX,CAAuBJ,KAAvB,CAApC;AAEA,UAAMK,WAAW,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AACxD,YAAM;AAAEN,QAAAA,IAAI,EAAEO;AAAR,UAAwB,MAAMd,UAAU,CAACe,UAAX,CAAsBH,OAAO,CAACI,GAA9B,CAApC;AACA,aAAO,EACL,GAAGR,OAAO,CAACK,KAAD,CADL;AAEL,WAAGC;AAFE,OAAP;AAID,KANmB,CAApB;AAQA,UAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYT,WAAZ,CAAvB;AACAJ,IAAAA,QAAQ,CAACJ,mBAAmB,CAACe,QAAD,CAApB,CAAR;AACD,GAdD,CAcE,OAAOG,CAAP,EAAU;AACVd,IAAAA,QAAQ,CAACH,iBAAiB,EAAlB,CAAR;AACD;AACF,CAlBM","sourcesContent":["import { createAction } from 'redux-actions';\nimport pokemonApi from '../../utils/api/pokemonApi';\n\nexport const fetchPokemonRequest = createAction('FETCH_POKEMON_REQUEST');\nexport const fetchPokemonSuccess = createAction('FETCH_POKEMON_SUCCESS');\nexport const fetchPokemonError = createAction('FETCH_POKEMON_ERROR');\n\nexport const fetchPokemon = count => async (dispatch) => {\n  try {\n    dispatch(fetchPokemonRequest());\n    const { data: { results } } = await pokemonApi.getPokemons(count);\n\n    const pokemonData = results.map(async (pokemon, index) => {\n      const { data: pokemonInfo } = await pokemonApi.getPokemon(pokemon.url);\n      return {\n        ...results[index],\n        ...pokemonInfo,\n      };\n    });\n\n    const pokemons = await Promise.all(pokemonData);\n    dispatch(fetchPokemonSuccess(pokemons));\n  } catch (e) {\n    dispatch(fetchPokemonError());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}