{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/Panel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Card, CardBody, Col, Collapse } from 'reactstrap';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertComponent = ({\n  md,\n  lg,\n  xl,\n  sm,\n  xs,\n  color,\n  divider,\n  icon,\n  title,\n  label,\n  subhead,\n  before,\n  panelClass,\n  children\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(true);\n  const [collapse, setCollapse] = useState(true);\n  const [refresh, setRefresh] = useState(false);\n\n  const onDismiss = () => {\n    setVisible(false);\n  };\n\n  const toggleCollapse = () => {\n    setCollapse(prevState => !prevState);\n  }; // your async logic here\n\n\n  const onRefresh = () => {\n    setRefresh(true);\n  };\n\n  useEffect(() => {\n    if (refresh) {\n      // fake timeout\n      setTimeout(() => setRefresh(false), 5000);\n    }\n  }, [refresh]);\n\n  if (visible) {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      md: md,\n      lg: lg,\n      xl: xl,\n      sm: sm,\n      xs: xs,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: `panel${color ? ` panel--${color}` : ''}\n          ${divider ? ' panel--divider' : ''}${collapse ? '' : ' panel--collapse'} ${panelClass}`,\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          className: \"panel__body\",\n          children: [refresh ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel__refresh\",\n            children: /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel__btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"panel__btn\",\n              \"aria-label\": \"panel__btn\",\n              type: \"button\",\n              onClick: toggleCollapse,\n              children: /*#__PURE__*/_jsxDEV(MinusIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"panel__btn\",\n              \"aria-label\": \"panel__btn\",\n              type: \"button\",\n              onClick: onRefresh,\n              children: /*#__PURE__*/_jsxDEV(AutorenewIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"panel__btn\",\n              \"aria-label\": \"panel__btn\",\n              type: \"button\",\n              onClick: onDismiss,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel__title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"bold-text\",\n              children: [icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `panel__icon lnr lnr-${icon}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this) : '', title, /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"panel__label\",\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"subhead\",\n              children: subhead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: collapse,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel__content\",\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), before]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return '';\n};\n\n_s(AlertComponent, \"ocDyUmn0zXsGb+NvixhgmQUEPvE=\");\n\n_c = AlertComponent;\nAlertComponent.propTypes = {\n  divider: PropTypes.bool,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subhead: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  md: PropTypes.number,\n  lg: PropTypes.number,\n  xl: PropTypes.number,\n  sm: PropTypes.number,\n  xs: PropTypes.number,\n  before: PropTypes.element,\n  panelClass: PropTypes.string\n};\nAlertComponent.defaultProps = {\n  divider: false,\n  color: '',\n  title: '',\n  subhead: '',\n  label: '',\n  icon: '',\n  md: 0,\n  lg: 0,\n  xl: 0,\n  sm: 0,\n  xs: 0,\n  before: null,\n  panelClass: ''\n};\nexport default AlertComponent;\nexport const PanelTitle = ({\n  title\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"panel__title\",\n  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n    className: \"bold-text\",\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 132,\n  columnNumber: 3\n}, this);\n_c2 = PanelTitle;\nPanelTitle.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlertComponent\");\n$RefreshReg$(_c2, \"PanelTitle\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/Panel.jsx"],"names":["React","useState","useEffect","PropTypes","Badge","Card","CardBody","Col","Collapse","CloseIcon","MinusIcon","AutorenewIcon","LoadingIcon","AlertComponent","md","lg","xl","sm","xs","color","divider","icon","title","label","subhead","before","panelClass","children","visible","setVisible","collapse","setCollapse","refresh","setRefresh","onDismiss","toggleCollapse","prevState","onRefresh","setTimeout","propTypes","bool","string","number","element","defaultProps","PanelTitle","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Badge, Card, CardBody, Col, Collapse,\n} from 'reactstrap';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport MinusIcon from 'mdi-react/MinusIcon';\nimport AutorenewIcon from 'mdi-react/AutorenewIcon';\nimport LoadingIcon from 'mdi-react/LoadingIcon';\n\nconst AlertComponent = ({\n  md, lg, xl, sm, xs, color, divider, icon, title, label, subhead, before,\n  panelClass, children,\n}) => {\n  const [visible, setVisible] = useState(true);\n  const [collapse, setCollapse] = useState(true);\n  const [refresh, setRefresh] = useState(false);\n\n  const onDismiss = () => {\n    setVisible(false);\n  };\n\n  const toggleCollapse = () => {\n    setCollapse(prevState => !prevState);\n  };\n\n  // your async logic here\n  const onRefresh = () => {\n    setRefresh(true);\n  };\n\n  useEffect(() => {\n    if (refresh) {\n      // fake timeout\n      setTimeout(() => setRefresh(false), 5000);\n    }\n  }, [refresh]);\n\n  if (visible) {\n    return (\n      <Col md={md} lg={lg} xl={xl} sm={sm} xs={xs}>\n        <Card\n          className={`panel${color ? ` panel--${color}` : ''}\n          ${divider ? ' panel--divider' : ''}${collapse ? '' : ' panel--collapse'} ${panelClass}`}\n        >\n          <CardBody className=\"panel__body\">\n            {refresh ? <div className=\"panel__refresh\"><LoadingIcon /></div> : ''}\n            <div className=\"panel__btns\">\n              <button\n                className=\"panel__btn\"\n                aria-label=\"panel__btn\"\n                type=\"button\"\n                onClick={toggleCollapse}\n              >\n                <MinusIcon />\n              </button>\n              <button\n                className=\"panel__btn\"\n                aria-label=\"panel__btn\"\n                type=\"button\"\n                onClick={onRefresh}\n              >\n                <AutorenewIcon />\n              </button>\n              <button\n                className=\"panel__btn\"\n                aria-label=\"panel__btn\"\n                type=\"button\"\n                onClick={onDismiss}\n              >\n                <CloseIcon />\n              </button>\n            </div>\n            <div className=\"panel__title\">\n              <h5 className=\"bold-text\">\n                {icon ? <span className={`panel__icon lnr lnr-${icon}`} /> : ''}\n                {title}\n                <Badge className=\"panel__label\">{label}</Badge>\n              </h5>\n              <h5 className=\"subhead\">{subhead}</h5>\n            </div>\n            <Collapse isOpen={collapse}>\n              <div className=\"panel__content\">\n                {children}\n              </div>\n            </Collapse>\n          </CardBody>\n        </Card>\n        {before}\n      </Col>\n    );\n  }\n\n  return '';\n};\n\nAlertComponent.propTypes = {\n  divider: PropTypes.bool,\n  color: PropTypes.string,\n  title: PropTypes.string,\n  subhead: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  md: PropTypes.number,\n  lg: PropTypes.number,\n  xl: PropTypes.number,\n  sm: PropTypes.number,\n  xs: PropTypes.number,\n  before: PropTypes.element,\n  panelClass: PropTypes.string,\n};\n\nAlertComponent.defaultProps = {\n  divider: false,\n  color: '',\n  title: '',\n  subhead: '',\n  label: '',\n  icon: '',\n  md: 0,\n  lg: 0,\n  xl: 0,\n  sm: 0,\n  xs: 0,\n  before: null,\n  panelClass: '',\n};\n\nexport default AlertComponent;\n\nexport const PanelTitle = ({ title }) => (\n  <div className=\"panel__title\">\n    <h5 className=\"bold-text\">\n      {title}\n    </h5>\n  </div>\n);\n\nPanelTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}