{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, ButtonToolbar, Card, CardBody, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectField } from '@/shared/components/form/Select';\nimport { emailPatter, urlPattern } from '@/shared/helpers';\nimport showResults from '@/utils/showResults';\nimport PasswordField from '@/shared/components/form/Password';\nimport { FormField } from './FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  isHorizontal,\n  isAboveError\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => showResults(data);\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    md: 12,\n    lg: 12,\n    xl: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('forms.from_validation.horizontal_form_validate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"subhead\",\n            children: isAboveError ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Errors are above fields, use class super\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red-text\",\n                children: \" form__form-group-input-wrap--error-above\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this) : 'Errors are under fields'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: `form ${isHorizontal && 'form--horizontal'}`,\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form__form-group-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__form-group-field\",\n              children: /*#__PURE__*/_jsxDEV(FormField, {\n                name: \"username\",\n                control: control,\n                component: \"input\",\n                errors: errors,\n                rules: {\n                  required: 'This is required field'\n                },\n                defaultValue: \"\",\n                isAboveError: isAboveError,\n                placeholder: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form__form-group-label\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__form-group-field\",\n              children: /*#__PURE__*/_jsxDEV(FormField, {\n                name: \"email\",\n                control: control,\n                component: \"input\",\n                errors: errors,\n                rules: {\n                  required: 'This is required field',\n                  pattern: {\n                    value: emailPatter,\n                    message: 'Entered value does not match email format'\n                  }\n                },\n                defaultValue: \"\",\n                isAboveError: isAboveError,\n                placeholder: \"example@gmail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form__form-group-label\",\n              children: \"Url\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__form-group-field\",\n              children: /*#__PURE__*/_jsxDEV(FormField, {\n                name: \"url\",\n                control: control,\n                component: \"input\",\n                errors: errors,\n                rules: {\n                  required: 'This is required field',\n                  pattern: {\n                    value: urlPattern,\n                    message: 'invalid url'\n                  }\n                },\n                placeholder: \"https://themeforest.com\",\n                defaultValue: \"\",\n                isAboveError: isAboveError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form__form-group-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__form-group-field\",\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"password\",\n                control: control,\n                render: ({\n                  field,\n                  fieldState\n                }) => {\n                  var _fieldState$error;\n\n                  return /*#__PURE__*/_jsxDEV(PasswordField, {\n                    input: field,\n                    meta: {\n                      touched: !!fieldState.error,\n                      error: (_fieldState$error = fieldState.error) === null || _fieldState$error === void 0 ? void 0 : _fieldState$error.message\n                    },\n                    placeholder: \"Password\",\n                    isAboveError: isAboveError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this);\n                },\n                rules: {\n                  required: 'This is required field'\n                },\n                defaultValue: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form__form-group-label\",\n              children: \"Select Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__form-group-field\",\n              children: /*#__PURE__*/_jsxDEV(FormField, {\n                name: \"select\",\n                control: control,\n                component: SelectField,\n                errors: errors,\n                options: [{\n                  value: 'one',\n                  label: 'One'\n                }, {\n                  value: 'two',\n                  label: 'Two'\n                }],\n                rules: {\n                  required: 'This is required field'\n                },\n                defaultValue: \"\",\n                isAboveError: isAboveError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n            className: \"form__button-toolbar\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: () => reset({\n                username: '',\n                email: '',\n                url: '',\n                password: '',\n                select: ''\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"gSdZprtE9/EW8EK7zg9Wru+IBDE=\", false, function () {\n  return [useTranslation, useForm];\n});\n\n_c = Form;\nForm.propTypes = {\n  isHorizontal: PropTypes.bool,\n  isAboveError: PropTypes.bool\n};\nForm.defaultProps = {\n  isHorizontal: false,\n  isAboveError: false\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/Form.jsx"],"names":["React","Button","ButtonToolbar","Card","CardBody","Col","PropTypes","useTranslation","useForm","Controller","SelectField","emailPatter","urlPattern","showResults","PasswordField","FormField","Form","isHorizontal","isAboveError","t","handleSubmit","reset","control","formState","errors","onSubmit","data","required","pattern","value","message","field","fieldState","touched","error","label","username","email","url","password","select","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  Col,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useForm, Controller } from 'react-hook-form';\nimport { SelectField } from '@/shared/components/form/Select';\nimport { emailPatter, urlPattern } from '@/shared/helpers';\nimport showResults from '@/utils/showResults';\nimport PasswordField from '@/shared/components/form/Password';\nimport { FormField } from './FormField';\n\nconst Form = ({ isHorizontal, isAboveError }) => {\n  const { t } = useTranslation('common');\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => showResults(data);\n\n  return (\n    <Col md={12} lg={12} xl={6}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('forms.from_validation.horizontal_form_validate')}</h5>\n            <h5 className=\"subhead\">\n              {\n                isAboveError\n                  ? (\n                    <span>Errors are above fields, use class super\n                      <span className=\"red-text\"> form__form-group-input-wrap--error-above</span>\n                    </span>\n                  )\n              : 'Errors are under fields'\n              }\n            </h5>\n          </div>\n          <form className={`form ${isHorizontal && 'form--horizontal'}`} onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form__form-group\">\n              <span className=\"form__form-group-label\">Username</span>\n              <div className=\"form__form-group-field\">\n                <FormField\n                  name=\"username\"\n                  control={control}\n                  component=\"input\"\n                  errors={errors}\n                  rules={{ required: 'This is required field' }}\n                  defaultValue=\"\"\n                  isAboveError={isAboveError}\n                  placeholder=\"Name\"\n                />\n              </div>\n            </div>\n            <div className=\"form__form-group\">\n              <span className=\"form__form-group-label\">E-mail</span>\n              <div className=\"form__form-group-field\">\n                <FormField\n                  name=\"email\"\n                  control={control}\n                  component=\"input\"\n                  errors={errors}\n                  rules={{\n                    required: 'This is required field',\n                    pattern: {\n                      value: emailPatter,\n                      message: 'Entered value does not match email format',\n                    },\n                  }}\n                  defaultValue=\"\"\n                  isAboveError={isAboveError}\n                  placeholder=\"example@gmail.com\"\n                />\n              </div>\n            </div>\n            <div className=\"form__form-group\">\n              <span className=\"form__form-group-label\">Url</span>\n              <div className=\"form__form-group-field\">\n                <FormField\n                  name=\"url\"\n                  control={control}\n                  component=\"input\"\n                  errors={errors}\n                  rules={{\n                    required: 'This is required field',\n                    pattern: {\n                      value: urlPattern,\n                      message: 'invalid url',\n                    },\n                  }}\n                  placeholder=\"https://themeforest.com\"\n                  defaultValue=\"\"\n                  isAboveError={isAboveError}\n                />\n              </div>\n            </div>\n            <div className=\"form__form-group\">\n              <span className=\"form__form-group-label\">Password</span>\n              <div className=\"form__form-group-field\">\n                <Controller\n                  name=\"password\"\n                  control={control}\n                  render={({ field, fieldState }) => (\n                    <PasswordField\n                      input={field}\n                      meta={{ touched: !!fieldState.error, error: fieldState.error?.message }}\n                      placeholder=\"Password\"\n                      isAboveError={isAboveError}\n                    />\n                  )}\n                  rules={{ required: 'This is required field' }}\n                  defaultValue=\"\"\n                />\n              </div>\n            </div>\n            <div className=\"form__form-group\">\n              <span className=\"form__form-group-label\">Select Option</span>\n              <div className=\"form__form-group-field\">\n                <FormField\n                  name=\"select\"\n                  control={control}\n                  component={SelectField}\n                  errors={errors}\n                  options={[\n                    { value: 'one', label: 'One' },\n                    { value: 'two', label: 'Two' },\n                  ]}\n                  rules={{ required: 'This is required field' }}\n                  defaultValue=\"\"\n                  isAboveError={isAboveError}\n                />\n              </div>\n            </div>\n            <ButtonToolbar className=\"form__button-toolbar\">\n              <Button color=\"primary\" type=\"submit\">Validate</Button>\n              <Button\n                type=\"button\"\n                onClick={() => reset({\n                  username: '',\n                  email: '',\n                  url: '',\n                  password: '',\n                  select: '',\n                })}\n              >\n                Cancel\n              </Button>\n            </ButtonToolbar>\n          </form>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nForm.propTypes = {\n  isHorizontal: PropTypes.bool,\n  isAboveError: PropTypes.bool,\n};\n\nForm.defaultProps = {\n  isHorizontal: false,\n  isAboveError: false,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}