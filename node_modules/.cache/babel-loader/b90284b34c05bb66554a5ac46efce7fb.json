{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/shared/components/range_slider/Range.jsx\";\nimport 'rc-slider/assets/index.css';\nimport React from 'react';\nimport Slider from 'rc-slider';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createSliderWithTooltip\n} = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n_c = Range;\n\nconst RangeTheme = ({\n  marks,\n  value,\n  min,\n  max,\n  tipFormatter\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"slider\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider__min\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tipFormatter ? tipFormatter(min) : min\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider__max\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tipFormatter ? tipFormatter(max) : max\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Range, {\n    min: min,\n    max: max,\n    defaultValue: value,\n    tipFormatter: tipFormatter,\n    marks: marks,\n    tipProps: {\n      visible: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c2 = RangeTheme;\nRangeTheme.propTypes = {\n  marks: PropTypes.shape(),\n  value: PropTypes.arrayOf(PropTypes.number).isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  tipFormatter: PropTypes.func\n};\nRangeTheme.defaultProps = {\n  marks: {},\n  tipFormatter: value => value\n};\nexport default RangeTheme;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Range\");\n$RefreshReg$(_c2, \"RangeTheme\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/shared/components/range_slider/Range.jsx"],"names":["React","Slider","PropTypes","createSliderWithTooltip","Range","RangeTheme","marks","value","min","max","tipFormatter","visible","propTypes","shape","arrayOf","number","isRequired","func","defaultProps"],"mappings":";AAAA,OAAO,4BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA8BF,MAApC;AACA,MAAMG,KAAK,GAAGD,uBAAuB,CAACF,MAAM,CAACG,KAAR,CAArC;KAAMA,K;;AAEN,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,KADkB;AACXC,EAAAA,KADW;AACJC,EAAAA,GADI;AACCC,EAAAA,GADD;AACMC,EAAAA;AADN,CAAD,kBAGjB;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAA,gBAAIA,YAAY,GAAGA,YAAY,CAACF,GAAD,CAAf,GAAuBA;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAA,gBAAIE,YAAY,GAAGA,YAAY,CAACD,GAAD,CAAf,GAAuBA;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAJF,eAOE,QAAC,KAAD;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,YAAY,EAAEF,KAHhB;AAIE,IAAA,YAAY,EAAEG,YAJhB;AAKE,IAAA,KAAK,EAAEJ,KALT;AAME,IAAA,QAAQ,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX;AANZ;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;;MAAMN,U;AAqBNA,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,KAAK,EAAEJ,SAAS,CAACW,KAAV,EADc;AAErBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,MAA5B,EAAoCC,UAFtB;AAGrBR,EAAAA,GAAG,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UAHD;AAIrBP,EAAAA,GAAG,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAJD;AAKrBN,EAAAA,YAAY,EAAER,SAAS,CAACe;AALH,CAAvB;AAQAZ,UAAU,CAACa,YAAX,GAA0B;AACxBZ,EAAAA,KAAK,EAAE,EADiB;AAExBI,EAAAA,YAAY,EAAEH,KAAK,IAAIA;AAFC,CAA1B;AAKA,eAAeF,UAAf","sourcesContent":["import 'rc-slider/assets/index.css';\nimport React from 'react';\nimport Slider from 'rc-slider';\nimport PropTypes from 'prop-types';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst RangeTheme = ({\n  marks, value, min, max, tipFormatter,\n}) => (\n  <div className=\"slider\">\n    <div className=\"slider__min\">\n      <p>{tipFormatter ? tipFormatter(min) : min}</p>\n    </div>\n    <div className=\"slider__max\">\n      <p>{tipFormatter ? tipFormatter(max) : max}</p>\n    </div>\n    <Range\n      min={min}\n      max={max}\n      defaultValue={value}\n      tipFormatter={tipFormatter}\n      marks={marks}\n      tipProps={{ visible: true }}\n    />\n  </div>\n);\n\nRangeTheme.propTypes = {\n  marks: PropTypes.shape(),\n  value: PropTypes.arrayOf(PropTypes.number).isRequired,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  tipFormatter: PropTypes.func,\n};\n\nRangeTheme.defaultProps = {\n  marks: {},\n  tipFormatter: value => value,\n};\n\nexport default RangeTheme;\n"]},"metadata":{},"sourceType":"module"}