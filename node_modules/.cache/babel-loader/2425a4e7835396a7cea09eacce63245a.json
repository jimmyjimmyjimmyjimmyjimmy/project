{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Charts/Recharts/components/SimpleAreaChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst SimpleAreaChart = ({\n  dir\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation('common');\n  return /*#__PURE__*/_jsxDEV(Col, {\n    xs: 12,\n    md: 12,\n    lg: 6,\n    xl: 4,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"bold-text\",\n            children: t('charts.recharts.simple_area_chart')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dir: \"ltr\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            height: 300,\n            children: /*#__PURE__*/_jsxDEV(AreaChart, {\n              data: data,\n              margin: {\n                top: 0,\n                right: 0,\n                left: -15,\n                bottom: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\",\n                reversed: dir === 'rtl'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                orientation: dir === 'rtl' ? 'right' : 'left'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Area, {\n                type: \"monotone\",\n                dataKey: \"uv\",\n                stroke: \"#24d6a3\",\n                fill: \"#4ce1b6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleAreaChart, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SimpleAreaChart;\nSimpleAreaChart.propTypes = {\n  dir: PropTypes.string.isRequired\n};\nexport default SimpleAreaChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleAreaChart\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Charts/Recharts/components/SimpleAreaChart.jsx"],"names":["React","PropTypes","useTranslation","Card","CardBody","Col","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","data","name","uv","pv","amt","SimpleAreaChart","dir","t","top","right","left","bottom","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nconst SimpleAreaChart = ({ dir }) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Col xs={12} md={12} lg={6} xl={4}>\n      <Card>\n        <CardBody>\n          <div className=\"card__title\">\n            <h5 className=\"bold-text\">{t('charts.recharts.simple_area_chart')}</h5>\n          </div>\n          <div dir=\"ltr\">\n            <ResponsiveContainer height={300}>\n              <AreaChart\n                data={data}\n                margin={{\n                  top: 0, right: 0, left: -15, bottom: 0,\n                }}\n              >\n                <XAxis dataKey=\"name\" reversed={dir === 'rtl'} />\n                <YAxis orientation={dir === 'rtl' ? 'right' : 'left'} />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#24d6a3\" fill=\"#4ce1b6\" />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nSimpleAreaChart.propTypes = {\n  dir: PropTypes.string.isRequired,\n};\n\nexport default SimpleAreaChart;\n"]},"metadata":{},"sourceType":"module"}