{"ast":null,"code":"var _jsxFileName = \"/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/FormField.jsx\";\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormField = ({\n  name,\n  errors,\n  control,\n  component: Component,\n  isAboveError,\n  defaultValue,\n  rules,\n  ...other\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `form__form-group-input-wrap ${isAboveError ? 'form__form-group-input-wrap--error-above' : ''}`,\n  children: [/*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    render: ({\n      field\n    }) => /*#__PURE__*/_jsxDEV(Component, { ...field,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this),\n    control: control,\n    defaultValue: defaultValue,\n    rules: rules\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this), (errors === null || errors === void 0 ? void 0 : errors[name]) && /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"form__form-group-error\",\n    children: errors[name].message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 26\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n_c = FormField;\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.shape({}),\n  control: PropTypes.shape({}).isRequired,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })]).isRequired,\n  isAboveError: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.elementType]),\n  rules: PropTypes.shape({})\n};\nFormField.defaultProps = {\n  errors: null,\n  isAboveError: false,\n  component: 'input',\n  rules: {}\n};\nexport default FormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"sources":["/Users/WAVE/Documents/project/src/containers/Form/ReactHookForm/FormHookValidation/components/FormField.jsx"],"names":["React","Controller","PropTypes","FormField","name","errors","control","component","Component","isAboveError","defaultValue","rules","other","field","message","propTypes","string","isRequired","shape","oneOfType","bool","value","label","func","elementType","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACtBC,EAAAA,IADsB;AAEtBC,EAAAA,MAFsB;AAGtBC,EAAAA,OAHsB;AAItBC,EAAAA,SAAS,EAAEC,SAJW;AAKtBC,EAAAA,YALsB;AAMtBC,EAAAA,YANsB;AAOtBC,EAAAA,KAPsB;AAQtB,KAAGC;AARmB,CAAD,kBAUrB;AAAK,EAAA,SAAS,EAAG,+BAA8BH,YAAY,GAAG,0CAAH,GAAgD,EAAG,EAA9G;AAAA,0BACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,MAAM,EAAE,CAAC;AAAES,MAAAA;AAAF,KAAD,kBAAe,QAAC,SAAD,OAAeA,KAAf;AAAA,SAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGE,IAAA,OAAO,EAAEN,OAHX;AAIE,IAAA,YAAY,EAAEI,YAJhB;AAKE,IAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,UADF,EAQG,CAAAN,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAGD,IAAH,CAAN,kBAAkB;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA,cAA0CC,MAAM,CAACD,IAAD,CAAN,CAAaU;AAAvD;AAAA;AAAA;AAAA;AAAA,UARrB;AAAA;AAAA;AAAA;AAAA;AAAA,QAVG;KAAMX,S;AAsBbA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,IAAI,EAAEF,SAAS,CAACc,MAAV,CAAiBC,UADH;AAEpBZ,EAAAA,MAAM,EAAEH,SAAS,CAACgB,KAAV,CAAgB,EAAhB,CAFY;AAGpBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACgB,KAAV,CAAgB,EAAhB,EAAoBD,UAHT;AAIpBP,EAAAA,YAAY,EAAER,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACkB,IAA7B,EAAmClB,SAAS,CAACgB,KAAV,CAAgB;AACnFG,IAAAA,KAAK,EAAEnB,SAAS,CAACc,MADkE;AAEnFM,IAAAA,KAAK,EAAEpB,SAAS,CAACc;AAFkE,GAAhB,CAAnC,CAApB,EAGTC,UAPe;AAQpBR,EAAAA,YAAY,EAAEP,SAAS,CAACkB,IARJ;AASpBb,EAAAA,SAAS,EAAEL,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACqB,IAAX,EAAiBrB,SAAS,CAACc,MAA3B,EAAmCd,SAAS,CAACsB,WAA7C,CAApB,CATS;AAUpBb,EAAAA,KAAK,EAAET,SAAS,CAACgB,KAAV,CAAgB,EAAhB;AAVa,CAAtB;AAaAf,SAAS,CAACsB,YAAV,GAAyB;AACvBpB,EAAAA,MAAM,EAAE,IADe;AAEvBI,EAAAA,YAAY,EAAE,KAFS;AAGvBF,EAAAA,SAAS,EAAE,OAHY;AAIvBI,EAAAA,KAAK,EAAE;AAJgB,CAAzB;AAOA,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\n\nexport const FormField = ({\n    name,\n    errors,\n    control,\n    component: Component,\n    isAboveError,\n    defaultValue,\n    rules,\n    ...other\n  }) => (\n    <div className={`form__form-group-input-wrap ${isAboveError ? 'form__form-group-input-wrap--error-above' : ''}`}>\n      <Controller\n        name={name}\n        render={({ field }) => <Component {...field} {...other} />}\n        control={control}\n        defaultValue={defaultValue}\n        rules={rules}\n      />\n      {errors?.[name] && <span className=\"form__form-group-error\">{errors[name].message}</span>}\n    </div>\n);\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.shape({}),\n  control: PropTypes.shape({}).isRequired,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })]).isRequired,\n  isAboveError: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.elementType]),\n  rules: PropTypes.shape({}),\n};\n\nFormField.defaultProps = {\n  errors: null,\n  isAboveError: false,\n  component: 'input',\n  rules: {},\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}